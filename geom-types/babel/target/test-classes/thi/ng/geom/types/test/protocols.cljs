(ns thi.ng.geom.types.test.protocols
        
  (:require-macros
   [cemerick.cljs.test :refer (is deftest with-test run-tests testing)])
  (:require
   [thi.ng.geom.core :as g]
   [thi.ng.geom.types]
   [thi.ng.geom.aabb]
   [thi.ng.geom.bezier]
   [thi.ng.geom.circle]
   [thi.ng.geom.cuboid]
   [thi.ng.geom.gmesh]
   [thi.ng.geom.line]
   [thi.ng.geom.path]
   [thi.ng.geom.plane]
   [thi.ng.geom.polygon]
   [thi.ng.geom.quad]
   [thi.ng.geom.rect]
   [thi.ng.geom.sphere]
   [thi.ng.geom.tetrahedron]
   [thi.ng.geom.triangle]
                                   
          [cemerick.cljs.test :as t]))

(def proto-ids
  {:area      g/PArea
   :bcircle   g/PBoundingCircle
   :boundary  g/PBoundary
   :bounds    g/PBounds
   :bsphere   g/PBoundingSphere
   :center    g/PCenter
   :chull     g/PConvexHull
   :circum    g/PCircumference
   :class     g/PClassify
   :clip      g/PClip
   :conj      g/PConjugate
   :cross     g/PCrossProduct
   :det       g/PDeterminant
   :dist      g/PDistance
   :dot       g/PDotProduct
   :edge      g/PEdgeAccess
   :ext       g/PExtrude
   :face      g/PFaceAccess
   :flip      g/PFlip
   :graph     g/PGraph
   :head      g/PHeading
   :inv       g/PInvert
   :isec      g/PIntersect
   :limit     g/PLimit
   :mag       g/PMagnitude
   :mat       g/PMatrixConvert
   :math      g/PMathOps
   :mesh      g/PMeshConvert
   :mimax     g/PMinMax
   :mix       g/PInterpolate
   :norm      g/PNormalize
   :polar     g/PPolar
   :poly      g/PPolygonConvert
   :prox      g/PProximity
   :refl      g/PReflect
   :rot3d     g/PRotate3D
   :rotate    g/PRotate
   :sample    g/PSample
   :scale     g/PScale
   :shear     g/PShear
   :subdiv    g/PSubdivide
   :tess      g/PTessellate
   :translate g/PTranslate
   :tx        g/PTransform
   :vert      g/PVertexAccess
   :vol       g/PVolume
   :vtx       g/PVectorTransform
   })

(def shape-common
  #{:area :bounds :boundary :center :class :edge :graph :mesh
    :rotate :sample :scale :tess :translate :tx :vert :vol})

(def shape-common-2d
  (conj shape-common :bcircle :circum :ext :poly))

(def shape-common-3d
  (conj shape-common :bsphere))

     
                    
                 
          
                     
                     
                                               
                                                        

     
                                   
        
       
                                                     
     
          

                              
                                       

                            
                                                                     

                               
                                                          

                            
                                               

                                
                                                     

          

                           
                                               

                             
                                               

                            
                                                               

                            
                                                                           
     
                            
                                                     

                             
                                       

                                  
                                                     

                                
                                                     

         

;;;;;;;;;;;; This file autogenerated from test/cljx/thi/ng/geom/types/test/protocols.cljx
