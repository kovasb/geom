// Compiled by ClojureScript 0.0-2202
goog.provide('thi.ng.geom.webgl.shaders.shadow');
goog.require('cljs.core');
goog.require('thi.ng.geom.webgl.shaders');
goog.require('thi.ng.geom.webgl.shaders');
goog.require('thi.ng.geom.webgl.buffers');
goog.require('thi.ng.geom.webgl.buffers');
goog.require('thi.ng.geom.webgl.core');
goog.require('thi.ng.geom.webgl.core');
thi.ng.geom.webgl.shaders.shadow.light_pass_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"vs","vs",1013908015),"\n  void main() {\n    vWorldPos = model * vec4(position, 1.0);\n    gl_Position = proj * view * vWorldPos;\n  }",new cljs.core.Keyword(null,"fs","fs",1013907519),"\n  void main() {\n    vec3 lightPos = (view * vWorldPos).xyz;\n    float depth = clamp(length(lightPos)/10.0, 0.0, 1.0);\n    gl_FragColor = vec4(vec3(depth), 1.0);\n  }",new cljs.core.Keyword(null,"uniforms","uniforms",709120177),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"view","view",1017523735),new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"proj","proj",1017353935),new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"model","model",1117974171),new cljs.core.Keyword(null,"mat4","mat4",1017248326)], null),new cljs.core.Keyword(null,"attribs","attribs",4634025563),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"position","position",1761709211),new cljs.core.Keyword(null,"vec3","vec3",1017519761)], null),new cljs.core.Keyword(null,"varying","varying",1251174370),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"vWorldPos","vWorldPos",2583502698),new cljs.core.Keyword(null,"vec4","vec4",1017519762)], null)], null);
thi.ng.geom.webgl.shaders.shadow.cam_pass_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"vs","vs",1013908015),"\n  void main(){\n    vNormal = normal;\n    vWorldPos = model * vec4(position, 1.0);\n    gl_Position = proj * view * vWorldPos;\n  }",new cljs.core.Keyword(null,"fs","fs",1013907519),"\n  float attenuation(vec3 dir) {\n    float dist = length(dir);\n    float radiance = 1.0/(1.0+pow(dist/10.0, 2.0));\n    return clamp(radiance*10.0, 0.0, 1.0);\n  }\n  \n  float influence(vec3 normal, float coneAngle) {\n    float minConeAngle = (360.0-coneAngle-10.0) * RAD;\n    float maxConeAngle = (360.0-coneAngle) * RAD;\n    return smoothstep(minConeAngle, maxConeAngle, acos(normal.z));\n  }\n  \n  float lambert(vec3 surfaceNormal, vec3 lightDirNormal) {\n    return max(0.0, dot(surfaceNormal, lightDirNormal));\n  }\n  \n  vec3 skyLight(vec3 normal) {\n    return vec3(smoothstep(0.0, PI, PI-acos(normal.y)))*0.4;\n  }\n  \n  vec3 gamma(vec3 color) {\n    return pow(color, vec3(2.2));\n  }\n  \n  float texture2DCompare(sampler2D depths, vec2 uv, float compare) {\n    float depth = texture2D(depths, uv).r;\n    return step(compare, depth);\n  }\n  \n  float texture2DShadowLerp(sampler2D depths, vec2 size, vec2 uv, float compare) {\n    vec2 texelSize = vec2(1.0)/size;\n    vec2 f = fract(uv * size + 0.5);\n    vec2 centroidUV = floor(uv * size + 0.5) / size;\n  \n    float lb = texture2DCompare(depths, centroidUV + texelSize * vec2(0.0, 0.0), compare);\n    float lt = texture2DCompare(depths, centroidUV + texelSize * vec2(0.0, 1.0), compare);\n    float rb = texture2DCompare(depths, centroidUV + texelSize * vec2(1.0, 0.0), compare);\n    float rt = texture2DCompare(depths, centroidUV + texelSize * vec2(1.0, 1.0), compare);\n    return mix(mix(lb, lt, f.y), mix(rb, rt, f.y), f.x);\n  }\n  \n  void main() {\n    vec3 worldNormal = normalize(vNormal);\n  \n    vec3 camPos = (view * vWorldPos).xyz;\n    vec3 lightPos = (lightView * vWorldPos).xyz;\n    vec3 lightPosNormal = normalize(lightPos);\n    vec3 lightSurfaceNormal = lightRot * worldNormal;\n  \n    vec4 lightDevice = lightProj * vec4(lightPos, 1.0);\n    vec2 lightDeviceNormal = lightDevice.xy/lightDevice.w;\n    vec2 lightUV = lightDeviceNormal*0.5+0.5;\n  \n    // shadow calculation\n    float bias = 1e-4;\n    float lightDepth2 = clamp(length(lightPos)/10.0, 0.0, 1.0)-bias;\n    float illuminated = texture2DShadowLerp(lightDepthTex, lightDepthSize, lightUV, lightDepth2);\n  \n    vec3 excident = (\n                     skyLight(worldNormal) +\n                     lambert(lightSurfaceNormal, -lightPosNormal) *\n                     influence(lightPosNormal, coneAngle) *\n                     attenuation(lightPos) *\n                     illuminated\n                     );\n  \n    excident *=  worldNormal * 0.5 + 0.5; // TODO remove, debug only\n  \n    gl_FragColor = vec4(gamma(excident), 1.0);\n  }",new cljs.core.Keyword(null,"uniforms","uniforms",709120177),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"lightView","lightView",1699634253),new cljs.core.Keyword(null,"lightRot","lightRot",2005852243),new cljs.core.Keyword(null,"lightDepthTex","lightDepthTex",2496002316),new cljs.core.Keyword(null,"proj","proj",1017353935),new cljs.core.Keyword(null,"coneAngle","coneAngle",4439067362),new cljs.core.Keyword(null,"lightDepthSize","lightDepthSize",4009245792),new cljs.core.Keyword(null,"lightProj","lightProj",1699464453),new cljs.core.Keyword(null,"view","view",1017523735),new cljs.core.Keyword(null,"model","model",1117974171)],[new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"mat3","mat3",1017248325),new cljs.core.Keyword(null,"sampler2D","sampler2D",2126927820),new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"float","float",1111430606),new cljs.core.Keyword(null,"vec2","vec2",1017519760),new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"mat4","mat4",1017248326),new cljs.core.Keyword(null,"mat4","mat4",1017248326)]),new cljs.core.Keyword(null,"attribs","attribs",4634025563),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"position","position",1761709211),new cljs.core.Keyword(null,"vec3","vec3",1017519761),new cljs.core.Keyword(null,"normal","normal",4269125721),new cljs.core.Keyword(null,"vec3","vec3",1017519761)], null),new cljs.core.Keyword(null,"varying","varying",1251174370),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"vNormal","vNormal",704244847),new cljs.core.Keyword(null,"vec3","vec3",1017519761),new cljs.core.Keyword(null,"vWorldPos","vWorldPos",2583502698),new cljs.core.Keyword(null,"vec4","vec4",1017519762)], null)], null);
thi.ng.geom.webgl.shaders.shadow.init_light_fbo = (function init_light_fbo(gl,size){var float_ext = (gl["getFloatExtension"]).call(gl,cljs.core.clj__GT_js.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"require","require",2109600983),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["renderable"], null),new cljs.core.Keyword(null,"prefer","prefer",4328760706),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filterable","half"], null)], null)));var tex = thi.ng.geom.webgl.buffers.make_texture2d.call(null,gl,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"type","type",1017479852),float_ext.type,new cljs.core.Keyword(null,"width","width",1127031096),size,new cljs.core.Keyword(null,"height","height",4087841945),size,new cljs.core.Keyword(null,"filter","filter",4034379498),thi.ng.geom.webgl.core.linear,new cljs.core.Keyword(null,"wrap","wrap",1017562044),thi.ng.geom.webgl.core.clamp_to_edge], null));return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tex","tex",1014018969),tex,new cljs.core.Keyword(null,"fbo","fbo",1014005413),thi.ng.geom.webgl.core.unbind.call(null,thi.ng.geom.webgl.core.set_fbo_depth_buffer.call(null,thi.ng.geom.webgl.core.set_fbo_color_texture.call(null,thi.ng.geom.webgl.core.bind.call(null,thi.ng.geom.webgl.buffers.make_fbo.call(null,gl)),tex),thi.ng.geom.webgl.buffers.make_depth_buffer.call(null,gl,size,size)))], null);
});
thi.ng.geom.webgl.shaders.shadow.draw_light_pass = (function draw_light_pass(gl,p__6123,draw){var map__6126 = p__6123;var map__6126__$1 = ((cljs.core.seq_QMARK_.call(null,map__6126))?cljs.core.apply.call(null,cljs.core.hash_map,map__6126):map__6126);var tex = cljs.core.get.call(null,map__6126__$1,new cljs.core.Keyword(null,"tex","tex",1014018969));var fbo = cljs.core.get.call(null,map__6126__$1,new cljs.core.Keyword(null,"fbo","fbo",1014005413));thi.ng.geom.webgl.core.bind.call(null,fbo);
var G__6127_6128 = gl;thi.ng.geom.webgl.core.set_viewport.call(null,G__6127_6128,0,0,new cljs.core.Keyword(null,"width","width",1127031096).cljs$core$IFn$_invoke$arity$1(tex),new cljs.core.Keyword(null,"height","height",4087841945).cljs$core$IFn$_invoke$arity$1(tex));
thi.ng.geom.webgl.core.clear_color_buffer.call(null,G__6127_6128,1,1,1,1);
thi.ng.geom.webgl.core.clear_depth_buffer.call(null,G__6127_6128,1);
thi.ng.geom.webgl.core.enable.call(null,G__6127_6128,thi.ng.geom.webgl.core.depth_test);
thi.ng.geom.webgl.core.cull_faces.call(null,G__6127_6128,thi.ng.geom.webgl.core.front);
draw.call(null);
return thi.ng.geom.webgl.core.unbind.call(null,fbo);
});
thi.ng.geom.webgl.shaders.shadow.draw_cam_pass = (function draw_cam_pass(gl,tex,draw){var G__6130_6131 = gl;thi.ng.geom.webgl.core.clear_depth_buffer.call(null,G__6130_6131,1);
thi.ng.geom.webgl.core.enable.call(null,G__6130_6131,thi.ng.geom.webgl.core.depth_test);
thi.ng.geom.webgl.core.cull_faces.call(null,G__6130_6131,thi.ng.geom.webgl.core.back);
thi.ng.geom.webgl.core.bind.call(null,tex,0);
return draw.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"lightDepthTex","lightDepthTex",2496002316),0,new cljs.core.Keyword(null,"lightDepthSize","lightDepthSize",4009245792),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"width","width",1127031096).cljs$core$IFn$_invoke$arity$1(tex),new cljs.core.Keyword(null,"height","height",4087841945).cljs$core$IFn$_invoke$arity$1(tex)], null)], null));
});
