var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
      value = goog.global.CLOSURE_DEFINES[name];
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.DEBUG) {
    if (!caller) {
      throw Error("arguments.caller not defined.  goog.base() expects not " + "to be running in strict mode. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
    }
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;").replace(goog.string.singleQuoteRe_, "\x26#39;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.singleQuoteRe_, "\x26#39;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /"/g;
goog.string.singleQuoteRe_ = /'/g;
goog.string.allRe_ = /[&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2202";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6269__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__6269 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6269__delegate.call(this, args);
    };
    G__6269.cljs$lang$maxFixedArity = 0;
    G__6269.cljs$lang$applyTo = function(arglist__6270) {
      var args = cljs.core.seq(arglist__6270);
      return G__6269__delegate(args);
    };
    G__6269.cljs$core$IFn$_invoke$arity$variadic = G__6269__delegate;
    return G__6269;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3469__auto__ = ty;
    if (cljs.core.truth_(and__3469__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3469__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4329__auto___6271 = len;
  var i_6272 = 0;
  while (true) {
    if (i_6272 < n__4329__auto___6271) {
      new_arr[i_6272] = arr[i_6272];
      var G__6273 = i_6272 + 1;
      i_6272 = G__6273;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__6274__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__6274 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6274__delegate.call(this, array, i, idxs);
    };
    G__6274.cljs$lang$maxFixedArity = 2;
    G__6274.cljs$lang$applyTo = function(arglist__6275) {
      var array = cljs.core.first(arglist__6275);
      arglist__6275 = cljs.core.next(arglist__6275);
      var i = cljs.core.first(arglist__6275);
      var idxs = cljs.core.rest(arglist__6275);
      return G__6274__delegate(array, i, idxs);
    };
    G__6274.cljs$core$IFn$_invoke$arity$variadic = G__6274__delegate;
    return G__6274;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__6276__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__6276 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6276__delegate.call(this, array, idx, idx2, idxv);
    };
    G__6276.cljs$lang$maxFixedArity = 3;
    G__6276.cljs$lang$applyTo = function(arglist__6277) {
      var array = cljs.core.first(arglist__6277);
      arglist__6277 = cljs.core.next(arglist__6277);
      var idx = cljs.core.first(arglist__6277);
      arglist__6277 = cljs.core.next(arglist__6277);
      var idx2 = cljs.core.first(arglist__6277);
      var idxv = cljs.core.rest(arglist__6277);
      return G__6276__delegate(array, idx, idx2, idxv);
    };
    G__6276.cljs$core$IFn$_invoke$arity$variadic = G__6276__delegate;
    return G__6276;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj6279 = {};
  return obj6279;
}();
cljs.core.IFn = function() {
  var obj6281 = {};
  return obj6281;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = cljs.core._invoke[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._invoke["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj6283 = {};
  return obj6283;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3469__auto__ = value;
    if (and__3469__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4108__auto__ = value == null ? null : value;
    return function() {
      var or__3481__auto__ = cljs.core._clone[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._clone["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj6285 = {};
  return obj6285;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._count[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._count["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj6287 = {};
  return obj6287;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._empty[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._empty["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj6289 = {};
  return obj6289;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._conj[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._conj["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj6291 = {};
  return obj6291;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._nth[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._nth["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._nth[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._nth["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj6293 = {};
  return obj6293;
}();
cljs.core.ISeq = function() {
  var obj6295 = {};
  return obj6295;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._rest[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._rest["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj6297 = {};
  return obj6297;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._next[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._next["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj6299 = {};
  return obj6299;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._lookup[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._lookup["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._lookup[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._lookup["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj6301 = {};
  return obj6301;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj6303 = {};
  return obj6303;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._dissoc[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dissoc["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj6305 = {};
  return obj6305;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._key[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._key["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._val[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._val["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj6307 = {};
  return obj6307;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._disjoin[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._disjoin["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj6309 = {};
  return obj6309;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._peek[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._peek["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._pop[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pop["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj6311 = {};
  return obj6311;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_n[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj6313 = {};
  return obj6313;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._deref[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._deref["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj6315 = {};
  return obj6315;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj6317 = {};
  return obj6317;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._meta[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._meta["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj6319 = {};
  return obj6319;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._with_meta[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._with_meta["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj6321 = {};
  return obj6321;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._reduce[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._reduce["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3469__auto__ = coll;
      if (and__3469__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4108__auto__ = coll == null ? null : coll;
      return function() {
        var or__3481__auto__ = cljs.core._reduce[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._reduce["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj6323 = {};
  return obj6323;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj6325 = {};
  return obj6325;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._equiv[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._equiv["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj6327 = {};
  return obj6327;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._hash[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._hash["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj6329 = {};
  return obj6329;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._seq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._seq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj6331 = {};
  return obj6331;
}();
cljs.core.IList = function() {
  var obj6333 = {};
  return obj6333;
}();
cljs.core.IRecord = function() {
  var obj6335 = {};
  return obj6335;
}();
cljs.core.IReversible = function() {
  var obj6337 = {};
  return obj6337;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._rseq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._rseq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj6339 = {};
  return obj6339;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._entry_key[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._entry_key["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._comparator[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._comparator["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj6341 = {};
  return obj6341;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3469__auto__ = writer;
    if (and__3469__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4108__auto__ = writer == null ? null : writer;
    return function() {
      var or__3481__auto__ = cljs.core._write[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._write["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3469__auto__ = writer;
    if (and__3469__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4108__auto__ = writer == null ? null : writer;
    return function() {
      var or__3481__auto__ = cljs.core._flush[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._flush["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj6343 = {};
  return obj6343;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._pr_writer[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj6345 = {};
  return obj6345;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3469__auto__ = d;
    if (and__3469__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4108__auto__ = d == null ? null : d;
    return function() {
      var or__3481__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj6347 = {};
  return obj6347;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._notify_watches[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._add_watch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._add_watch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = cljs.core._remove_watch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj6349 = {};
  return obj6349;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._as_transient[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._as_transient["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj6351 = {};
  return obj6351;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj6353 = {};
  return obj6353;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj6355 = {};
  return obj6355;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj6357 = {};
  return obj6357;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj6359 = {};
  return obj6359;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3469__auto__ = tcoll;
    if (and__3469__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4108__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3481__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj6361 = {};
  return obj6361;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._compare[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._compare["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj6363 = {};
  return obj6363;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._drop_first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._drop_first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj6365 = {};
  return obj6365;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_first[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj6367 = {};
  return obj6367;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = cljs.core._chunked_next[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj6369 = {};
  return obj6369;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._name[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._name["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._namespace[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._namespace["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3469__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3469__auto__) {
        return b.ns;
      } else {
        return and__3469__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3892__auto__ = self__._hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__6371 = null;
  var G__6371__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__6371__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__6371 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6371__2.call(this, self__, coll);
      case 3:
        return G__6371__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6371;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6370) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6370)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__6373 = value;
  if (G__6373) {
    var bit__4131__auto__ = G__6373.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4131__auto__ || G__6373.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__6373.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6373);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__6373);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6375 = coll;
      if (G__6375) {
        var bit__4124__auto__ = G__6375.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4124__auto__ || G__6375.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6377 = coll;
      if (G__6377) {
        var bit__4124__auto__ = G__6377.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__6377.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6379 = coll;
      if (G__6379) {
        var bit__4124__auto__ = G__6379.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__6379.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6381 = coll;
      if (G__6381) {
        var bit__4124__auto__ = G__6381.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4124__auto__ || G__6381.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__6382__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6383 = y;
            var G__6384 = cljs.core.first.call(null, more);
            var G__6385 = cljs.core.next.call(null, more);
            x = G__6383;
            y = G__6384;
            more = G__6385;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6382 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6382__delegate.call(this, x, y, more);
    };
    G__6382.cljs$lang$maxFixedArity = 2;
    G__6382.cljs$lang$applyTo = function(arglist__6386) {
      var x = cljs.core.first(arglist__6386);
      arglist__6386 = cljs.core.next(arglist__6386);
      var y = cljs.core.first(arglist__6386);
      var more = cljs.core.rest(arglist__6386);
      return G__6382__delegate(x, y, more);
    };
    G__6382.cljs$core$IFn$_invoke$arity$variadic = G__6382__delegate;
    return G__6382;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6387 = nval;
            var G__6388 = n + 1;
            val = G__6387;
            n = G__6388;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6389 = nval;
          var G__6390 = n + 1;
          val__$1 = G__6389;
          n = G__6390;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6391 = nval;
          var G__6392 = n + 1;
          val__$1 = G__6391;
          n = G__6392;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__6393 = nval;
            var G__6394 = n + 1;
            val = G__6393;
            n = G__6394;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6395 = nval;
          var G__6396 = n + 1;
          val__$1 = G__6395;
          n = G__6396;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6397 = nval;
          var G__6398 = n + 1;
          val__$1 = G__6397;
          n = G__6398;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__6400 = x;
  if (G__6400) {
    var bit__4131__auto__ = G__6400.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4131__auto__ || G__6400.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__6400.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6400);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__6400);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__6402 = x;
  if (G__6402) {
    var bit__4131__auto__ = G__6402.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4131__auto__ || G__6402.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__6402.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6402);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__6402);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__6403 = sn;
      s = G__6403;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__6404__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__6405 = conj.call(null, coll, x);
          var G__6406 = cljs.core.first.call(null, xs);
          var G__6407 = cljs.core.next.call(null, xs);
          coll = G__6405;
          x = G__6406;
          xs = G__6407;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__6404 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6404__delegate.call(this, coll, x, xs);
    };
    G__6404.cljs$lang$maxFixedArity = 2;
    G__6404.cljs$lang$applyTo = function(arglist__6408) {
      var coll = cljs.core.first(arglist__6408);
      arglist__6408 = cljs.core.next(arglist__6408);
      var x = cljs.core.first(arglist__6408);
      var xs = cljs.core.rest(arglist__6408);
      return G__6404__delegate(coll, x, xs);
    };
    G__6404.cljs$core$IFn$_invoke$arity$variadic = G__6404__delegate;
    return G__6404;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__6409 = cljs.core.next.call(null, s);
      var G__6410 = acc + 1;
      s = G__6409;
      acc = G__6410;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6412 = coll;
      if (G__6412) {
        var bit__4124__auto__ = G__6412.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4124__auto__ || G__6412.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6413 = cljs.core.next.call(null, coll);
              var G__6414 = n - 1;
              coll = G__6413;
              n = G__6414;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__6415 = cljs.core.next.call(null, coll);
              var G__6416 = n - 1;
              var G__6417 = not_found;
              coll = G__6415;
              n = G__6416;
              not_found = G__6417;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__6422 = coll;
          if (G__6422) {
            var bit__4124__auto__ = G__6422.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4124__auto__ || G__6422.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6423 = coll;
                  if (G__6423) {
                    var bit__4131__auto__ = G__6423.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4131__auto__ || G__6423.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6423.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6423);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6423);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__6424 = coll;
          if (G__6424) {
            var bit__4124__auto__ = G__6424.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4124__auto__ || G__6424.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__6425 = coll;
                  if (G__6425) {
                    var bit__4131__auto__ = G__6425.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4131__auto__ || G__6425.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__6425.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6425);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6425);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__6428 = o;
        if (G__6428) {
          var bit__4124__auto__ = G__6428.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4124__auto__ || G__6428.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__6429 = o;
        if (G__6429) {
          var bit__4124__auto__ = G__6429.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4124__auto__ || G__6429.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__6430__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__6431 = ret;
          var G__6432 = cljs.core.first.call(null, kvs);
          var G__6433 = cljs.core.second.call(null, kvs);
          var G__6434 = cljs.core.nnext.call(null, kvs);
          coll = G__6431;
          k = G__6432;
          v = G__6433;
          kvs = G__6434;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__6430 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6430__delegate.call(this, coll, k, v, kvs);
    };
    G__6430.cljs$lang$maxFixedArity = 3;
    G__6430.cljs$lang$applyTo = function(arglist__6435) {
      var coll = cljs.core.first(arglist__6435);
      arglist__6435 = cljs.core.next(arglist__6435);
      var k = cljs.core.first(arglist__6435);
      arglist__6435 = cljs.core.next(arglist__6435);
      var v = cljs.core.first(arglist__6435);
      var kvs = cljs.core.rest(arglist__6435);
      return G__6430__delegate(coll, k, v, kvs);
    };
    G__6430.cljs$core$IFn$_invoke$arity$variadic = G__6430__delegate;
    return G__6430;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6436__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6437 = ret;
            var G__6438 = cljs.core.first.call(null, ks);
            var G__6439 = cljs.core.next.call(null, ks);
            coll = G__6437;
            k = G__6438;
            ks = G__6439;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6436 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6436__delegate.call(this, coll, k, ks);
    };
    G__6436.cljs$lang$maxFixedArity = 2;
    G__6436.cljs$lang$applyTo = function(arglist__6440) {
      var coll = cljs.core.first(arglist__6440);
      arglist__6440 = cljs.core.next(arglist__6440);
      var k = cljs.core.first(arglist__6440);
      var ks = cljs.core.rest(arglist__6440);
      return G__6436__delegate(coll, k, ks);
    };
    G__6436.cljs$core$IFn$_invoke$arity$variadic = G__6436__delegate;
    return G__6436;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3481__auto__ = goog.isFunction(f);
  if (or__3481__auto__) {
    return or__3481__auto__;
  } else {
    var G__6444 = f;
    if (G__6444) {
      var bit__4131__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3481__auto____$1 = bit__4131__auto__;
        if (cljs.core.truth_(or__3481__auto____$1)) {
          return or__3481__auto____$1;
        } else {
          return G__6444.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6444.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6444);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__6444);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__6452 = o;
    if (G__6452) {
      var bit__4131__auto__ = G__6452.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4131__auto__ || G__6452.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6452.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6452);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6452);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t6453 !== "undefined") {
      } else {
        cljs.core.t6453 = function(meta, o, with_meta, meta6454) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta6454 = meta6454;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t6453.cljs$lang$type = true;
        cljs.core.t6453.cljs$lang$ctorStr = "cljs.core/t6453";
        cljs.core.t6453.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
          return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/t6453");
        };
        cljs.core.t6453.prototype.call = function() {
          var G__6457__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__6457 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__6457__delegate.call(this, self__, args);
          };
          G__6457.cljs$lang$maxFixedArity = 1;
          G__6457.cljs$lang$applyTo = function(arglist__6458) {
            var self__ = cljs.core.first(arglist__6458);
            var args = cljs.core.rest(arglist__6458);
            return G__6457__delegate(self__, args);
          };
          G__6457.cljs$core$IFn$_invoke$arity$variadic = G__6457__delegate;
          return G__6457;
        }();
        cljs.core.t6453.prototype.apply = function(self__, args6456) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6456)));
        };
        cljs.core.t6453.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__6459__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__6459 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6459__delegate.call(this, args);
          };
          G__6459.cljs$lang$maxFixedArity = 0;
          G__6459.cljs$lang$applyTo = function(arglist__6460) {
            var args = cljs.core.seq(arglist__6460);
            return G__6459__delegate(args);
          };
          G__6459.cljs$core$IFn$_invoke$arity$variadic = G__6459__delegate;
          return G__6459;
        }();
        cljs.core.t6453.prototype.cljs$core$Fn$ = true;
        cljs.core.t6453.prototype.cljs$core$IMeta$_meta$arity$1 = function(_6455) {
          var self__ = this;
          var _6455__$1 = this;
          return self__.meta6454;
        };
        cljs.core.t6453.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_6455, meta6454__$1) {
          var self__ = this;
          var _6455__$1 = this;
          return new cljs.core.t6453(self__.meta, self__.o, self__.with_meta, meta6454__$1);
        };
        cljs.core.__GT_t6453 = function __GT_t6453(meta__$1, o__$1, with_meta__$1, meta6454) {
          return new cljs.core.t6453(meta__$1, o__$1, with_meta__$1, meta6454);
        };
      }
      return new cljs.core.t6453(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3469__auto__ = !(o == null);
    if (and__3469__auto__) {
      var G__6464 = o;
      if (G__6464) {
        var bit__4131__auto__ = G__6464.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4131__auto__ || G__6464.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6464.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6464);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__6464);
      }
    } else {
      return and__3469__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__6465__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6466 = ret;
            var G__6467 = cljs.core.first.call(null, ks);
            var G__6468 = cljs.core.next.call(null, ks);
            coll = G__6466;
            k = G__6467;
            ks = G__6468;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6465 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6465__delegate.call(this, coll, k, ks);
    };
    G__6465.cljs$lang$maxFixedArity = 2;
    G__6465.cljs$lang$applyTo = function(arglist__6469) {
      var coll = cljs.core.first(arglist__6469);
      arglist__6469 = cljs.core.next(arglist__6469);
      var k = cljs.core.first(arglist__6469);
      var ks = cljs.core.rest(arglist__6469);
      return G__6465__delegate(coll, k, ks);
    };
    G__6465.cljs$core$IFn$_invoke$arity$variadic = G__6465__delegate;
    return G__6465;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj6471 = {};
  return obj6471;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj6475 = {};
      return obj6475;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__6477 = o;
    if (G__6477) {
      var bit__4124__auto__ = G__6477.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4124__auto__ || G__6477.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6479 = x;
    if (G__6479) {
      var bit__4131__auto__ = G__6479.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4131__auto__ || G__6479.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6479.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6479);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__6479);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6481 = x;
    if (G__6481) {
      var bit__4131__auto__ = G__6481.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4131__auto__ || G__6481.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6481.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6481);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__6481);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6483 = x;
  if (G__6483) {
    var bit__4131__auto__ = G__6483.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4131__auto__ || G__6483.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6483.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6483);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__6483);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6485 = x;
  if (G__6485) {
    var bit__4131__auto__ = G__6485.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4131__auto__ || G__6485.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6485.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6485);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__6485);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6487 = x;
  if (G__6487) {
    var bit__4131__auto__ = G__6487.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4131__auto__ || G__6487.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6487.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6487);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__6487);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6489 = x;
  if (G__6489) {
    var bit__4131__auto__ = G__6489.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4131__auto__ || G__6489.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6489.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6489);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__6489);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6491 = x;
    if (G__6491) {
      var bit__4131__auto__ = G__6491.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4131__auto__ || G__6491.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6491.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6491);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__6491);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6493 = x;
  if (G__6493) {
    var bit__4131__auto__ = G__6493.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4131__auto__ || G__6493.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6493.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6493);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__6493);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6495 = x;
  if (G__6495) {
    var bit__4124__auto__ = G__6495.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4124__auto__ || G__6495.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6499 = {};
    return obj6499;
  };
  var js_obj__1 = function() {
    var G__6500__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__6500 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6500__delegate.call(this, keyvals);
    };
    G__6500.cljs$lang$maxFixedArity = 0;
    G__6500.cljs$lang$applyTo = function(arglist__6501) {
      var keyvals = cljs.core.seq(arglist__6501);
      return G__6500__delegate(keyvals);
    };
    G__6500.cljs$core$IFn$_invoke$arity$variadic = G__6500__delegate;
    return G__6500;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6502 = i__$1 + 1;
      var G__6503 = j__$1 + 1;
      var G__6504 = len__$1 - 1;
      i__$1 = G__6502;
      j__$1 = G__6503;
      len__$1 = G__6504;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6505 = i__$1 - 1;
      var G__6506 = j__$1 - 1;
      var G__6507 = len__$1 - 1;
      i__$1 = G__6505;
      j__$1 = G__6506;
      len__$1 = G__6507;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6509 = {};
  return obj6509;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6511 = s;
    if (G__6511) {
      var bit__4131__auto__ = G__6511.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4131__auto__ || G__6511.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6511.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6511);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__6511);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6513 = s;
  if (G__6513) {
    var bit__4131__auto__ = G__6513.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4131__auto__ || G__6513.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6513.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6513);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__6513);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3481__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3481__auto__) {
    return or__3481__auto__;
  } else {
    var G__6517 = f;
    if (G__6517) {
      var bit__4131__auto__ = G__6517.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4131__auto__ || G__6517.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6517.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6517);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__6517);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6518__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__6519 = cljs.core.conj.call(null, s, x__$1);
              var G__6520 = etc;
              s = G__6519;
              xs = G__6520;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6518 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6518__delegate.call(this, x, y, more);
    };
    G__6518.cljs$lang$maxFixedArity = 2;
    G__6518.cljs$lang$applyTo = function(arglist__6521) {
      var x = cljs.core.first(arglist__6521);
      arglist__6521 = cljs.core.next(arglist__6521);
      var y = cljs.core.first(arglist__6521);
      var more = cljs.core.rest(arglist__6521);
      return G__6518__delegate(x, y, more);
    };
    G__6518.cljs$core$IFn$_invoke$arity$variadic = G__6518__delegate;
    return G__6518;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3481__auto__ = cljs.core.seq.call(null, coll);
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__6523 = x;
            if (G__6523) {
              var bit__4124__auto__ = G__6523.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4124__auto__ || G__6523.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6524 = xs;
        var G__6525 = ys;
        var G__6526 = len;
        var G__6527 = n + 1;
        xs = G__6524;
        ys = G__6525;
        len = G__6526;
        n = G__6527;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__6528 = nval;
          var G__6529 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__6528;
          coll__$1 = G__6529;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6532 = coll;
      if (G__6532) {
        var bit__4124__auto__ = G__6532.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4124__auto__ || G__6532.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6533 = coll;
      if (G__6533) {
        var bit__4124__auto__ = G__6533.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4124__auto__ || G__6533.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6534__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__6534 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6534__delegate.call(this, x, y, more);
    };
    G__6534.cljs$lang$maxFixedArity = 2;
    G__6534.cljs$lang$applyTo = function(arglist__6535) {
      var x = cljs.core.first(arglist__6535);
      arglist__6535 = cljs.core.next(arglist__6535);
      var y = cljs.core.first(arglist__6535);
      var more = cljs.core.rest(arglist__6535);
      return G__6534__delegate(x, y, more);
    };
    G__6534.cljs$core$IFn$_invoke$arity$variadic = G__6534__delegate;
    return G__6534;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6536__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__6536 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6536__delegate.call(this, x, y, more);
    };
    G__6536.cljs$lang$maxFixedArity = 2;
    G__6536.cljs$lang$applyTo = function(arglist__6537) {
      var x = cljs.core.first(arglist__6537);
      arglist__6537 = cljs.core.next(arglist__6537);
      var y = cljs.core.first(arglist__6537);
      var more = cljs.core.rest(arglist__6537);
      return G__6536__delegate(x, y, more);
    };
    G__6536.cljs$core$IFn$_invoke$arity$variadic = G__6536__delegate;
    return G__6536;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6538__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__6538 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6538__delegate.call(this, x, y, more);
    };
    G__6538.cljs$lang$maxFixedArity = 2;
    G__6538.cljs$lang$applyTo = function(arglist__6539) {
      var x = cljs.core.first(arglist__6539);
      arglist__6539 = cljs.core.next(arglist__6539);
      var y = cljs.core.first(arglist__6539);
      var more = cljs.core.rest(arglist__6539);
      return G__6538__delegate(x, y, more);
    };
    G__6538.cljs$core$IFn$_invoke$arity$variadic = G__6538__delegate;
    return G__6538;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6540__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__6540 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6540__delegate.call(this, x, y, more);
    };
    G__6540.cljs$lang$maxFixedArity = 2;
    G__6540.cljs$lang$applyTo = function(arglist__6541) {
      var x = cljs.core.first(arglist__6541);
      arglist__6541 = cljs.core.next(arglist__6541);
      var y = cljs.core.first(arglist__6541);
      var more = cljs.core.rest(arglist__6541);
      return G__6540__delegate(x, y, more);
    };
    G__6540.cljs$core$IFn$_invoke$arity$variadic = G__6540__delegate;
    return G__6540;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6542__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__6543 = y;
            var G__6544 = cljs.core.first.call(null, more);
            var G__6545 = cljs.core.next.call(null, more);
            x = G__6543;
            y = G__6544;
            more = G__6545;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6542 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6542__delegate.call(this, x, y, more);
    };
    G__6542.cljs$lang$maxFixedArity = 2;
    G__6542.cljs$lang$applyTo = function(arglist__6546) {
      var x = cljs.core.first(arglist__6546);
      arglist__6546 = cljs.core.next(arglist__6546);
      var y = cljs.core.first(arglist__6546);
      var more = cljs.core.rest(arglist__6546);
      return G__6542__delegate(x, y, more);
    };
    G__6542.cljs$core$IFn$_invoke$arity$variadic = G__6542__delegate;
    return G__6542;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6547__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6548 = y;
            var G__6549 = cljs.core.first.call(null, more);
            var G__6550 = cljs.core.next.call(null, more);
            x = G__6548;
            y = G__6549;
            more = G__6550;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6547 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6547__delegate.call(this, x, y, more);
    };
    G__6547.cljs$lang$maxFixedArity = 2;
    G__6547.cljs$lang$applyTo = function(arglist__6551) {
      var x = cljs.core.first(arglist__6551);
      arglist__6551 = cljs.core.next(arglist__6551);
      var y = cljs.core.first(arglist__6551);
      var more = cljs.core.rest(arglist__6551);
      return G__6547__delegate(x, y, more);
    };
    G__6547.cljs$core$IFn$_invoke$arity$variadic = G__6547__delegate;
    return G__6547;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6552__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__6553 = y;
            var G__6554 = cljs.core.first.call(null, more);
            var G__6555 = cljs.core.next.call(null, more);
            x = G__6553;
            y = G__6554;
            more = G__6555;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6552 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6552__delegate.call(this, x, y, more);
    };
    G__6552.cljs$lang$maxFixedArity = 2;
    G__6552.cljs$lang$applyTo = function(arglist__6556) {
      var x = cljs.core.first(arglist__6556);
      arglist__6556 = cljs.core.next(arglist__6556);
      var y = cljs.core.first(arglist__6556);
      var more = cljs.core.rest(arglist__6556);
      return G__6552__delegate(x, y, more);
    };
    G__6552.cljs$core$IFn$_invoke$arity$variadic = G__6552__delegate;
    return G__6552;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6557__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__6558 = y;
            var G__6559 = cljs.core.first.call(null, more);
            var G__6560 = cljs.core.next.call(null, more);
            x = G__6558;
            y = G__6559;
            more = G__6560;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6557 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6557__delegate.call(this, x, y, more);
    };
    G__6557.cljs$lang$maxFixedArity = 2;
    G__6557.cljs$lang$applyTo = function(arglist__6561) {
      var x = cljs.core.first(arglist__6561);
      arglist__6561 = cljs.core.next(arglist__6561);
      var y = cljs.core.first(arglist__6561);
      var more = cljs.core.rest(arglist__6561);
      return G__6557__delegate(x, y, more);
    };
    G__6557.cljs$core$IFn$_invoke$arity$variadic = G__6557__delegate;
    return G__6557;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3788__auto__ = x;
    var y__3789__auto__ = y;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  };
  var max__3 = function() {
    var G__6562__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3788__auto__ = x;
        var y__3789__auto__ = y;
        return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
      }(), more);
    };
    var G__6562 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6562__delegate.call(this, x, y, more);
    };
    G__6562.cljs$lang$maxFixedArity = 2;
    G__6562.cljs$lang$applyTo = function(arglist__6563) {
      var x = cljs.core.first(arglist__6563);
      arglist__6563 = cljs.core.next(arglist__6563);
      var y = cljs.core.first(arglist__6563);
      var more = cljs.core.rest(arglist__6563);
      return G__6562__delegate(x, y, more);
    };
    G__6562.cljs$core$IFn$_invoke$arity$variadic = G__6562__delegate;
    return G__6562;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3795__auto__ = x;
    var y__3796__auto__ = y;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  };
  var min__3 = function() {
    var G__6564__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3795__auto__ = x;
        var y__3796__auto__ = y;
        return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
      }(), more);
    };
    var G__6564 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6564__delegate.call(this, x, y, more);
    };
    G__6564.cljs$lang$maxFixedArity = 2;
    G__6564.cljs$lang$applyTo = function(arglist__6565) {
      var x = cljs.core.first(arglist__6565);
      arglist__6565 = cljs.core.next(arglist__6565);
      var y = cljs.core.first(arglist__6565);
      var more = cljs.core.rest(arglist__6565);
      return G__6564__delegate(x, y, more);
    };
    G__6564.cljs$core$IFn$_invoke$arity$variadic = G__6564__delegate;
    return G__6564;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6566__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__6566 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6566__delegate.call(this, x, y, more);
    };
    G__6566.cljs$lang$maxFixedArity = 2;
    G__6566.cljs$lang$applyTo = function(arglist__6567) {
      var x = cljs.core.first(arglist__6567);
      arglist__6567 = cljs.core.next(arglist__6567);
      var y = cljs.core.first(arglist__6567);
      var more = cljs.core.rest(arglist__6567);
      return G__6566__delegate(x, y, more);
    };
    G__6566.cljs$core$IFn$_invoke$arity$variadic = G__6566__delegate;
    return G__6566;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6568__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__6568 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6568__delegate.call(this, x, y, more);
    };
    G__6568.cljs$lang$maxFixedArity = 2;
    G__6568.cljs$lang$applyTo = function(arglist__6569) {
      var x = cljs.core.first(arglist__6569);
      arglist__6569 = cljs.core.next(arglist__6569);
      var y = cljs.core.first(arglist__6569);
      var more = cljs.core.rest(arglist__6569);
      return G__6568__delegate(x, y, more);
    };
    G__6568.cljs$core$IFn$_invoke$arity$variadic = G__6568__delegate;
    return G__6568;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6570__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__6570 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6570__delegate.call(this, x, y, more);
    };
    G__6570.cljs$lang$maxFixedArity = 2;
    G__6570.cljs$lang$applyTo = function(arglist__6571) {
      var x = cljs.core.first(arglist__6571);
      arglist__6571 = cljs.core.next(arglist__6571);
      var y = cljs.core.first(arglist__6571);
      var more = cljs.core.rest(arglist__6571);
      return G__6570__delegate(x, y, more);
    };
    G__6570.cljs$core$IFn$_invoke$arity$variadic = G__6570__delegate;
    return G__6570;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6572__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__6572 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6572__delegate.call(this, x, y, more);
    };
    G__6572.cljs$lang$maxFixedArity = 2;
    G__6572.cljs$lang$applyTo = function(arglist__6573) {
      var x = cljs.core.first(arglist__6573);
      arglist__6573 = cljs.core.next(arglist__6573);
      var y = cljs.core.first(arglist__6573);
      var more = cljs.core.rest(arglist__6573);
      return G__6572__delegate(x, y, more);
    };
    G__6572.cljs$core$IFn$_invoke$arity$variadic = G__6572__delegate;
    return G__6572;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6574__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__6574 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6574__delegate.call(this, x, y, more);
    };
    G__6574.cljs$lang$maxFixedArity = 2;
    G__6574.cljs$lang$applyTo = function(arglist__6575) {
      var x = cljs.core.first(arglist__6575);
      arglist__6575 = cljs.core.next(arglist__6575);
      var y = cljs.core.first(arglist__6575);
      var more = cljs.core.rest(arglist__6575);
      return G__6574__delegate(x, y, more);
    };
    G__6574.cljs$core$IFn$_invoke$arity$variadic = G__6574__delegate;
    return G__6574;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__6576__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__6576 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6576__delegate.call(this, x, y, more);
    };
    G__6576.cljs$lang$maxFixedArity = 2;
    G__6576.cljs$lang$applyTo = function(arglist__6577) {
      var x = cljs.core.first(arglist__6577);
      arglist__6577 = cljs.core.next(arglist__6577);
      var y = cljs.core.first(arglist__6577);
      var more = cljs.core.rest(arglist__6577);
      return G__6576__delegate(x, y, more);
    };
    G__6576.cljs$core$IFn$_invoke$arity$variadic = G__6576__delegate;
    return G__6576;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__6578__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__6578 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6578__delegate.call(this, x, y, more);
    };
    G__6578.cljs$lang$maxFixedArity = 2;
    G__6578.cljs$lang$applyTo = function(arglist__6579) {
      var x = cljs.core.first(arglist__6579);
      arglist__6579 = cljs.core.next(arglist__6579);
      var y = cljs.core.first(arglist__6579);
      var more = cljs.core.rest(arglist__6579);
      return G__6578__delegate(x, y, more);
    };
    G__6578.cljs$core$IFn$_invoke$arity$variadic = G__6578__delegate;
    return G__6578;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6580__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__6581 = y;
            var G__6582 = cljs.core.first.call(null, more);
            var G__6583 = cljs.core.next.call(null, more);
            x = G__6581;
            y = G__6582;
            more = G__6583;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6580 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6580__delegate.call(this, x, y, more);
    };
    G__6580.cljs$lang$maxFixedArity = 2;
    G__6580.cljs$lang$applyTo = function(arglist__6584) {
      var x = cljs.core.first(arglist__6584);
      arglist__6584 = cljs.core.next(arglist__6584);
      var y = cljs.core.first(arglist__6584);
      var more = cljs.core.rest(arglist__6584);
      return G__6580__delegate(x, y, more);
    };
    G__6580.cljs$core$IFn$_invoke$arity$variadic = G__6580__delegate;
    return G__6580;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6585 = n__$1 - 1;
      var G__6586 = cljs.core.next.call(null, xs);
      n__$1 = G__6585;
      xs = G__6586;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__6587__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6588 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__6589 = cljs.core.next.call(null, more);
          sb = G__6588;
          more = G__6589;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6587 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__6587__delegate.call(this, x, ys);
    };
    G__6587.cljs$lang$maxFixedArity = 1;
    G__6587.cljs$lang$applyTo = function(arglist__6590) {
      var x = cljs.core.first(arglist__6590);
      var ys = cljs.core.rest(arglist__6590);
      return G__6587__delegate(x, ys);
    };
    G__6587.cljs$core$IFn$_invoke$arity$variadic = G__6587__delegate;
    return G__6587;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__6591 = cljs.core.next.call(null, xs);
            var G__6592 = cljs.core.next.call(null, ys);
            xs = G__6591;
            ys = G__6592;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6593 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__6594 = cljs.core.next.call(null, s);
        res = G__6593;
        s = G__6594;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__6595 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__6596 = cljs.core.next.call(null, s);
      h = G__6595;
      s = G__6596;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__6597 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__6598 = cljs.core.next.call(null, s__$1);
      h = G__6597;
      s__$1 = G__6598;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6605_6611 = cljs.core.seq.call(null, fn_map);
  var chunk__6606_6612 = null;
  var count__6607_6613 = 0;
  var i__6608_6614 = 0;
  while (true) {
    if (i__6608_6614 < count__6607_6613) {
      var vec__6609_6615 = cljs.core._nth.call(null, chunk__6606_6612, i__6608_6614);
      var key_name_6616 = cljs.core.nth.call(null, vec__6609_6615, 0, null);
      var f_6617 = cljs.core.nth.call(null, vec__6609_6615, 1, null);
      var str_name_6618 = cljs.core.name.call(null, key_name_6616);
      obj[str_name_6618] = f_6617;
      var G__6619 = seq__6605_6611;
      var G__6620 = chunk__6606_6612;
      var G__6621 = count__6607_6613;
      var G__6622 = i__6608_6614 + 1;
      seq__6605_6611 = G__6619;
      chunk__6606_6612 = G__6620;
      count__6607_6613 = G__6621;
      i__6608_6614 = G__6622;
      continue;
    } else {
      var temp__4126__auto___6623 = cljs.core.seq.call(null, seq__6605_6611);
      if (temp__4126__auto___6623) {
        var seq__6605_6624__$1 = temp__4126__auto___6623;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6605_6624__$1)) {
          var c__4229__auto___6625 = cljs.core.chunk_first.call(null, seq__6605_6624__$1);
          var G__6626 = cljs.core.chunk_rest.call(null, seq__6605_6624__$1);
          var G__6627 = c__4229__auto___6625;
          var G__6628 = cljs.core.count.call(null, c__4229__auto___6625);
          var G__6629 = 0;
          seq__6605_6611 = G__6626;
          chunk__6606_6612 = G__6627;
          count__6607_6613 = G__6628;
          i__6608_6614 = G__6629;
          continue;
        } else {
          var vec__6610_6630 = cljs.core.first.call(null, seq__6605_6624__$1);
          var key_name_6631 = cljs.core.nth.call(null, vec__6610_6630, 0, null);
          var f_6632 = cljs.core.nth.call(null, vec__6610_6630, 1, null);
          var str_name_6633 = cljs.core.name.call(null, key_name_6631);
          obj[str_name_6633] = f_6632;
          var G__6634 = cljs.core.next.call(null, seq__6605_6624__$1);
          var G__6635 = null;
          var G__6636 = 0;
          var G__6637 = 0;
          seq__6605_6611 = G__6634;
          chunk__6606_6612 = G__6635;
          count__6607_6613 = G__6636;
          i__6608_6614 = G__6637;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6639 = coll;
  if (G__6639) {
    var bit__4131__auto__ = G__6639.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4131__auto__ || G__6639.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6639.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6639);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__6639);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__6640 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__6640;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6641 = i - 1;
        var G__6642 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__6641;
        r = G__6642;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6643) {
    var xs = cljs.core.seq(arglist__6643);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3481__auto__ = coll == null;
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      var G__6647 = coll;
      if (G__6647) {
        var bit__4124__auto__ = G__6647.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4124__auto__ || G__6647.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6649 = x;
  if (G__6649) {
    var bit__4131__auto__ = G__6649.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4131__auto__ || G__6649.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6649.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6649);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__6649);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6651 = null;
  var G__6651__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__6651__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__6651 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6651__2.call(this, self__, coll);
      case 3:
        return G__6651__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6651;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6650) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6650)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6653 = x;
    if (G__6653) {
      var bit__4124__auto__ = G__6653.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4124__auto__ || G__6653.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6654 = ls.sval();
        ls = G__6654;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6656 = s;
    if (G__6656) {
      var bit__4124__auto__ = G__6656.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4124__auto__ || G__6656.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__6657 = cljs.core.next.call(null, s__$1);
      s__$1 = G__6657;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_6658 = 0;
  var xs_6659 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_6659) {
      ret[i_6658] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_6659));
      var G__6660 = i_6658 + 1;
      var G__6661 = cljs.core.next.call(null, xs_6659);
      i_6658 = G__6660;
      xs_6659 = G__6661;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6662 = i + 1;
          var G__6663 = cljs.core.next.call(null, s__$1);
          i = G__6662;
          s__$1 = G__6663;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6664 = size;
      var i_6665 = 0;
      while (true) {
        if (i_6665 < n__4329__auto___6664) {
          a[i_6665] = init_val_or_seq;
          var G__6666 = i_6665 + 1;
          i_6665 = G__6666;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6667 = i + 1;
          var G__6668 = cljs.core.next.call(null, s__$1);
          i = G__6667;
          s__$1 = G__6668;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6669 = size;
      var i_6670 = 0;
      while (true) {
        if (i_6670 < n__4329__auto___6669) {
          a[i_6670] = init_val_or_seq;
          var G__6671 = i_6670 + 1;
          i_6670 = G__6671;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6672 = i + 1;
          var G__6673 = cljs.core.next.call(null, s__$1);
          i = G__6672;
          s__$1 = G__6673;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6674 = size;
      var i_6675 = 0;
      while (true) {
        if (i_6675 < n__4329__auto___6674) {
          a[i_6675] = init_val_or_seq;
          var G__6676 = i_6675 + 1;
          i_6675 = G__6676;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__6677 = i + 1;
          var G__6678 = cljs.core.next.call(null, s__$1);
          i = G__6677;
          s__$1 = G__6678;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4329__auto___6679 = size;
      var i_6680 = 0;
      while (true) {
        if (i_6680 < n__4329__auto___6679) {
          a[i_6680] = init_val_or_seq;
          var G__6681 = i_6680 + 1;
          i_6680 = G__6681;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__6682 = cljs.core.next.call(null, s__$1);
        var G__6683 = i - 1;
        var G__6684 = sum + 1;
        s__$1 = G__6682;
        i = G__6683;
        sum = G__6684;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6685__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__6685 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6685__delegate.call(this, x, y, zs);
    };
    G__6685.cljs$lang$maxFixedArity = 2;
    G__6685.cljs$lang$applyTo = function(arglist__6686) {
      var x = cljs.core.first(arglist__6686);
      arglist__6686 = cljs.core.next(arglist__6686);
      var y = cljs.core.first(arglist__6686);
      var zs = cljs.core.rest(arglist__6686);
      return G__6685__delegate(x, y, zs);
    };
    G__6685.cljs$core$IFn$_invoke$arity$variadic = G__6685__delegate;
    return G__6685;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__6687__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__6687 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6687__delegate.call(this, a, b, c, d, more);
    };
    G__6687.cljs$lang$maxFixedArity = 4;
    G__6687.cljs$lang$applyTo = function(arglist__6688) {
      var a = cljs.core.first(arglist__6688);
      arglist__6688 = cljs.core.next(arglist__6688);
      var b = cljs.core.first(arglist__6688);
      arglist__6688 = cljs.core.next(arglist__6688);
      var c = cljs.core.first(arglist__6688);
      arglist__6688 = cljs.core.next(arglist__6688);
      var d = cljs.core.first(arglist__6688);
      var more = cljs.core.rest(arglist__6688);
      return G__6687__delegate(a, b, c, d, more);
    };
    G__6687.cljs$core$IFn$_invoke$arity$variadic = G__6687__delegate;
    return G__6687;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6689__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6690 = ntcoll;
          var G__6691 = cljs.core.first.call(null, vals);
          var G__6692 = cljs.core.next.call(null, vals);
          tcoll = G__6690;
          val = G__6691;
          vals = G__6692;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6689 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6689__delegate.call(this, tcoll, val, vals);
    };
    G__6689.cljs$lang$maxFixedArity = 2;
    G__6689.cljs$lang$applyTo = function(arglist__6693) {
      var tcoll = cljs.core.first(arglist__6693);
      arglist__6693 = cljs.core.next(arglist__6693);
      var val = cljs.core.first(arglist__6693);
      var vals = cljs.core.rest(arglist__6693);
      return G__6689__delegate(tcoll, val, vals);
    };
    G__6689.cljs$core$IFn$_invoke$arity$variadic = G__6689__delegate;
    return G__6689;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6694__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6695 = ntcoll;
          var G__6696 = cljs.core.first.call(null, kvs);
          var G__6697 = cljs.core.second.call(null, kvs);
          var G__6698 = cljs.core.nnext.call(null, kvs);
          tcoll = G__6695;
          key = G__6696;
          val = G__6697;
          kvs = G__6698;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6694 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6694__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6694.cljs$lang$maxFixedArity = 3;
    G__6694.cljs$lang$applyTo = function(arglist__6699) {
      var tcoll = cljs.core.first(arglist__6699);
      arglist__6699 = cljs.core.next(arglist__6699);
      var key = cljs.core.first(arglist__6699);
      arglist__6699 = cljs.core.next(arglist__6699);
      var val = cljs.core.first(arglist__6699);
      var kvs = cljs.core.rest(arglist__6699);
      return G__6694__delegate(tcoll, key, val, kvs);
    };
    G__6694.cljs$core$IFn$_invoke$arity$variadic = G__6694__delegate;
    return G__6694;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6700__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6701 = ntcoll;
          var G__6702 = cljs.core.first.call(null, ks);
          var G__6703 = cljs.core.next.call(null, ks);
          tcoll = G__6701;
          key = G__6702;
          ks = G__6703;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6700 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6700__delegate.call(this, tcoll, key, ks);
    };
    G__6700.cljs$lang$maxFixedArity = 2;
    G__6700.cljs$lang$applyTo = function(arglist__6704) {
      var tcoll = cljs.core.first(arglist__6704);
      arglist__6704 = cljs.core.next(arglist__6704);
      var key = cljs.core.first(arglist__6704);
      var ks = cljs.core.rest(arglist__6704);
      return G__6700__delegate(tcoll, key, ks);
    };
    G__6700.cljs$core$IFn$_invoke$arity$variadic = G__6700__delegate;
    return G__6700;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6705__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6706 = ntcoll;
          var G__6707 = cljs.core.first.call(null, vals);
          var G__6708 = cljs.core.next.call(null, vals);
          tcoll = G__6706;
          val = G__6707;
          vals = G__6708;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6705 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6705__delegate.call(this, tcoll, val, vals);
    };
    G__6705.cljs$lang$maxFixedArity = 2;
    G__6705.cljs$lang$applyTo = function(arglist__6709) {
      var tcoll = cljs.core.first(arglist__6709);
      arglist__6709 = cljs.core.next(arglist__6709);
      var val = cljs.core.first(arglist__6709);
      var vals = cljs.core.rest(arglist__6709);
      return G__6705__delegate(tcoll, val, vals);
    };
    G__6705.cljs$core$IFn$_invoke$arity$variadic = G__6705__delegate;
    return G__6705;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4373 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4373);
      } else {
        return f.call(null, a4373);
      }
    } else {
      var b4374 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4373, b4374);
        } else {
          return f.call(null, a4373, b4374);
        }
      } else {
        var c4375 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4373, b4374, c4375);
          } else {
            return f.call(null, a4373, b4374, c4375);
          }
        } else {
          var d4376 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4373, b4374, c4375, d4376);
            } else {
              return f.call(null, a4373, b4374, c4375, d4376);
            }
          } else {
            var e4377 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4373, b4374, c4375, d4376, e4377);
              } else {
                return f.call(null, a4373, b4374, c4375, d4376, e4377);
              }
            } else {
              var f4378 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4373, b4374, c4375, d4376, e4377, f4378);
                } else {
                  return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378);
                }
              } else {
                var g4379 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4373, b4374, c4375, d4376, e4377, f4378, g4379);
                  } else {
                    return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379);
                  }
                } else {
                  var h4380 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380);
                    } else {
                      return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380);
                    }
                  } else {
                    var i4381 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381);
                      } else {
                        return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381);
                      }
                    } else {
                      var j4382 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382);
                        } else {
                          return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382);
                        }
                      } else {
                        var k4383 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383);
                          } else {
                            return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383);
                          }
                        } else {
                          var l4384 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384);
                            } else {
                              return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384);
                            }
                          } else {
                            var m4385 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385);
                              } else {
                                return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385);
                              }
                            } else {
                              var n4386 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386);
                                } else {
                                  return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386);
                                }
                              } else {
                                var o4387 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387);
                                  } else {
                                    return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387);
                                  }
                                } else {
                                  var p4388 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388);
                                    } else {
                                      return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388);
                                    }
                                  } else {
                                    var q4389 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389);
                                      } else {
                                        return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389);
                                      }
                                    } else {
                                      var r4390 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390);
                                        } else {
                                          return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390);
                                        }
                                      } else {
                                        var s4391 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391);
                                          } else {
                                            return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391);
                                          }
                                        } else {
                                          var t4392 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391, t4392);
                                            } else {
                                              return f.call(null, a4373, b4374, c4375, d4376, e4377, f4378, g4379, h4380, i4381, j4382, k4383, l4384, m4385, n4386, o4387, p4388, q4389, r4390, s4391, t4392);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__6710__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__6710 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__6710__delegate.call(this, f, a, b, c, d, args);
    };
    G__6710.cljs$lang$maxFixedArity = 5;
    G__6710.cljs$lang$applyTo = function(arglist__6711) {
      var f = cljs.core.first(arglist__6711);
      arglist__6711 = cljs.core.next(arglist__6711);
      var a = cljs.core.first(arglist__6711);
      arglist__6711 = cljs.core.next(arglist__6711);
      var b = cljs.core.first(arglist__6711);
      arglist__6711 = cljs.core.next(arglist__6711);
      var c = cljs.core.first(arglist__6711);
      arglist__6711 = cljs.core.next(arglist__6711);
      var d = cljs.core.first(arglist__6711);
      var args = cljs.core.rest(arglist__6711);
      return G__6710__delegate(f, a, b, c, d, args);
    };
    G__6710.cljs$core$IFn$_invoke$arity$variadic = G__6710__delegate;
    return G__6710;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__6712__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__6712 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6712__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__6712.cljs$lang$maxFixedArity = 6;
    G__6712.cljs$lang$applyTo = function(arglist__6713) {
      var obj = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var f = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var a = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var b = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var c = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var d = cljs.core.first(arglist__6713);
      var args = cljs.core.rest(arglist__6713);
      return G__6712__delegate(obj, f, a, b, c, d, args);
    };
    G__6712.cljs$core$IFn$_invoke$arity$variadic = G__6712__delegate;
    return G__6712;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__6714__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__6714 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6714__delegate.call(this, x, y, more);
    };
    G__6714.cljs$lang$maxFixedArity = 2;
    G__6714.cljs$lang$applyTo = function(arglist__6715) {
      var x = cljs.core.first(arglist__6715);
      arglist__6715 = cljs.core.next(arglist__6715);
      var y = cljs.core.first(arglist__6715);
      var more = cljs.core.rest(arglist__6715);
      return G__6714__delegate(x, y, more);
    };
    G__6714.cljs$core$IFn$_invoke$arity$variadic = G__6714__delegate;
    return G__6714;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__6716 = pred;
        var G__6717 = cljs.core.next.call(null, coll);
        pred = G__6716;
        coll = G__6717;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3481__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        var G__6718 = pred;
        var G__6719 = cljs.core.next.call(null, coll);
        pred = G__6718;
        coll = G__6719;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__6720 = null;
    var G__6720__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__6720__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__6720__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__6720__3 = function() {
      var G__6721__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__6721 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__6721__delegate.call(this, x, y, zs);
      };
      G__6721.cljs$lang$maxFixedArity = 2;
      G__6721.cljs$lang$applyTo = function(arglist__6722) {
        var x = cljs.core.first(arglist__6722);
        arglist__6722 = cljs.core.next(arglist__6722);
        var y = cljs.core.first(arglist__6722);
        var zs = cljs.core.rest(arglist__6722);
        return G__6721__delegate(x, y, zs);
      };
      G__6721.cljs$core$IFn$_invoke$arity$variadic = G__6721__delegate;
      return G__6721;
    }();
    G__6720 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__6720__0.call(this);
        case 1:
          return G__6720__1.call(this, x);
        case 2:
          return G__6720__2.call(this, x, y);
        default:
          return G__6720__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6720.cljs$lang$maxFixedArity = 2;
    G__6720.cljs$lang$applyTo = G__6720__3.cljs$lang$applyTo;
    return G__6720;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__6723__delegate = function(args) {
      return x;
    };
    var G__6723 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__6723__delegate.call(this, args);
    };
    G__6723.cljs$lang$maxFixedArity = 0;
    G__6723.cljs$lang$applyTo = function(arglist__6724) {
      var args = cljs.core.seq(arglist__6724);
      return G__6723__delegate(args);
    };
    G__6723.cljs$core$IFn$_invoke$arity$variadic = G__6723__delegate;
    return G__6723;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__6725 = null;
      var G__6725__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__6725__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__6725__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__6725__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__6725__4 = function() {
        var G__6726__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__6726 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6726__delegate.call(this, x, y, z, args);
        };
        G__6726.cljs$lang$maxFixedArity = 3;
        G__6726.cljs$lang$applyTo = function(arglist__6727) {
          var x = cljs.core.first(arglist__6727);
          arglist__6727 = cljs.core.next(arglist__6727);
          var y = cljs.core.first(arglist__6727);
          arglist__6727 = cljs.core.next(arglist__6727);
          var z = cljs.core.first(arglist__6727);
          var args = cljs.core.rest(arglist__6727);
          return G__6726__delegate(x, y, z, args);
        };
        G__6726.cljs$core$IFn$_invoke$arity$variadic = G__6726__delegate;
        return G__6726;
      }();
      G__6725 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6725__0.call(this);
          case 1:
            return G__6725__1.call(this, x);
          case 2:
            return G__6725__2.call(this, x, y);
          case 3:
            return G__6725__3.call(this, x, y, z);
          default:
            return G__6725__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6725.cljs$lang$maxFixedArity = 3;
      G__6725.cljs$lang$applyTo = G__6725__4.cljs$lang$applyTo;
      return G__6725;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__6728 = null;
      var G__6728__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__6728__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__6728__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__6728__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__6728__4 = function() {
        var G__6729__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__6729 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6729__delegate.call(this, x, y, z, args);
        };
        G__6729.cljs$lang$maxFixedArity = 3;
        G__6729.cljs$lang$applyTo = function(arglist__6730) {
          var x = cljs.core.first(arglist__6730);
          arglist__6730 = cljs.core.next(arglist__6730);
          var y = cljs.core.first(arglist__6730);
          arglist__6730 = cljs.core.next(arglist__6730);
          var z = cljs.core.first(arglist__6730);
          var args = cljs.core.rest(arglist__6730);
          return G__6729__delegate(x, y, z, args);
        };
        G__6729.cljs$core$IFn$_invoke$arity$variadic = G__6729__delegate;
        return G__6729;
      }();
      G__6728 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__6728__0.call(this);
          case 1:
            return G__6728__1.call(this, x);
          case 2:
            return G__6728__2.call(this, x, y);
          case 3:
            return G__6728__3.call(this, x, y, z);
          default:
            return G__6728__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6728.cljs$lang$maxFixedArity = 3;
      G__6728.cljs$lang$applyTo = G__6728__4.cljs$lang$applyTo;
      return G__6728;
    }();
  };
  var comp__4 = function() {
    var G__6731__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__6732__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__6733 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__6734 = cljs.core.next.call(null, fs__$2);
                ret = G__6733;
                fs__$2 = G__6734;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__6732 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__6732__delegate.call(this, args);
          };
          G__6732.cljs$lang$maxFixedArity = 0;
          G__6732.cljs$lang$applyTo = function(arglist__6735) {
            var args = cljs.core.seq(arglist__6735);
            return G__6732__delegate(args);
          };
          G__6732.cljs$core$IFn$_invoke$arity$variadic = G__6732__delegate;
          return G__6732;
        }();
      }(fs__$1);
    };
    var G__6731 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6731__delegate.call(this, f1, f2, f3, fs);
    };
    G__6731.cljs$lang$maxFixedArity = 3;
    G__6731.cljs$lang$applyTo = function(arglist__6736) {
      var f1 = cljs.core.first(arglist__6736);
      arglist__6736 = cljs.core.next(arglist__6736);
      var f2 = cljs.core.first(arglist__6736);
      arglist__6736 = cljs.core.next(arglist__6736);
      var f3 = cljs.core.first(arglist__6736);
      var fs = cljs.core.rest(arglist__6736);
      return G__6731__delegate(f1, f2, f3, fs);
    };
    G__6731.cljs$core$IFn$_invoke$arity$variadic = G__6731__delegate;
    return G__6731;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__6737__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__6737 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6737__delegate.call(this, args);
      };
      G__6737.cljs$lang$maxFixedArity = 0;
      G__6737.cljs$lang$applyTo = function(arglist__6738) {
        var args = cljs.core.seq(arglist__6738);
        return G__6737__delegate(args);
      };
      G__6737.cljs$core$IFn$_invoke$arity$variadic = G__6737__delegate;
      return G__6737;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__6739__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__6739 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6739__delegate.call(this, args);
      };
      G__6739.cljs$lang$maxFixedArity = 0;
      G__6739.cljs$lang$applyTo = function(arglist__6740) {
        var args = cljs.core.seq(arglist__6740);
        return G__6739__delegate(args);
      };
      G__6739.cljs$core$IFn$_invoke$arity$variadic = G__6739__delegate;
      return G__6739;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__6741__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__6741 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__6741__delegate.call(this, args);
      };
      G__6741.cljs$lang$maxFixedArity = 0;
      G__6741.cljs$lang$applyTo = function(arglist__6742) {
        var args = cljs.core.seq(arglist__6742);
        return G__6741__delegate(args);
      };
      G__6741.cljs$core$IFn$_invoke$arity$variadic = G__6741__delegate;
      return G__6741;
    }();
  };
  var partial__5 = function() {
    var G__6743__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__6744__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__6744 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__6744__delegate.call(this, args);
        };
        G__6744.cljs$lang$maxFixedArity = 0;
        G__6744.cljs$lang$applyTo = function(arglist__6745) {
          var args = cljs.core.seq(arglist__6745);
          return G__6744__delegate(args);
        };
        G__6744.cljs$core$IFn$_invoke$arity$variadic = G__6744__delegate;
        return G__6744;
      }();
    };
    var G__6743 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6743__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__6743.cljs$lang$maxFixedArity = 4;
    G__6743.cljs$lang$applyTo = function(arglist__6746) {
      var f = cljs.core.first(arglist__6746);
      arglist__6746 = cljs.core.next(arglist__6746);
      var arg1 = cljs.core.first(arglist__6746);
      arglist__6746 = cljs.core.next(arglist__6746);
      var arg2 = cljs.core.first(arglist__6746);
      arglist__6746 = cljs.core.next(arglist__6746);
      var arg3 = cljs.core.first(arglist__6746);
      var more = cljs.core.rest(arglist__6746);
      return G__6743__delegate(f, arg1, arg2, arg3, more);
    };
    G__6743.cljs$core$IFn$_invoke$arity$variadic = G__6743__delegate;
    return G__6743;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__6747 = null;
      var G__6747__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__6747__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__6747__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__6747__4 = function() {
        var G__6748__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__6748 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6748__delegate.call(this, a, b, c, ds);
        };
        G__6748.cljs$lang$maxFixedArity = 3;
        G__6748.cljs$lang$applyTo = function(arglist__6749) {
          var a = cljs.core.first(arglist__6749);
          arglist__6749 = cljs.core.next(arglist__6749);
          var b = cljs.core.first(arglist__6749);
          arglist__6749 = cljs.core.next(arglist__6749);
          var c = cljs.core.first(arglist__6749);
          var ds = cljs.core.rest(arglist__6749);
          return G__6748__delegate(a, b, c, ds);
        };
        G__6748.cljs$core$IFn$_invoke$arity$variadic = G__6748__delegate;
        return G__6748;
      }();
      G__6747 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__6747__1.call(this, a);
          case 2:
            return G__6747__2.call(this, a, b);
          case 3:
            return G__6747__3.call(this, a, b, c);
          default:
            return G__6747__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6747.cljs$lang$maxFixedArity = 3;
      G__6747.cljs$lang$applyTo = G__6747__4.cljs$lang$applyTo;
      return G__6747;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__6750 = null;
      var G__6750__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6750__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__6750__4 = function() {
        var G__6751__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__6751 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6751__delegate.call(this, a, b, c, ds);
        };
        G__6751.cljs$lang$maxFixedArity = 3;
        G__6751.cljs$lang$applyTo = function(arglist__6752) {
          var a = cljs.core.first(arglist__6752);
          arglist__6752 = cljs.core.next(arglist__6752);
          var b = cljs.core.first(arglist__6752);
          arglist__6752 = cljs.core.next(arglist__6752);
          var c = cljs.core.first(arglist__6752);
          var ds = cljs.core.rest(arglist__6752);
          return G__6751__delegate(a, b, c, ds);
        };
        G__6751.cljs$core$IFn$_invoke$arity$variadic = G__6751__delegate;
        return G__6751;
      }();
      G__6750 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6750__2.call(this, a, b);
          case 3:
            return G__6750__3.call(this, a, b, c);
          default:
            return G__6750__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6750.cljs$lang$maxFixedArity = 3;
      G__6750.cljs$lang$applyTo = G__6750__4.cljs$lang$applyTo;
      return G__6750;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__6753 = null;
      var G__6753__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__6753__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__6753__4 = function() {
        var G__6754__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__6754 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6754__delegate.call(this, a, b, c, ds);
        };
        G__6754.cljs$lang$maxFixedArity = 3;
        G__6754.cljs$lang$applyTo = function(arglist__6755) {
          var a = cljs.core.first(arglist__6755);
          arglist__6755 = cljs.core.next(arglist__6755);
          var b = cljs.core.first(arglist__6755);
          arglist__6755 = cljs.core.next(arglist__6755);
          var c = cljs.core.first(arglist__6755);
          var ds = cljs.core.rest(arglist__6755);
          return G__6754__delegate(a, b, c, ds);
        };
        G__6754.cljs$core$IFn$_invoke$arity$variadic = G__6754__delegate;
        return G__6754;
      }();
      G__6753 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__6753__2.call(this, a, b);
          case 3:
            return G__6753__3.call(this, a, b, c);
          default:
            return G__6753__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6753.cljs$lang$maxFixedArity = 3;
      G__6753.cljs$lang$applyTo = G__6753__4.cljs$lang$applyTo;
      return G__6753;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6756 = size;
          var i_6757 = 0;
          while (true) {
            if (i_6757 < n__4329__auto___6756) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_6757, cljs.core._nth.call(null, c, i_6757)));
              var G__6758 = i_6757 + 1;
              i_6757 = G__6758;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4329__auto___6759 = size;
        var i_6760 = 0;
        while (true) {
          if (i_6760 < n__4329__auto___6759) {
            var x_6761 = f.call(null, cljs.core._nth.call(null, c, i_6760));
            if (x_6761 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_6761);
            }
            var G__6762 = i_6760 + 1;
            i_6760 = G__6762;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6763 = size;
          var i_6764 = 0;
          while (true) {
            if (i_6764 < n__4329__auto___6763) {
              var x_6765 = f.call(null, idx + i_6764, cljs.core._nth.call(null, c, i_6764));
              if (x_6765 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_6765);
              }
              var G__6766 = i_6764 + 1;
              i_6764 = G__6766;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            return p.call(null, y);
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__6773__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__6773 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6773__delegate.call(this, x, y, z, args);
        };
        G__6773.cljs$lang$maxFixedArity = 3;
        G__6773.cljs$lang$applyTo = function(arglist__6774) {
          var x = cljs.core.first(arglist__6774);
          arglist__6774 = cljs.core.next(arglist__6774);
          var y = cljs.core.first(arglist__6774);
          arglist__6774 = cljs.core.next(arglist__6774);
          var z = cljs.core.first(arglist__6774);
          var args = cljs.core.rest(arglist__6774);
          return G__6773__delegate(x, y, z, args);
        };
        G__6773.cljs$core$IFn$_invoke$arity$variadic = G__6773__delegate;
        return G__6773;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__6775__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6767_SHARP_) {
            var and__3469__auto__ = p1.call(null, p1__6767_SHARP_);
            if (cljs.core.truth_(and__3469__auto__)) {
              return p2.call(null, p1__6767_SHARP_);
            } else {
              return and__3469__auto__;
            }
          }, args));
        };
        var G__6775 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6775__delegate.call(this, x, y, z, args);
        };
        G__6775.cljs$lang$maxFixedArity = 3;
        G__6775.cljs$lang$applyTo = function(arglist__6776) {
          var x = cljs.core.first(arglist__6776);
          arglist__6776 = cljs.core.next(arglist__6776);
          var y = cljs.core.first(arglist__6776);
          arglist__6776 = cljs.core.next(arglist__6776);
          var z = cljs.core.first(arglist__6776);
          var args = cljs.core.rest(arglist__6776);
          return G__6775__delegate(x, y, z, args);
        };
        G__6775.cljs$core$IFn$_invoke$arity$variadic = G__6775__delegate;
        return G__6775;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3469__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3469__auto____$1)) {
              var and__3469__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3469__auto____$2)) {
                var and__3469__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3469__auto____$3)) {
                  var and__3469__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$4)) {
                    var and__3469__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3469__auto____$5)) {
                      var and__3469__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3469__auto____$6)) {
                        var and__3469__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3469__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3469__auto____$7;
                        }
                      } else {
                        return and__3469__auto____$6;
                      }
                    } else {
                      return and__3469__auto____$5;
                    }
                  } else {
                    return and__3469__auto____$4;
                  }
                } else {
                  return and__3469__auto____$3;
                }
              } else {
                return and__3469__auto____$2;
              }
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__6777__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__6768_SHARP_) {
            var and__3469__auto__ = p1.call(null, p1__6768_SHARP_);
            if (cljs.core.truth_(and__3469__auto__)) {
              var and__3469__auto____$1 = p2.call(null, p1__6768_SHARP_);
              if (cljs.core.truth_(and__3469__auto____$1)) {
                return p3.call(null, p1__6768_SHARP_);
              } else {
                return and__3469__auto____$1;
              }
            } else {
              return and__3469__auto__;
            }
          }, args));
        };
        var G__6777 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6777__delegate.call(this, x, y, z, args);
        };
        G__6777.cljs$lang$maxFixedArity = 3;
        G__6777.cljs$lang$applyTo = function(arglist__6778) {
          var x = cljs.core.first(arglist__6778);
          arglist__6778 = cljs.core.next(arglist__6778);
          var y = cljs.core.first(arglist__6778);
          arglist__6778 = cljs.core.next(arglist__6778);
          var z = cljs.core.first(arglist__6778);
          var args = cljs.core.rest(arglist__6778);
          return G__6777__delegate(x, y, z, args);
        };
        G__6777.cljs$core$IFn$_invoke$arity$variadic = G__6777__delegate;
        return G__6777;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__6779__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6769_SHARP_) {
                return p1__6769_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6770_SHARP_) {
                var and__3469__auto__ = p1__6770_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3469__auto__)) {
                  return p1__6770_SHARP_.call(null, y);
                } else {
                  return and__3469__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__6771_SHARP_) {
                var and__3469__auto__ = p1__6771_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3469__auto__)) {
                  var and__3469__auto____$1 = p1__6771_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3469__auto____$1)) {
                    return p1__6771_SHARP_.call(null, z);
                  } else {
                    return and__3469__auto____$1;
                  }
                } else {
                  return and__3469__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__6780__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__6772_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__6772_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__6780 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6780__delegate.call(this, x, y, z, args);
            };
            G__6780.cljs$lang$maxFixedArity = 3;
            G__6780.cljs$lang$applyTo = function(arglist__6781) {
              var x = cljs.core.first(arglist__6781);
              arglist__6781 = cljs.core.next(arglist__6781);
              var y = cljs.core.first(arglist__6781);
              arglist__6781 = cljs.core.next(arglist__6781);
              var z = cljs.core.first(arglist__6781);
              var args = cljs.core.rest(arglist__6781);
              return G__6780__delegate(x, y, z, args);
            };
            G__6780.cljs$core$IFn$_invoke$arity$variadic = G__6780__delegate;
            return G__6780;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__6779 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6779__delegate.call(this, p1, p2, p3, ps);
    };
    G__6779.cljs$lang$maxFixedArity = 3;
    G__6779.cljs$lang$applyTo = function(arglist__6782) {
      var p1 = cljs.core.first(arglist__6782);
      arglist__6782 = cljs.core.next(arglist__6782);
      var p2 = cljs.core.first(arglist__6782);
      arglist__6782 = cljs.core.next(arglist__6782);
      var p3 = cljs.core.first(arglist__6782);
      var ps = cljs.core.rest(arglist__6782);
      return G__6779__delegate(p1, p2, p3, ps);
    };
    G__6779.cljs$core$IFn$_invoke$arity$variadic = G__6779__delegate;
    return G__6779;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3481__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3481__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__6789__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__6789 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6789__delegate.call(this, x, y, z, args);
        };
        G__6789.cljs$lang$maxFixedArity = 3;
        G__6789.cljs$lang$applyTo = function(arglist__6790) {
          var x = cljs.core.first(arglist__6790);
          arglist__6790 = cljs.core.next(arglist__6790);
          var y = cljs.core.first(arglist__6790);
          arglist__6790 = cljs.core.next(arglist__6790);
          var z = cljs.core.first(arglist__6790);
          var args = cljs.core.rest(arglist__6790);
          return G__6789__delegate(x, y, z, args);
        };
        G__6789.cljs$core$IFn$_invoke$arity$variadic = G__6789__delegate;
        return G__6789;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__6791__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3481__auto__) {
              return function(p1__6783_SHARP_) {
                var or__3481__auto____$1 = p1.call(null, p1__6783_SHARP_);
                if (cljs.core.truth_(or__3481__auto____$1)) {
                  return or__3481__auto____$1;
                } else {
                  return p2.call(null, p1__6783_SHARP_);
                }
              };
            }(or__3481__auto__), args);
          }
        };
        var G__6791 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6791__delegate.call(this, x, y, z, args);
        };
        G__6791.cljs$lang$maxFixedArity = 3;
        G__6791.cljs$lang$applyTo = function(arglist__6792) {
          var x = cljs.core.first(arglist__6792);
          arglist__6792 = cljs.core.next(arglist__6792);
          var y = cljs.core.first(arglist__6792);
          arglist__6792 = cljs.core.next(arglist__6792);
          var z = cljs.core.first(arglist__6792);
          var args = cljs.core.rest(arglist__6792);
          return G__6791__delegate(x, y, z, args);
        };
        G__6791.cljs$core$IFn$_invoke$arity$variadic = G__6791__delegate;
        return G__6791;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3481__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3481__auto____$1)) {
            return or__3481__auto____$1;
          } else {
            var or__3481__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3481__auto____$2)) {
              return or__3481__auto____$2;
            } else {
              var or__3481__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3481__auto____$3)) {
                return or__3481__auto____$3;
              } else {
                var or__3481__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3481__auto____$4)) {
                  return or__3481__auto____$4;
                } else {
                  var or__3481__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3481__auto____$5)) {
                    return or__3481__auto____$5;
                  } else {
                    var or__3481__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3481__auto____$6)) {
                      return or__3481__auto____$6;
                    } else {
                      var or__3481__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3481__auto____$7)) {
                        return or__3481__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__6793__delegate = function(x, y, z, args) {
          var or__3481__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3481__auto__) {
              return function(p1__6784_SHARP_) {
                var or__3481__auto____$1 = p1.call(null, p1__6784_SHARP_);
                if (cljs.core.truth_(or__3481__auto____$1)) {
                  return or__3481__auto____$1;
                } else {
                  var or__3481__auto____$2 = p2.call(null, p1__6784_SHARP_);
                  if (cljs.core.truth_(or__3481__auto____$2)) {
                    return or__3481__auto____$2;
                  } else {
                    return p3.call(null, p1__6784_SHARP_);
                  }
                }
              };
            }(or__3481__auto__), args);
          }
        };
        var G__6793 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__6793__delegate.call(this, x, y, z, args);
        };
        G__6793.cljs$lang$maxFixedArity = 3;
        G__6793.cljs$lang$applyTo = function(arglist__6794) {
          var x = cljs.core.first(arglist__6794);
          arglist__6794 = cljs.core.next(arglist__6794);
          var y = cljs.core.first(arglist__6794);
          arglist__6794 = cljs.core.next(arglist__6794);
          var z = cljs.core.first(arglist__6794);
          var args = cljs.core.rest(arglist__6794);
          return G__6793__delegate(x, y, z, args);
        };
        G__6793.cljs$core$IFn$_invoke$arity$variadic = G__6793__delegate;
        return G__6793;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__6795__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6785_SHARP_) {
                return p1__6785_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6786_SHARP_) {
                var or__3481__auto__ = p1__6786_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  return p1__6786_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__6787_SHARP_) {
                var or__3481__auto__ = p1__6787_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  var or__3481__auto____$1 = p1__6787_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3481__auto____$1)) {
                    return or__3481__auto____$1;
                  } else {
                    return p1__6787_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__6796__delegate = function(x, y, z, args) {
              var or__3481__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3481__auto__)) {
                return or__3481__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3481__auto__, ps__$1) {
                  return function(p1__6788_SHARP_) {
                    return cljs.core.some.call(null, p1__6788_SHARP_, args);
                  };
                }(or__3481__auto__, ps__$1), ps__$1);
              }
            };
            var G__6796 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__6796__delegate.call(this, x, y, z, args);
            };
            G__6796.cljs$lang$maxFixedArity = 3;
            G__6796.cljs$lang$applyTo = function(arglist__6797) {
              var x = cljs.core.first(arglist__6797);
              arglist__6797 = cljs.core.next(arglist__6797);
              var y = cljs.core.first(arglist__6797);
              arglist__6797 = cljs.core.next(arglist__6797);
              var z = cljs.core.first(arglist__6797);
              var args = cljs.core.rest(arglist__6797);
              return G__6796__delegate(x, y, z, args);
            };
            G__6796.cljs$core$IFn$_invoke$arity$variadic = G__6796__delegate;
            return G__6796;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__6795 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__6795__delegate.call(this, p1, p2, p3, ps);
    };
    G__6795.cljs$lang$maxFixedArity = 3;
    G__6795.cljs$lang$applyTo = function(arglist__6798) {
      var p1 = cljs.core.first(arglist__6798);
      arglist__6798 = cljs.core.next(arglist__6798);
      var p2 = cljs.core.first(arglist__6798);
      arglist__6798 = cljs.core.next(arglist__6798);
      var p3 = cljs.core.first(arglist__6798);
      var ps = cljs.core.rest(arglist__6798);
      return G__6795__delegate(p1, p2, p3, ps);
    };
    G__6795.cljs$core$IFn$_invoke$arity$variadic = G__6795__delegate;
    return G__6795;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4329__auto___6800 = size;
          var i_6801 = 0;
          while (true) {
            if (i_6801 < n__4329__auto___6800) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_6801)));
              var G__6802 = i_6801 + 1;
              i_6801 = G__6802;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__6803__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__6799_SHARP_) {
          return cljs.core.apply.call(null, f, p1__6799_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__6803 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6803__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6803.cljs$lang$maxFixedArity = 4;
    G__6803.cljs$lang$applyTo = function(arglist__6804) {
      var f = cljs.core.first(arglist__6804);
      arglist__6804 = cljs.core.next(arglist__6804);
      var c1 = cljs.core.first(arglist__6804);
      arglist__6804 = cljs.core.next(arglist__6804);
      var c2 = cljs.core.first(arglist__6804);
      arglist__6804 = cljs.core.next(arglist__6804);
      var c3 = cljs.core.first(arglist__6804);
      var colls = cljs.core.rest(arglist__6804);
      return G__6803__delegate(f, c1, c2, c3, colls);
    };
    G__6803.cljs$core$IFn$_invoke$arity$variadic = G__6803__delegate;
    return G__6803;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__6805 = n__$1 - 1;
        var G__6806 = cljs.core.rest.call(null, s);
        n__$1 = G__6805;
        coll__$1 = G__6806;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, n, coll);
    };
  }(step), null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__6807 = cljs.core.next.call(null, s);
      var G__6808 = cljs.core.next.call(null, lead);
      s = G__6807;
      lead = G__6808;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3469__auto__ = s;
        if (and__3469__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3469__auto__;
        }
      }())) {
        var G__6809 = pred__$1;
        var G__6810 = cljs.core.rest.call(null, s);
        pred__$1 = G__6809;
        coll__$1 = G__6810;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step.call(null, pred, coll);
    };
  }(step), null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__6811__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__6811 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6811__delegate.call(this, c1, c2, colls);
    };
    G__6811.cljs$lang$maxFixedArity = 2;
    G__6811.cljs$lang$applyTo = function(arglist__6812) {
      var c1 = cljs.core.first(arglist__6812);
      arglist__6812 = cljs.core.next(arglist__6812);
      var c2 = cljs.core.first(arglist__6812);
      var colls = cljs.core.rest(arglist__6812);
      return G__6811__delegate(c1, c2, colls);
    };
    G__6811.cljs$core$IFn$_invoke$arity$variadic = G__6811__delegate;
    return G__6811;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__6813__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__6813 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__6813__delegate.call(this, f, coll, colls);
    };
    G__6813.cljs$lang$maxFixedArity = 2;
    G__6813.cljs$lang$applyTo = function(arglist__6814) {
      var f = cljs.core.first(arglist__6814);
      arglist__6814 = cljs.core.next(arglist__6814);
      var coll = cljs.core.first(arglist__6814);
      var colls = cljs.core.rest(arglist__6814);
      return G__6813__delegate(f, coll, colls);
    };
    G__6813.cljs$core$IFn$_invoke$arity$variadic = G__6813__delegate;
    return G__6813;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4329__auto___6815 = size;
        var i_6816 = 0;
        while (true) {
          if (i_6816 < n__4329__auto___6815) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_6816)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_6816));
            } else {
            }
            var G__6817 = i_6816 + 1;
            i_6816 = G__6817;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__6818_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__6818_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__6820 = to;
      if (G__6820) {
        var bit__4124__auto__ = G__6820.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4124__auto__ || G__6820.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__6821__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__6821 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__6821__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__6821.cljs$lang$maxFixedArity = 4;
    G__6821.cljs$lang$applyTo = function(arglist__6822) {
      var f = cljs.core.first(arglist__6822);
      arglist__6822 = cljs.core.next(arglist__6822);
      var c1 = cljs.core.first(arglist__6822);
      arglist__6822 = cljs.core.next(arglist__6822);
      var c2 = cljs.core.first(arglist__6822);
      arglist__6822 = cljs.core.next(arglist__6822);
      var c3 = cljs.core.first(arglist__6822);
      var colls = cljs.core.rest(arglist__6822);
      return G__6821__delegate(f, c1, c2, c3, colls);
    };
    G__6821.cljs$core$IFn$_invoke$arity$variadic = G__6821__delegate;
    return G__6821;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__6824 = m__$1;
          if (G__6824) {
            var bit__4131__auto__ = G__6824.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4131__auto__ || G__6824.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__6824.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6824);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__6824);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__6825 = sentinel;
            var G__6826 = m__$2;
            var G__6827 = cljs.core.next.call(null, ks__$1);
            sentinel = G__6825;
            m__$1 = G__6826;
            ks__$1 = G__6827;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__6828, v) {
  var vec__6830 = p__6828;
  var k = cljs.core.nth.call(null, vec__6830, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__6830, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__6831, f) {
    var vec__6841 = p__6831;
    var k = cljs.core.nth.call(null, vec__6841, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6841, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__6832, f, a) {
    var vec__6842 = p__6832;
    var k = cljs.core.nth.call(null, vec__6842, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6842, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__6833, f, a, b) {
    var vec__6843 = p__6833;
    var k = cljs.core.nth.call(null, vec__6843, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6843, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__6834, f, a, b, c) {
    var vec__6844 = p__6834;
    var k = cljs.core.nth.call(null, vec__6844, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__6844, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__6846__delegate = function(m, p__6835, f, a, b, c, args) {
      var vec__6845 = p__6835;
      var k = cljs.core.nth.call(null, vec__6845, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__6845, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__6846 = function(m, p__6835, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__6846__delegate.call(this, m, p__6835, f, a, b, c, args);
    };
    G__6846.cljs$lang$maxFixedArity = 6;
    G__6846.cljs$lang$applyTo = function(arglist__6847) {
      var m = cljs.core.first(arglist__6847);
      arglist__6847 = cljs.core.next(arglist__6847);
      var p__6835 = cljs.core.first(arglist__6847);
      arglist__6847 = cljs.core.next(arglist__6847);
      var f = cljs.core.first(arglist__6847);
      arglist__6847 = cljs.core.next(arglist__6847);
      var a = cljs.core.first(arglist__6847);
      arglist__6847 = cljs.core.next(arglist__6847);
      var b = cljs.core.first(arglist__6847);
      arglist__6847 = cljs.core.next(arglist__6847);
      var c = cljs.core.first(arglist__6847);
      var args = cljs.core.rest(arglist__6847);
      return G__6846__delegate(m, p__6835, f, a, b, c, args);
    };
    G__6846.cljs$core$IFn$_invoke$arity$variadic = G__6846__delegate;
    return G__6846;
  }();
  update_in = function(m, p__6835, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__6835, f);
      case 4:
        return update_in__4.call(this, m, p__6835, f, a);
      case 5:
        return update_in__5.call(this, m, p__6835, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__6835, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__6835, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__6848 = ll - 5;
      var G__6849 = r;
      ll = G__6848;
      ret = G__6849;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__6850 = cljs.core.pv_aget.call(null, node, 0);
      var G__6851 = level - 5;
      node = G__6850;
      level = G__6851;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__6852 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__6853 = level - 5;
        node = G__6852;
        level = G__6853;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__6855 = j + 1;
              var G__6856 = init__$2;
              j = G__6855;
              init__$1 = G__6856;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__6857 = i + step_init[0];
        i = G__6857;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4329__auto___6858 = len;
    var i_6859 = 0;
    while (true) {
      if (i_6859 < n__4329__auto___6858) {
        new_tail[i_6859] = self__.tail[i_6859];
        var G__6860 = i_6859 + 1;
        i_6859 = G__6860;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__6861 = null;
  var G__6861__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6861__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6861 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6861__2.call(this, self__, k);
      case 3:
        return G__6861__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6861;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args6854) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6854)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__6862 = i + 1;
        var G__6863 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__6862;
        out = G__6863;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6864) {
    var args = cljs.core.seq(arglist__6864);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3788__auto__ = self__.end;
    var y__3789__auto__ = v_pos + 1;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__6866 = null;
  var G__6866__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__6866__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__6866 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6866__2.call(this, self__, k);
      case 3:
        return G__6866__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6866;
}();
cljs.core.Subvec.prototype.apply = function(self__, args6865) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6865)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__6867 = meta;
      var G__6868 = v.v;
      var G__6869 = v.start + start;
      var G__6870 = v.start + end;
      var G__6871 = __hash;
      meta = G__6867;
      v = G__6868;
      start = G__6869;
      end = G__6870;
      __hash = G__6871;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj6875 = {};
    return obj6875;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__6876 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__6877 = level - 5;
        node = G__6876;
        level = G__6877;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__6879 = null;
  var G__6879__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6879__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6879 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6879__2.call(this, self__, k);
      case 3:
        return G__6879__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6879;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args6878) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6878)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3481__auto__ = self__.front;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3481__auto__ = self__.rear;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__6880 = i + incr;
        i = G__6880;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__6881 = i + 1;
      var G__6882 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__6881;
      out = G__6882;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj6886 = {};
    return obj6886;
  }();
  var l = ks.length;
  var i_6887 = 0;
  while (true) {
    if (i_6887 < l) {
      var k_6888 = ks[i_6887];
      new_obj[k_6888] = obj[k_6888];
      var G__6889 = i_6887 + 1;
      i_6887 = G__6889;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6892 = cljs.core.rest.call(null, keys__$1);
        var G__6893 = init__$2;
        keys__$1 = G__6892;
        init__$1 = G__6893;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__6890_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__6890_SHARP_, self__.strobj[p1__6890_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__6894 = null;
  var G__6894__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6894__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6894 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6894__2.call(this, self__, k);
      case 3:
        return G__6894__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6894;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args6891) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6891)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj6896 = {};
  return obj6896;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6897 = i + 2;
          i = G__6897;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6898 = i + 2;
          i = G__6898;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6899 = i + 2;
          i = G__6899;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6900 = i + 2;
          i = G__6900;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__6901 = i + 2;
          i = G__6901;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_6902 = 0;
  while (true) {
    if (i_6902 < l) {
      narr[i_6902] = arr[i_6902];
      var G__6903 = i_6902 + 1;
      i_6902 = G__6903;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6908 = i + 2;
        var G__6909 = init__$2;
        i = G__6908;
        init__$1 = G__6909;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj6906 = {};
    return obj6906;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__6910 = s + 2;
            var G__6911 = d;
            s = G__6910;
            d = G__6911;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__6912 = s + 2;
              var G__6913 = d + 2;
              s = G__6912;
              d = G__6913;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__6907 = cljs.core.aclone.call(null, self__.arr);
          G__6907[idx + 1] = v;
          return G__6907;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6914 = null;
  var G__6914__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6914__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6914 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6914__2.call(this, self__, k);
      case 3:
        return G__6914__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6914;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args6904) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6904)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__6915 = i + 2;
        var G__6916 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__6915;
        ret = G__6916;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__6917_6919 = self__.arr;
      G__6917_6919.pop();
      G__6917_6919.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__6918 = o;
      if (G__6918) {
        var bit__4131__auto__ = G__6918.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4131__auto__ || G__6918.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6918.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6918);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6918);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6920 = cljs.core.next.call(null, es);
          var G__6921 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6920;
          tcoll__$2 = G__6921;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__6922 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__6923 = i + 2;
      out = G__6922;
      i = G__6923;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6926 = cljs.core.aclone.call(null, arr);
    G__6926[i] = a;
    return G__6926;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6927 = cljs.core.aclone.call(null, arr);
    G__6927[i] = a;
    G__6927[j] = b;
    return G__6927;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__6928 = i + 2;
        var G__6929 = init__$2;
        i = G__6928;
        init__$1 = G__6929;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_6930 = 0;
        var j_6931 = 0;
        while (true) {
          if (i_6930 < 32) {
            if ((self__.bitmap >>> i_6930 & 1) === 0) {
              var G__6932 = i_6930 + 1;
              var G__6933 = j_6931;
              i_6930 = G__6932;
              j_6931 = G__6933;
              continue;
            } else {
              nodes[i_6930] = !(self__.arr[j_6931] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_6931]), self__.arr[j_6931], self__.arr[j_6931 + 1], added_leaf_QMARK_) : self__.arr[j_6931 + 1];
              var G__6934 = i_6930 + 1;
              var G__6935 = j_6931 + 2;
              i_6930 = G__6934;
              j_6931 = G__6935;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_6936 = 0;
      var j_6937 = 0;
      while (true) {
        if (i_6936 < 32) {
          if ((self__.bitmap >>> i_6936 & 1) === 0) {
            var G__6938 = i_6936 + 1;
            var G__6939 = j_6937;
            i_6936 = G__6938;
            j_6937 = G__6939;
            continue;
          } else {
            nodes[i_6936] = !(self__.arr[j_6937] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_6937]), self__.arr[j_6937], self__.arr[j_6937 + 1], added_leaf_QMARK_) : self__.arr[j_6937 + 1];
            var G__6940 = i_6936 + 1;
            var G__6941 = j_6937 + 2;
            i_6936 = G__6940;
            j_6937 = G__6941;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__6942 = i + 1;
        var G__6943 = j + 2;
        var G__6944 = bitmap | 1 << i;
        i = G__6942;
        j = G__6943;
        bitmap = G__6944;
        continue;
      } else {
        var G__6945 = i + 1;
        var G__6946 = j;
        var G__6947 = bitmap;
        i = G__6945;
        j = G__6946;
        bitmap = G__6947;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__6948 = i + 1;
          var G__6949 = init__$2;
          i = G__6948;
          init__$1 = G__6949;
          continue;
        }
      } else {
        var G__6950 = i + 1;
        var G__6951 = init__$1;
        i = G__6950;
        init__$1 = G__6951;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__6952 = i + 2;
        i = G__6952;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__6953 = j + 2;
                j = G__6953;
                continue;
              }
            } else {
              var G__6954 = j + 2;
              j = G__6954;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__6955 = j + 1;
              j = G__6955;
              continue;
            }
          } else {
            var G__6956 = j + 1;
            j = G__6956;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj6959 = {};
    return obj6959;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6960 = null;
  var G__6960__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6960__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6960 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6960__2.call(this, self__, k);
      case 3:
        return G__6960__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6960;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args6957) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6957)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__6961 = i + 1;
      var G__6962 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__6961;
      out = G__6962;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__6963 = o;
      if (G__6963) {
        var bit__4131__auto__ = G__6963.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4131__auto__ || G__6963.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__6963.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6963);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__6963);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__6964 = cljs.core.next.call(null, es);
          var G__6965 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__6964;
          tcoll__$1 = G__6965;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__6966 = ascending_QMARK_ ? t.left : t.right;
      var G__6967 = cljs.core.conj.call(null, stack__$1, t);
      t = G__6966;
      stack__$1 = G__6967;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__6969 = null;
  var G__6969__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6969__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6969 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6969__2.call(this, self__, k);
      case 3:
        return G__6969__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6969;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args6968) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6968)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__6971 = null;
  var G__6971__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6971__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6971 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6971__2.call(this, self__, k);
      case 3:
        return G__6971__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6971;
}();
cljs.core.RedNode.prototype.apply = function(self__, args6970) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6970)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__6973 = t.left;
          t = G__6973;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__6974 = t.right;
            t = G__6974;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6975 = null;
  var G__6975__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__6975__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__6975 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6975__2.call(this, self__, k);
      case 3:
        return G__6975__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__6975;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args6972) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args6972)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__6976 = cljs.core.conj.call(null, stack, t);
              var G__6977 = t.left;
              stack = G__6976;
              t = G__6977;
              continue;
            } else {
              var G__6978 = stack;
              var G__6979 = t.right;
              stack = G__6978;
              t = G__6979;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__6980 = cljs.core.conj.call(null, stack, t);
                var G__6981 = t.right;
                stack = G__6980;
                t = G__6981;
                continue;
              } else {
                var G__6982 = stack;
                var G__6983 = t.left;
                stack = G__6982;
                t = G__6983;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__6984 = cljs.core.nnext.call(null, in$);
        var G__6985 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6984;
        out = G__6985;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6986) {
    var keyvals = cljs.core.seq(arglist__6986);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6987) {
    var keyvals = cljs.core.seq(arglist__6987);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj6991 = {};
      return obj6991;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__6992 = cljs.core.nnext.call(null, kvs);
        kvs = G__6992;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__6993) {
    var keyvals = cljs.core.seq(arglist__6993);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__6994 = cljs.core.nnext.call(null, in$);
        var G__6995 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6994;
        out = G__6995;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6996) {
    var keyvals = cljs.core.seq(arglist__6996);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__6997 = cljs.core.nnext.call(null, in$);
        var G__6998 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__6997;
        out = G__6998;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6999) {
    var comparator = cljs.core.first(arglist__6999);
    var keyvals = cljs.core.rest(arglist__6999);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__7000 = self__.mseq;
    if (G__7000) {
      var bit__4131__auto__ = G__7000.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__7000.cljs$core$INext$) {
        return true;
      } else {
        if (!G__7000.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7000);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7000);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__7001 = self__.mseq;
    if (G__7001) {
      var bit__4131__auto__ = G__7001.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__7001.cljs$core$INext$) {
        return true;
      } else {
        if (!G__7001.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7001);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7001);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__7002 = self__.mseq;
    if (G__7002) {
      var bit__4131__auto__ = G__7002.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__7002.cljs$core$INext$) {
        return true;
      } else {
        if (!G__7002.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7002);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7002);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__7003 = self__.mseq;
    if (G__7003) {
      var bit__4131__auto__ = G__7003.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4131__auto__ || G__7003.cljs$core$INext$) {
        return true;
      } else {
        if (!G__7003.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7003);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__7003);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__7004_SHARP_, p2__7005_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3481__auto__ = p1__7004_SHARP_;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__7005_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__7006) {
    var maps = cljs.core.seq(arglist__7006);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3481__auto__ = m1;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__7007) {
    var f = cljs.core.first(arglist__7007);
    var maps = cljs.core.rest(arglist__7007);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__7008 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__7009 = cljs.core.next.call(null, keys);
      ret = G__7008;
      keys = G__7009;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__7010_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__7010_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__7012 = null;
  var G__7012__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7012__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7012 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7012__2.call(this, self__, k);
      case 3:
        return G__7012__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7012;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args7011) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7011)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__7013 = i + 1;
        var G__7014 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__7013;
        out = G__7014;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__7015 = i + 1;
        var G__7016 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__7015;
        out = G__7016;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__7018 = null;
  var G__7018__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__7018__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__7018 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7018__2.call(this, self__, k);
      case 3:
        return G__7018__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7018;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args7017) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7017)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__7019_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__7019_SHARP_);
    };
  }(coll__$1), other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__7021 = null;
  var G__7021__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__7021__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__7021 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7021__2.call(this, self__, k);
      case 3:
        return G__7021__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7021;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args7020) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7020)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4323__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4323__auto__.length) {
        var G__7022 = i + 1;
        var G__7023 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__7022;
        res = G__7023;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__7024 = cljs.core._next.call(null, in$__$1);
            var G__7025 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__7024;
            out = G__7025;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__7026__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__7026 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__7026__delegate.call(this, keys);
    };
    G__7026.cljs$lang$maxFixedArity = 0;
    G__7026.cljs$lang$applyTo = function(arglist__7027) {
      var keys = cljs.core.seq(arglist__7027);
      return G__7026__delegate(keys);
    };
    G__7026.cljs$core$IFn$_invoke$arity$variadic = G__7026__delegate;
    return G__7026;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__7028) {
    var keys = cljs.core.seq(arglist__7028);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__7029) {
    var comparator = cljs.core.first(arglist__7029);
    var keys = cljs.core.rest(arglist__7029);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__7030_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__7030_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__7030_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__7037, seen__$1) {
        while (true) {
          var vec__7038 = p__7037;
          var f = cljs.core.nth.call(null, vec__7038, 0, null);
          var xs__$1 = vec__7038;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__7039 = cljs.core.rest.call(null, s);
              var G__7040 = seen__$1;
              p__7037 = G__7039;
              seen__$1 = G__7040;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__7041 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__7042 = cljs.core.next.call(null, s__$1);
      ret = G__7041;
      s__$1 = G__7042;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__7044 = x;
    if (G__7044) {
      var bit__4124__auto__ = G__7044.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4124__auto__ || G__7044.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__7045 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__7046 = cljs.core.next.call(null, ks);
      var G__7047 = cljs.core.next.call(null, vs);
      map = G__7045;
      ks = G__7046;
      vs = G__7047;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__7050__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7048_SHARP_, p2__7049_SHARP_) {
        return max_key.call(null, k, p1__7048_SHARP_, p2__7049_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__7050 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7050__delegate.call(this, k, x, y, more);
    };
    G__7050.cljs$lang$maxFixedArity = 3;
    G__7050.cljs$lang$applyTo = function(arglist__7051) {
      var k = cljs.core.first(arglist__7051);
      arglist__7051 = cljs.core.next(arglist__7051);
      var x = cljs.core.first(arglist__7051);
      arglist__7051 = cljs.core.next(arglist__7051);
      var y = cljs.core.first(arglist__7051);
      var more = cljs.core.rest(arglist__7051);
      return G__7050__delegate(k, x, y, more);
    };
    G__7050.cljs$core$IFn$_invoke$arity$variadic = G__7050__delegate;
    return G__7050;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__7054__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7052_SHARP_, p2__7053_SHARP_) {
        return min_key.call(null, k, p1__7052_SHARP_, p2__7053_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__7054 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7054__delegate.call(this, k, x, y, more);
    };
    G__7054.cljs$lang$maxFixedArity = 3;
    G__7054.cljs$lang$applyTo = function(arglist__7055) {
      var k = cljs.core.first(arglist__7055);
      arglist__7055 = cljs.core.next(arglist__7055);
      var x = cljs.core.first(arglist__7055);
      arglist__7055 = cljs.core.next(arglist__7055);
      var y = cljs.core.first(arglist__7055);
      var more = cljs.core.rest(arglist__7055);
      return G__7054__delegate(k, x, y, more);
    };
    G__7054.cljs$core$IFn$_invoke$arity$variadic = G__7054__delegate;
    return G__7054;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__7058 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__7058, 0, null);
        var s = vec__7058;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__7059 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__7059, 0, null);
      var s = vec__7059;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__7062 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__7062, 0, null);
        var s = vec__7062;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__7063 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__7063, 0, null);
      var s = vec__7063;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
        return function(p1__7064_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__7064_SHARP_));
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__7075 = null;
      var G__7075__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__7075__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__7075__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__7075__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__7075__4 = function() {
        var G__7076__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__7076 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7076__delegate.call(this, x, y, z, args);
        };
        G__7076.cljs$lang$maxFixedArity = 3;
        G__7076.cljs$lang$applyTo = function(arglist__7077) {
          var x = cljs.core.first(arglist__7077);
          arglist__7077 = cljs.core.next(arglist__7077);
          var y = cljs.core.first(arglist__7077);
          arglist__7077 = cljs.core.next(arglist__7077);
          var z = cljs.core.first(arglist__7077);
          var args = cljs.core.rest(arglist__7077);
          return G__7076__delegate(x, y, z, args);
        };
        G__7076.cljs$core$IFn$_invoke$arity$variadic = G__7076__delegate;
        return G__7076;
      }();
      G__7075 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7075__0.call(this);
          case 1:
            return G__7075__1.call(this, x);
          case 2:
            return G__7075__2.call(this, x, y);
          case 3:
            return G__7075__3.call(this, x, y, z);
          default:
            return G__7075__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7075.cljs$lang$maxFixedArity = 3;
      G__7075.cljs$lang$applyTo = G__7075__4.cljs$lang$applyTo;
      return G__7075;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__7078 = null;
      var G__7078__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__7078__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__7078__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__7078__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__7078__4 = function() {
        var G__7079__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__7079 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7079__delegate.call(this, x, y, z, args);
        };
        G__7079.cljs$lang$maxFixedArity = 3;
        G__7079.cljs$lang$applyTo = function(arglist__7080) {
          var x = cljs.core.first(arglist__7080);
          arglist__7080 = cljs.core.next(arglist__7080);
          var y = cljs.core.first(arglist__7080);
          arglist__7080 = cljs.core.next(arglist__7080);
          var z = cljs.core.first(arglist__7080);
          var args = cljs.core.rest(arglist__7080);
          return G__7079__delegate(x, y, z, args);
        };
        G__7079.cljs$core$IFn$_invoke$arity$variadic = G__7079__delegate;
        return G__7079;
      }();
      G__7078 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7078__0.call(this);
          case 1:
            return G__7078__1.call(this, x);
          case 2:
            return G__7078__2.call(this, x, y);
          case 3:
            return G__7078__3.call(this, x, y, z);
          default:
            return G__7078__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7078.cljs$lang$maxFixedArity = 3;
      G__7078.cljs$lang$applyTo = G__7078__4.cljs$lang$applyTo;
      return G__7078;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__7081 = null;
      var G__7081__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__7081__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__7081__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__7081__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__7081__4 = function() {
        var G__7082__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__7082 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__7082__delegate.call(this, x, y, z, args);
        };
        G__7082.cljs$lang$maxFixedArity = 3;
        G__7082.cljs$lang$applyTo = function(arglist__7083) {
          var x = cljs.core.first(arglist__7083);
          arglist__7083 = cljs.core.next(arglist__7083);
          var y = cljs.core.first(arglist__7083);
          arglist__7083 = cljs.core.next(arglist__7083);
          var z = cljs.core.first(arglist__7083);
          var args = cljs.core.rest(arglist__7083);
          return G__7082__delegate(x, y, z, args);
        };
        G__7082.cljs$core$IFn$_invoke$arity$variadic = G__7082__delegate;
        return G__7082;
      }();
      G__7081 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7081__0.call(this);
          case 1:
            return G__7081__1.call(this, x);
          case 2:
            return G__7081__2.call(this, x, y);
          case 3:
            return G__7081__3.call(this, x, y, z);
          default:
            return G__7081__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7081.cljs$lang$maxFixedArity = 3;
      G__7081.cljs$lang$applyTo = G__7081__4.cljs$lang$applyTo;
      return G__7081;
    }();
  };
  var juxt__4 = function() {
    var G__7084__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__7085 = null;
          var G__7085__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7065_SHARP_, p2__7066_SHARP_) {
                return cljs.core.conj.call(null, p1__7065_SHARP_, p2__7066_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7085__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7067_SHARP_, p2__7068_SHARP_) {
                return cljs.core.conj.call(null, p1__7067_SHARP_, p2__7068_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7085__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7069_SHARP_, p2__7070_SHARP_) {
                return cljs.core.conj.call(null, p1__7069_SHARP_, p2__7070_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7085__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__7071_SHARP_, p2__7072_SHARP_) {
                return cljs.core.conj.call(null, p1__7071_SHARP_, p2__7072_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__7085__4 = function() {
            var G__7086__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__7073_SHARP_, p2__7074_SHARP_) {
                  return cljs.core.conj.call(null, p1__7073_SHARP_, cljs.core.apply.call(null, p2__7074_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__7086 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__7086__delegate.call(this, x, y, z, args);
            };
            G__7086.cljs$lang$maxFixedArity = 3;
            G__7086.cljs$lang$applyTo = function(arglist__7087) {
              var x = cljs.core.first(arglist__7087);
              arglist__7087 = cljs.core.next(arglist__7087);
              var y = cljs.core.first(arglist__7087);
              arglist__7087 = cljs.core.next(arglist__7087);
              var z = cljs.core.first(arglist__7087);
              var args = cljs.core.rest(arglist__7087);
              return G__7086__delegate(x, y, z, args);
            };
            G__7086.cljs$core$IFn$_invoke$arity$variadic = G__7086__delegate;
            return G__7086;
          }();
          G__7085 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__7085__0.call(this);
              case 1:
                return G__7085__1.call(this, x);
              case 2:
                return G__7085__2.call(this, x, y);
              case 3:
                return G__7085__3.call(this, x, y, z);
              default:
                return G__7085__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7085.cljs$lang$maxFixedArity = 3;
          G__7085.cljs$lang$applyTo = G__7085__4.cljs$lang$applyTo;
          return G__7085;
        }();
      }(fs__$1);
    };
    var G__7084 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__7084__delegate.call(this, f, g, h, fs);
    };
    G__7084.cljs$lang$maxFixedArity = 3;
    G__7084.cljs$lang$applyTo = function(arglist__7088) {
      var f = cljs.core.first(arglist__7088);
      arglist__7088 = cljs.core.next(arglist__7088);
      var g = cljs.core.first(arglist__7088);
      arglist__7088 = cljs.core.next(arglist__7088);
      var h = cljs.core.first(arglist__7088);
      var fs = cljs.core.rest(arglist__7088);
      return G__7084__delegate(f, g, h, fs);
    };
    G__7084.cljs$core$IFn$_invoke$arity$variadic = G__7084__delegate;
    return G__7084;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__7089 = cljs.core.next.call(null, coll);
        coll = G__7089;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__7090 = n - 1;
        var G__7091 = cljs.core.next.call(null, coll);
        n = G__7090;
        coll = G__7091;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__7093 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__7093, 0, null);
  var flags = cljs.core.nth.call(null, vec__7093, 1, null);
  var pattern = cljs.core.nth.call(null, vec__7093, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_7095 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_7096__$1 = cljs.core.next.call(null, coll);
      var n_7097 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_7096__$1 && (n_7097 == null || !(n_7097 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_7096__$1), writer, opts);
          var G__7098 = cljs.core.next.call(null, coll_7096__$1);
          var G__7099 = n_7097 - 1;
          coll_7096__$1 = G__7098;
          n_7097 = G__7099;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_7095;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__7104 = cljs.core.seq.call(null, ss);
    var chunk__7105 = null;
    var count__7106 = 0;
    var i__7107 = 0;
    while (true) {
      if (i__7107 < count__7106) {
        var s = cljs.core._nth.call(null, chunk__7105, i__7107);
        cljs.core._write.call(null, writer, s);
        var G__7108 = seq__7104;
        var G__7109 = chunk__7105;
        var G__7110 = count__7106;
        var G__7111 = i__7107 + 1;
        seq__7104 = G__7108;
        chunk__7105 = G__7109;
        count__7106 = G__7110;
        i__7107 = G__7111;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__7104);
        if (temp__4126__auto__) {
          var seq__7104__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__7104__$1)) {
            var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__7104__$1);
            var G__7112 = cljs.core.chunk_rest.call(null, seq__7104__$1);
            var G__7113 = c__4229__auto__;
            var G__7114 = cljs.core.count.call(null, c__4229__auto__);
            var G__7115 = 0;
            seq__7104 = G__7112;
            chunk__7105 = G__7113;
            count__7106 = G__7114;
            i__7107 = G__7115;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__7104__$1);
            cljs.core._write.call(null, writer, s);
            var G__7116 = cljs.core.next.call(null, seq__7104__$1);
            var G__7117 = null;
            var G__7118 = 0;
            var G__7119 = 0;
            seq__7104 = G__7116;
            chunk__7105 = G__7117;
            count__7106 = G__7118;
            i__7107 = G__7119;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__7120) {
    var writer = cljs.core.first(arglist__7120);
    var ss = cljs.core.rest(arglist__7120);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj7122 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj7122;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3469__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3469__auto__)) {
            var and__3469__auto____$1 = function() {
              var G__7128 = obj;
              if (G__7128) {
                var bit__4131__auto__ = G__7128.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4131__auto__ || G__7128.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__7128.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__7128);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__7128);
              }
            }();
            if (and__3469__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3469__auto____$1;
            }
          } else {
            return and__3469__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__7129 = obj;
              if (G__7129) {
                var bit__4124__auto__ = G__7129.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4124__auto__ || G__7129.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__7131 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__7131;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__7130 = obj;
                              if (G__7130) {
                                var bit__4131__auto__ = G__7130.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4131__auto__ || G__7130.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__7130.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__7130);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__7130);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__7136 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__7137 = null;
  var count__7138 = 0;
  var i__7139 = 0;
  while (true) {
    if (i__7139 < count__7138) {
      var obj = cljs.core._nth.call(null, chunk__7137, i__7139);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__7140 = seq__7136;
      var G__7141 = chunk__7137;
      var G__7142 = count__7138;
      var G__7143 = i__7139 + 1;
      seq__7136 = G__7140;
      chunk__7137 = G__7141;
      count__7138 = G__7142;
      i__7139 = G__7143;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__7136);
      if (temp__4126__auto__) {
        var seq__7136__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7136__$1)) {
          var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__7136__$1);
          var G__7144 = cljs.core.chunk_rest.call(null, seq__7136__$1);
          var G__7145 = c__4229__auto__;
          var G__7146 = cljs.core.count.call(null, c__4229__auto__);
          var G__7147 = 0;
          seq__7136 = G__7144;
          chunk__7137 = G__7145;
          count__7138 = G__7146;
          i__7139 = G__7147;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__7136__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__7148 = cljs.core.next.call(null, seq__7136__$1);
          var G__7149 = null;
          var G__7150 = 0;
          var G__7151 = 0;
          seq__7136 = G__7148;
          chunk__7137 = G__7149;
          count__7138 = G__7150;
          i__7139 = G__7151;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__7152) {
    var objs = cljs.core.seq(arglist__7152);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__7153) {
    var objs = cljs.core.seq(arglist__7153);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__7154) {
    var objs = cljs.core.seq(arglist__7154);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__7155) {
    var objs = cljs.core.seq(arglist__7155);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__7156) {
    var objs = cljs.core.seq(arglist__7156);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__7157) {
    var objs = cljs.core.seq(arglist__7157);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__7158) {
    var objs = cljs.core.seq(arglist__7158);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__7159) {
    var objs = cljs.core.seq(arglist__7159);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj7161 = {};
  return obj7161;
}();
cljs.core.IReset = function() {
  var obj7163 = {};
  return obj7163;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3469__auto__ = o;
    if (and__3469__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4108__auto__ = o == null ? null : o;
    return function() {
      var or__3481__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj7165 = {};
  return obj7165;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3469__auto__ = o;
      if (and__3469__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4108__auto__ = o == null ? null : o;
      return function() {
        var or__3481__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7166 = cljs.core.seq.call(null, self__.watches);
  var chunk__7167 = null;
  var count__7168 = 0;
  var i__7169 = 0;
  while (true) {
    if (i__7169 < count__7168) {
      var vec__7170 = cljs.core._nth.call(null, chunk__7167, i__7169);
      var key = cljs.core.nth.call(null, vec__7170, 0, null);
      var f = cljs.core.nth.call(null, vec__7170, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__7172 = seq__7166;
      var G__7173 = chunk__7167;
      var G__7174 = count__7168;
      var G__7175 = i__7169 + 1;
      seq__7166 = G__7172;
      chunk__7167 = G__7173;
      count__7168 = G__7174;
      i__7169 = G__7175;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__7166);
      if (temp__4126__auto__) {
        var seq__7166__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7166__$1)) {
          var c__4229__auto__ = cljs.core.chunk_first.call(null, seq__7166__$1);
          var G__7176 = cljs.core.chunk_rest.call(null, seq__7166__$1);
          var G__7177 = c__4229__auto__;
          var G__7178 = cljs.core.count.call(null, c__4229__auto__);
          var G__7179 = 0;
          seq__7166 = G__7176;
          chunk__7167 = G__7177;
          count__7168 = G__7178;
          i__7169 = G__7179;
          continue;
        } else {
          var vec__7171 = cljs.core.first.call(null, seq__7166__$1);
          var key = cljs.core.nth.call(null, vec__7171, 0, null);
          var f = cljs.core.nth.call(null, vec__7171, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__7180 = cljs.core.next.call(null, seq__7166__$1);
          var G__7181 = null;
          var G__7182 = 0;
          var G__7183 = 0;
          seq__7166 = G__7180;
          chunk__7167 = G__7181;
          count__7168 = G__7182;
          i__7169 = G__7183;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__7187__delegate = function(x, p__7184) {
      var map__7186 = p__7184;
      var map__7186__$1 = cljs.core.seq_QMARK_.call(null, map__7186) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7186) : map__7186;
      var validator = cljs.core.get.call(null, map__7186__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__7186__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7187 = function(x, var_args) {
      var p__7184 = null;
      if (arguments.length > 1) {
        p__7184 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7187__delegate.call(this, x, p__7184);
    };
    G__7187.cljs$lang$maxFixedArity = 1;
    G__7187.cljs$lang$applyTo = function(arglist__7188) {
      var x = cljs.core.first(arglist__7188);
      var p__7184 = cljs.core.rest(arglist__7188);
      return G__7187__delegate(x, p__7184);
    };
    G__7187.cljs$core$IFn$_invoke$arity$variadic = G__7187__delegate;
    return G__7187;
  }();
  atom = function(x, var_args) {
    var p__7184 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__7189__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__7189 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__7189__delegate.call(this, a, f, x, y, more);
    };
    G__7189.cljs$lang$maxFixedArity = 4;
    G__7189.cljs$lang$applyTo = function(arglist__7190) {
      var a = cljs.core.first(arglist__7190);
      arglist__7190 = cljs.core.next(arglist__7190);
      var f = cljs.core.first(arglist__7190);
      arglist__7190 = cljs.core.next(arglist__7190);
      var x = cljs.core.first(arglist__7190);
      arglist__7190 = cljs.core.next(arglist__7190);
      var y = cljs.core.first(arglist__7190);
      var more = cljs.core.rest(arglist__7190);
      return G__7189__delegate(a, f, x, y, more);
    };
    G__7189.cljs$core$IFn$_invoke$arity$variadic = G__7189__delegate;
    return G__7189;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__7191) {
    var iref = cljs.core.first(arglist__7191);
    arglist__7191 = cljs.core.next(arglist__7191);
    var f = cljs.core.first(arglist__7191);
    var args = cljs.core.rest(arglist__7191);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(___$1) {
    return function(p__7192) {
      var map__7193 = p__7192;
      var map__7193__$1 = cljs.core.seq_QMARK_.call(null, map__7193) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7193) : map__7193;
      var curr_state = map__7193__$1;
      var done = cljs.core.get.call(null, map__7193__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
      if (cljs.core.truth_(done)) {
        return curr_state;
      } else {
        return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
      }
    };
  }(___$1)));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj7195 = {};
  return obj7195;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__7197 = k;
    if (G__7197) {
      var bit__4131__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3481__auto__ = bit__4131__auto__;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return G__7197.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__7197.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7197);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7197);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__7211 = x;
      if (G__7211) {
        var bit__4131__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3481__auto__ = bit__4131__auto__;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return G__7211.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__7211.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7211);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__7211);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj7213 = {};
              return obj7213;
            }();
            var seq__7214_7224 = cljs.core.seq.call(null, x);
            var chunk__7215_7225 = null;
            var count__7216_7226 = 0;
            var i__7217_7227 = 0;
            while (true) {
              if (i__7217_7227 < count__7216_7226) {
                var vec__7218_7228 = cljs.core._nth.call(null, chunk__7215_7225, i__7217_7227);
                var k_7229 = cljs.core.nth.call(null, vec__7218_7228, 0, null);
                var v_7230 = cljs.core.nth.call(null, vec__7218_7228, 1, null);
                m[cljs.core.key__GT_js.call(null, k_7229)] = clj__GT_js.call(null, v_7230);
                var G__7231 = seq__7214_7224;
                var G__7232 = chunk__7215_7225;
                var G__7233 = count__7216_7226;
                var G__7234 = i__7217_7227 + 1;
                seq__7214_7224 = G__7231;
                chunk__7215_7225 = G__7232;
                count__7216_7226 = G__7233;
                i__7217_7227 = G__7234;
                continue;
              } else {
                var temp__4126__auto___7235 = cljs.core.seq.call(null, seq__7214_7224);
                if (temp__4126__auto___7235) {
                  var seq__7214_7236__$1 = temp__4126__auto___7235;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__7214_7236__$1)) {
                    var c__4229__auto___7237 = cljs.core.chunk_first.call(null, seq__7214_7236__$1);
                    var G__7238 = cljs.core.chunk_rest.call(null, seq__7214_7236__$1);
                    var G__7239 = c__4229__auto___7237;
                    var G__7240 = cljs.core.count.call(null, c__4229__auto___7237);
                    var G__7241 = 0;
                    seq__7214_7224 = G__7238;
                    chunk__7215_7225 = G__7239;
                    count__7216_7226 = G__7240;
                    i__7217_7227 = G__7241;
                    continue;
                  } else {
                    var vec__7219_7242 = cljs.core.first.call(null, seq__7214_7236__$1);
                    var k_7243 = cljs.core.nth.call(null, vec__7219_7242, 0, null);
                    var v_7244 = cljs.core.nth.call(null, vec__7219_7242, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_7243)] = clj__GT_js.call(null, v_7244);
                    var G__7245 = cljs.core.next.call(null, seq__7214_7236__$1);
                    var G__7246 = null;
                    var G__7247 = 0;
                    var G__7248 = 0;
                    seq__7214_7224 = G__7245;
                    chunk__7215_7225 = G__7246;
                    count__7216_7226 = G__7247;
                    i__7217_7227 = G__7248;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__7220_7249 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__7221_7250 = null;
              var count__7222_7251 = 0;
              var i__7223_7252 = 0;
              while (true) {
                if (i__7223_7252 < count__7222_7251) {
                  var x_7253__$1 = cljs.core._nth.call(null, chunk__7221_7250, i__7223_7252);
                  arr.push(x_7253__$1);
                  var G__7254 = seq__7220_7249;
                  var G__7255 = chunk__7221_7250;
                  var G__7256 = count__7222_7251;
                  var G__7257 = i__7223_7252 + 1;
                  seq__7220_7249 = G__7254;
                  chunk__7221_7250 = G__7255;
                  count__7222_7251 = G__7256;
                  i__7223_7252 = G__7257;
                  continue;
                } else {
                  var temp__4126__auto___7258 = cljs.core.seq.call(null, seq__7220_7249);
                  if (temp__4126__auto___7258) {
                    var seq__7220_7259__$1 = temp__4126__auto___7258;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__7220_7259__$1)) {
                      var c__4229__auto___7260 = cljs.core.chunk_first.call(null, seq__7220_7259__$1);
                      var G__7261 = cljs.core.chunk_rest.call(null, seq__7220_7259__$1);
                      var G__7262 = c__4229__auto___7260;
                      var G__7263 = cljs.core.count.call(null, c__4229__auto___7260);
                      var G__7264 = 0;
                      seq__7220_7249 = G__7261;
                      chunk__7221_7250 = G__7262;
                      count__7222_7251 = G__7263;
                      i__7223_7252 = G__7264;
                      continue;
                    } else {
                      var x_7265__$1 = cljs.core.first.call(null, seq__7220_7259__$1);
                      arr.push(x_7265__$1);
                      var G__7266 = cljs.core.next.call(null, seq__7220_7259__$1);
                      var G__7267 = null;
                      var G__7268 = 0;
                      var G__7269 = 0;
                      seq__7220_7249 = G__7266;
                      chunk__7221_7250 = G__7267;
                      count__7222_7251 = G__7268;
                      i__7223_7252 = G__7269;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj7271 = {};
  return obj7271;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3469__auto__ = x;
    if (and__3469__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4108__auto__ = x == null ? null : x;
    return function() {
      var or__3481__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__7292__delegate = function(x, opts) {
      if (function() {
        var G__7282 = x;
        if (G__7282) {
          var bit__4131__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3481__auto__ = bit__4131__auto__;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return G__7282.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__7282.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7282);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__7282);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__7283 = opts;
          var map__7283__$1 = cljs.core.seq_QMARK_.call(null, map__7283) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7283) : map__7283;
          var keywordize_keys = cljs.core.get.call(null, map__7283__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__7283, map__7283__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4198__auto__ = function(map__7283, map__7283__$1, keywordize_keys, keyfn) {
                          return function iter__7288(s__7289) {
                            return new cljs.core.LazySeq(null, function(map__7283, map__7283__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__7289__$1 = s__7289;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__7289__$1);
                                  if (temp__4126__auto__) {
                                    var s__7289__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__7289__$2)) {
                                      var c__4196__auto__ = cljs.core.chunk_first.call(null, s__7289__$2);
                                      var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                                      var b__7291 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                                      if (function() {
                                        var i__7290 = 0;
                                        while (true) {
                                          if (i__7290 < size__4197__auto__) {
                                            var k = cljs.core._nth.call(null, c__4196__auto__, i__7290);
                                            cljs.core.chunk_append.call(null, b__7291, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__7293 = i__7290 + 1;
                                            i__7290 = G__7293;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7291), iter__7288.call(null, cljs.core.chunk_rest.call(null, s__7289__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7291), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__7289__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__7288.call(null, cljs.core.rest.call(null, s__7289__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__7283, map__7283__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__7283, map__7283__$1, keywordize_keys, keyfn);
                        return iter__4198__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__7283, map__7283__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__7292 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7292__delegate.call(this, x, opts);
    };
    G__7292.cljs$lang$maxFixedArity = 1;
    G__7292.cljs$lang$applyTo = function(arglist__7294) {
      var x = cljs.core.first(arglist__7294);
      var opts = cljs.core.rest(arglist__7294);
      return G__7292__delegate(x, opts);
    };
    G__7292.cljs$core$IFn$_invoke$arity$variadic = G__7292__delegate;
    return G__7292;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__7295__delegate = function(args) {
        var temp__4124__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var v = temp__4124__auto__;
          return v;
        } else {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        }
      };
      var G__7295 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__7295__delegate.call(this, args);
      };
      G__7295.cljs$lang$maxFixedArity = 0;
      G__7295.cljs$lang$applyTo = function(arglist__7296) {
        var args = cljs.core.seq(arglist__7296);
        return G__7295__delegate(args);
      };
      G__7295.cljs$core$IFn$_invoke$arity$variadic = G__7295__delegate;
      return G__7295;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__7297 = ret;
        f = G__7297;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__7298__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__7298 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__7298__delegate.call(this, f, args);
    };
    G__7298.cljs$lang$maxFixedArity = 1;
    G__7298.cljs$lang$applyTo = function(arglist__7299) {
      var f = cljs.core.first(arglist__7299);
      var args = cljs.core.rest(arglist__7299);
      return G__7298__delegate(f, args);
    };
    G__7298.cljs$core$IFn$_invoke$arity$variadic = G__7298__delegate;
    return G__7298;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__7300) {
    var f = cljs.core.first(arglist__7300);
    var args = cljs.core.rest(arglist__7300);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3481__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      var or__3481__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3481__auto____$1) {
        return or__3481__auto____$1;
      } else {
        var and__3469__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3469__auto__) {
          var and__3469__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3469__auto____$1) {
            var and__3469__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3469__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__7301 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__7302 = i + 1;
                  ret = G__7301;
                  i = G__7302;
                  continue;
                }
                break;
              }
            } else {
              return and__3469__auto____$2;
            }
          } else {
            return and__3469__auto____$1;
          }
        } else {
          return and__3469__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3481__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__7303_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__7303_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__7303_SHARP_), cljs.core.second.call(null, p1__7303_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__7304_SHARP_, p2__7305_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__7304_SHARP_, p2__7305_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3481__auto__ = cljs.core.truth_(function() {
    var and__3469__auto__ = xprefs;
    if (cljs.core.truth_(and__3469__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3469__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    var or__3481__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__7306 = cljs.core.rest.call(null, ps);
          ps = G__7306;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3481__auto____$1)) {
      return or__3481__auto____$1;
    } else {
      var or__3481__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__7307 = cljs.core.rest.call(null, ps);
            ps = G__7307;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3481__auto____$2)) {
        return or__3481__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3481__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__7310) {
    var vec__7311 = p__7310;
    var k = cljs.core.nth.call(null, vec__7311, 0, null);
    var _ = cljs.core.nth.call(null, vec__7311, 1, null);
    var e = vec__7311;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3481__auto__ = be == null;
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj7313 = {};
  return obj7313;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._reset[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._reset["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._add_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._add_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._remove_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._remove_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._prefer_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._get_method[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._get_method["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._methods[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._methods["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._prefers[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._prefers["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3469__auto__ = mf;
    if (and__3469__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4108__auto__ = mf == null ? null : mf;
    return function() {
      var or__3481__auto__ = cljs.core._dispatch[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.core._dispatch["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__7314__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__7314 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__7314__delegate.call(this, _, args);
  };
  G__7314.cljs$lang$maxFixedArity = 1;
  G__7314.cljs$lang$applyTo = function(arglist__7315) {
    var _ = cljs.core.first(arglist__7315);
    var args = cljs.core.rest(arglist__7315);
    return G__7314__delegate(_, args);
  };
  G__7314.cljs$core$IFn$_invoke$arity$variadic = G__7314__delegate;
  return G__7314;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4051__auto__, writer__4052__auto__, opts__4053__auto__) {
  return cljs.core._write.call(null, writer__4052__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (Math.pow(10, x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = goog.string.startsWith(ua, "Opera");
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && (goog.string.contains(ua, "MSIE") || goog.string.contains(ua, "Trident"));
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && goog.string.contains(ua, "WebKit");
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && goog.string.contains(ua, "Mobile");
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && (!goog.userAgent.detectedIe_ && navigator.product == "Gecko"));
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.define("goog.debug.LOGGING_ENABLED", goog.DEBUG);
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line, opt_col, opt_error) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line, opt_col, opt_error);
    }
    logFunc({message:message, fileName:url, line:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var str = [];
  var helper = function(obj, space, parentSeen) {
    var nestspace = space + "  ";
    var seen = new goog.structs.Set(parentSeen);
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (seen.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  seen.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace, seen);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "", new goog.structs.Set);
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || (!err.stack || (!err.message || !err.name))))) {
    return{"message":err.message || "Not available", "name":err.name || "UnknownError", "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;args && i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.define("goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS", true);
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.define("goog.debug.LogBuffer.CAPACITY", 0);
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Loggable");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Loggable;
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.define("goog.debug.Logger.ENABLE_HIERARCHY", true);
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      if (!this.handlers_) {
        this.handlers_ = [];
      }
      this.handlers_.push(handler);
    } else {
      goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootHandlers_.push(handler);
    }
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return!!handlers && goog.array.remove(handlers, handler);
  } else {
    return false;
  }
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.LOGGING_ENABLED) {
    if (goog.debug.Logger.ENABLE_HIERARCHY) {
      this.level_ = level;
    } else {
      goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
      goog.debug.Logger.rootLevel_ = level;
    }
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return goog.debug.LOGGING_ENABLED ? this.level_ : goog.debug.Logger.Level.OFF;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(level)) {
    if (goog.isFunction(msg)) {
      msg = msg();
    }
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  if (goog.debug.LOGGING_ENABLED) {
    this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
  }
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (goog.debug.LOGGING_ENABLED && this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.log");
goog.provide("goog.log.Level");
goog.provide("goog.log.LogRecord");
goog.provide("goog.log.Logger");
goog.require("goog.debug");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.LogRecord");
goog.require("goog.debug.Logger");
goog.define("goog.log.ENABLED", goog.debug.LOGGING_ENABLED);
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    if (opt_level && logger) {
      logger.setLevel(opt_level);
    }
    return logger;
  } else {
    return null;
  }
};
goog.log.addHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    logger.addHandler(handler);
  }
};
goog.log.removeHandler = function(logger, handler) {
  if (goog.log.ENABLED && logger) {
    return logger.removeHandler(handler);
  } else {
    return false;
  }
};
goog.log.log = function(logger, level, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.log(level, msg, opt_exception);
  }
};
goog.log.error = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.severe(msg, opt_exception);
  }
};
goog.log.warning = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.warning(msg, opt_exception);
  }
};
goog.log.info = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.info(msg, opt_exception);
  }
};
goog.log.fine = function(logger, msg, opt_exception) {
  if (goog.log.ENABLED && logger) {
    logger.fine(msg, opt_exception);
  }
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.log");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6, DIRECT:7};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport", 7:"DirectTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion", DIRECT_TRANSPORT_SYNC_MODE:"directSyncMode"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while (length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength));
  }
  return s;
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.log.getLogger("goog.net.xpc");
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || (goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || (goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", 
INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", 
READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), 
TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", 
MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", 
COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  try {
    return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
  } catch (e) {
    return false;
  }
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope))) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type, proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(opt_obj, opt_type) {
  if (!opt_obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(opt_obj)) {
    return opt_obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((opt_obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  for (var type in listenerMap.listeners) {
    if (!opt_type || type == opt_type) {
      var listeners = goog.array.clone(listenerMap.listeners[type]);
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type];
    if (listenerArray) {
      listenerArray = goog.array.clone(listenerArray);
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && (listener.capture == capture && !listener.removed)) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = goog.array.clone(listenerArray);
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && (!listener.removed && listener.capture == capture)) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.json");
goog.provide("goog.json.Replacer");
goog.provide("goog.json.Reviver");
goog.provide("goog.json.Serializer");
goog.define("goog.json.USE_NATIVE_JSON", false);
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["parse"]) : function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = goog.json.USE_NATIVE_JSON ? (goog.global["JSON"]["stringify"]) : function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XhrLike");
goog.net.XhrLike = function() {
};
goog.net.XhrLike.OrNative;
goog.net.XhrLike.prototype.onreadystatechange;
goog.net.XhrLike.prototype.responseText;
goog.net.XhrLike.prototype.responseXML;
goog.net.XhrLike.prototype.readyState;
goog.net.XhrLike.prototype.status;
goog.net.XhrLike.prototype.statusText;
goog.net.XhrLike.prototype.open = function(method, url, opt_async, opt_user, opt_password) {
};
goog.net.XhrLike.prototype.send = function(opt_data) {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function(header, value) {
};
goog.net.XhrLike.prototype.getResponseHeader = function(header) {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.provide("goog.net.XmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XhrLike");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.provide("goog.net.XmlHttpDefines");
goog.require("goog.asserts");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.define("goog.net.XmlHttp.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttpDefines = {};
goog.define("goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR", false);
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.net.XhrIo.base(this, "constructor");
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = false;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = false;
  this.inSend_ = false;
  this.inOpen_ = false;
  this.inAbort_ = false;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = false;
  this.useXhr2Timeout_ = false;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    x.listen(goog.net.EventType.COMPLETE, opt_callback);
  }
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, String(url), true);
    this.inOpen_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) && (!contentTypeKey && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    this.cleanUpTimeoutTimer_();
    if (this.timeoutInterval_ > 0) {
      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);
      goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_));
      if (this.useXhr2Timeout_) {
        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;
        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this);
      } else {
        this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);
      }
    }
    goog.log.fine(this.logger_, this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && (goog.userAgent.isVersionOrHigher(9) && (goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_])));
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    goog.log.fine(this.logger_, this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.base(this, "disposeInternal");
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (this.isDisposed()) {
    return;
  }
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  if (this.xhr_ && this.useXhr2Timeout_) {
    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;
  }
  if (goog.isNumber(this.timeoutId_)) {
    goog.Timer.clear(this.timeoutId_);
    this.timeoutId_ = null;
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    goog.log.fine(this.logger_, "Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getResponseHeaders = function() {
  var headersObject = {};
  var headersArray = this.getAllResponseHeaders().split("\r\n");
  for (var i = 0;i < headersArray.length;i++) {
    if (goog.string.isEmpty(headersArray[i])) {
      continue;
    }
    var keyValue = goog.string.splitLimit(headersArray[i], ": ", 2);
    if (headersObject[keyValue[0]]) {
      headersObject[keyValue[0]] += ", " + keyValue[1];
    } else {
      headersObject[keyValue[0]] = keyValue[1];
    }
  }
  return headersObject;
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.nextTick");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && (typeof window !== "undefined" && (window.postMessage && window.addEventListener))) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.provide("goog.async.throwException");
goog.require("goog.async.nextTick");
goog.require("goog.testing.watchers");
goog.async.throwException = function(exception) {
  goog.async.nextTick(function() {
    throw exception;
  });
};
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", goog.DEBUG);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && (err && (goog.isString(err.stack) && this.stack_.length))) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", goog.DEBUG);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && (goog.isObject(error) && (error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)))) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && (this.hasFired() && this.hasErrback_())) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && (this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError))) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this);
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_;
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_);
};
goog.async.Delay.prototype.stop = function() {
  if (this.isActive()) {
    goog.Timer.clear(this.id_);
  }
  this.id_ = 0;
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_();
};
goog.async.Delay.prototype.fireIfActive = function() {
  if (this.isActive()) {
    this.fire();
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0;
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if (this.listener_) {
    this.listener_.call(this.handler_);
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && (goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop)) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && (goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10"));
    if (!(isIe9 && (goog.global["SVGElement"] && element instanceof goog.global["SVGElement"]))) {
      return element.parentElement;
    }
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && (index >= 0 && index < 32768);
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || (element.tagName == goog.dom.TagName.INPUT || (element.tagName == goog.dom.TagName.TEXTAREA || (element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON)));
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && (rect.height > 0 && rect.width > 0);
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(0.75) || (goog.dom.matchesPixelRatio_(1.5) || (goog.dom.matchesPixelRatio_(2) || (goog.dom.matchesPixelRatio_(3) || 1)));
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || (this.handler_ || this));
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || (this.handler_ || this));
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || (this.handler_ || this));
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.messaging.AbstractChannel.base(this, "constructor");
  this.services_ = {};
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.log.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if (opt_connectCb) {
    opt_connectCb();
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true;
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload};
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback;
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if (!service) {
    return;
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if (goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload);
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if (service) {
    return service;
  } else {
    if (this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload};
    }
  }
  goog.log.warning(this.logger, 'Unknown service name "' + serviceName + '"');
  return null;
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if (objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload);
    } catch (err) {
      goog.log.warning(this.logger, "Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null;
    }
  } else {
    if (!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload);
    }
  }
  return payload;
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.messaging.AbstractChannel.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_;
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc.TransportNames");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType;
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow();
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || "";
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.DirectTransport");
goog.require("goog.Timer");
goog.require("goog.async.Deferred");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.object");
goog.scope(function() {
  var CfgFields = goog.net.xpc.CfgFields;
  var CrossPageChannelRole = goog.net.xpc.CrossPageChannelRole;
  var Deferred = goog.async.Deferred;
  var EventHandler = goog.events.EventHandler;
  var Timer = goog.Timer;
  var Transport = goog.net.xpc.Transport;
  goog.net.xpc.DirectTransport = function(channel, opt_domHelper) {
    goog.net.xpc.DirectTransport.base(this, "constructor", opt_domHelper);
    this.channel_ = channel;
    this.eventHandler_ = new EventHandler(this);
    this.registerDisposable(this.eventHandler_);
    this.maybeAttemptToConnectTimer_ = new Timer(DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_, this.getWindow());
    this.registerDisposable(this.maybeAttemptToConnectTimer_);
    this.setupAckReceived_ = new Deferred;
    this.setupAckSent_ = new Deferred;
    this.connected_ = new Deferred;
    this.endpointId_ = goog.net.xpc.getRandomString(10);
    this.peerEndpointId_ = null;
    this.asyncSendsMap_ = {};
    this.originalChannelName_ = this.channel_.name;
    this.channel_.updateChannelNameAndCatalog(DirectTransport.getRoledChannelName_(this.channel_.name, this.channel_.getRole()));
    this.initialized_ = false;
    this.connected_.awaitDeferred(this.setupAckReceived_);
    this.connected_.awaitDeferred(this.setupAckSent_);
    this.connected_.addCallback(this.notifyConnected_, this);
    this.connected_.callback(true);
    this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, Timer.TICK, this.maybeAttemptToConnect_);
    goog.log.info(goog.net.xpc.logger, "DirectTransport created. role\x3d" + this.channel_.getRole());
  };
  goog.inherits(goog.net.xpc.DirectTransport, Transport);
  var DirectTransport = goog.net.xpc.DirectTransport;
  DirectTransport.CONNECTION_ATTEMPT_INTERVAL_MS_ = 100;
  DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ = 0;
  DirectTransport.isSupported = function(peerWindow) {
    try {
      return window.document.domain == peerWindow.document.domain;
    } catch (e) {
      return false;
    }
  };
  DirectTransport.activeCount_ = {};
  DirectTransport.GLOBAL_TRANPORT_PATH_ = "crosswindowmessaging.channel";
  DirectTransport.MESSAGE_DELIMITER_ = ",";
  DirectTransport.initialize_ = function(listenWindow) {
    var uid = goog.getUid(listenWindow);
    var value = DirectTransport.activeCount_[uid] || 0;
    if (value == 0) {
      var globalProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, listenWindow);
      if (globalProxy == null) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, DirectTransport.messageReceivedHandler_, listenWindow);
      }
    }
    DirectTransport.activeCount_[uid]++;
  };
  DirectTransport.getRoledChannelName_ = function(channelName, role) {
    return channelName + "_" + role;
  };
  DirectTransport.messageReceivedHandler_ = function(literal) {
    var msg = DirectTransport.Message_.fromLiteral(literal);
    var channelName = msg.channelName;
    var service = msg.service;
    var payload = msg.payload;
    goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
    var channel = goog.net.xpc.channels[channelName];
    if (channel) {
      channel.xpcDeliver(service, payload);
      return true;
    }
    var transportMessageType = DirectTransport.parseTransportPayload_(payload)[0];
    for (var staleChannelName in goog.net.xpc.channels) {
      var staleChannel = goog.net.xpc.channels[staleChannelName];
      if (staleChannel.getRole() == CrossPageChannelRole.INNER && (!staleChannel.isConnected() && (service == goog.net.xpc.TRANSPORT_SERVICE_ && transportMessageType == goog.net.xpc.SETUP))) {
        staleChannel.updateChannelNameAndCatalog(channelName);
        staleChannel.xpcDeliver(service, payload);
        return true;
      }
    }
    goog.log.info(goog.net.xpc.logger, "channel name mismatch; message ignored.");
    return false;
  };
  DirectTransport.prototype.transportType = goog.net.xpc.TransportTypes.DIRECT;
  DirectTransport.prototype.transportServiceHandler = function(payload) {
    var transportParts = DirectTransport.parseTransportPayload_(payload);
    var transportMessageType = transportParts[0];
    var peerEndpointId = transportParts[1];
    switch(transportMessageType) {
      case goog.net.xpc.SETUP_ACK_:
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
        break;
      case goog.net.xpc.SETUP:
        this.sendSetupAckMessage_();
        if (this.peerEndpointId_ != null && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
        break;
    }
  };
  DirectTransport.prototype.sendSetupMessage_ = function() {
    var payload = goog.net.xpc.SETUP;
    payload += DirectTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  };
  DirectTransport.prototype.sendSetupAckMessage_ = function() {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    if (!this.setupAckSent_.hasFired()) {
      this.setupAckSent_.callback(true);
    }
  };
  DirectTransport.prototype.connect = function() {
    var win = this.getWindow();
    if (win) {
      DirectTransport.initialize_(win);
      this.initialized_ = true;
      this.maybeAttemptToConnect_();
    } else {
      goog.log.fine(goog.net.xpc.logger, "connect(): no window to initialize.");
    }
  };
  DirectTransport.prototype.maybeAttemptToConnect_ = function() {
    var outerRole = this.channel_.getRole() == CrossPageChannelRole.OUTER;
    if (this.channel_.isConnected()) {
      this.maybeAttemptToConnectTimer_.stop();
      return;
    }
    this.maybeAttemptToConnectTimer_.start();
    this.sendSetupMessage_();
  };
  DirectTransport.prototype.send = function(service, payload) {
    if (!this.channel_.getPeerWindowObject()) {
      goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
      return;
    }
    var channelName = DirectTransport.getRoledChannelName_(this.originalChannelName_, this.getPeerRole_());
    var message = new DirectTransport.Message_(channelName, service, payload);
    if (this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE]) {
      this.executeScheduledSend_(message);
    } else {
      this.asyncSendsMap_[goog.getUid(message)] = Timer.callOnce(goog.bind(this.executeScheduledSend_, this, message), 0);
    }
  };
  DirectTransport.prototype.executeScheduledSend_ = function(message) {
    var messageId = goog.getUid(message);
    if (this.asyncSendsMap_[messageId]) {
      delete this.asyncSendsMap_[messageId];
    }
    try {
      var peerProxy = goog.getObjectByName(DirectTransport.GLOBAL_TRANPORT_PATH_, this.channel_.getPeerWindowObject());
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Can't access other window, ignoring.", error);
      return;
    }
    if (goog.isNull(peerProxy)) {
      goog.log.warning(goog.net.xpc.logger, "Peer window had no global function.");
      return;
    }
    try {
      peerProxy(message.toLiteral());
      goog.log.info(goog.net.xpc.logger, "send(): channelName\x3d" + message.channelName + " service\x3d" + message.service + " payload\x3d" + message.payload);
    } catch (error) {
      goog.log.warning(goog.net.xpc.logger, "Error performing call, ignoring.", error);
    }
  };
  DirectTransport.prototype.getPeerRole_ = function() {
    var role = this.channel_.getRole();
    return role == goog.net.xpc.CrossPageChannelRole.OUTER ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  };
  DirectTransport.prototype.notifyConnected_ = function() {
    this.channel_.notifyConnected(this.channel_.getConfig()[CfgFields.DIRECT_TRANSPORT_SYNC_MODE] ? DirectTransport.CONNECTION_DELAY_INTERVAL_MS_ : 0);
  };
  DirectTransport.prototype.disposeInternal = function() {
    if (this.initialized_) {
      var listenWindow = this.getWindow();
      var uid = goog.getUid(listenWindow);
      var value = --DirectTransport.activeCount_[uid];
      if (value == 1) {
        goog.exportSymbol(DirectTransport.GLOBAL_TRANPORT_PATH_, null, listenWindow);
      }
    }
    if (this.asyncSendsMap_) {
      goog.object.forEach(this.asyncSendsMap_, function(timerId) {
        Timer.clear(timerId);
      });
      this.asyncSendsMap_ = null;
    }
    if (this.setupAckReceived_) {
      this.setupAckReceived_.cancel();
      delete this.setupAckReceived_;
    }
    if (this.setupAckSent_) {
      this.setupAckSent_.cancel();
      delete this.setupAckSent_;
    }
    if (this.connected_) {
      this.connected_.cancel();
      delete this.connected_;
    }
    DirectTransport.base(this, "disposeInternal");
  };
  DirectTransport.parseTransportPayload_ = function(payload) {
    var transportParts = (payload.split(DirectTransport.MESSAGE_DELIMITER_));
    transportParts[1] = transportParts[1] || null;
    return transportParts;
  };
  DirectTransport.Message_ = function(channelName, service, payload) {
    this.channelName = channelName;
    this.service = service;
    this.payload = payload;
  };
  DirectTransport.Message_.prototype.toLiteral = function() {
    return{"channelName":this.channelName, "service":this.service, "payload":this.payload};
  };
  DirectTransport.Message_.fromLiteral = function(literal) {
    return new DirectTransport.Message_(literal["channelName"], literal["service"], literal["payload"]);
  };
});
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.net.xpc.FrameElementMethodTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this);
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this);
  } else {
    this.attemptSetup_();
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if (!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement;
    }
    if (this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (retry) {
    if (!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this);
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && (!this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_)) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected();
  } else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if (!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload);
  } else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if (this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1);
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while (this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload);
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false;
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null;
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframePollingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = [];
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg";
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack";
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable();
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if (this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {};
    }
  } catch (e) {
    goog.log.fine(goog.net.xpc.logger, "error retrieving peer frames");
  }
  return{};
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName];
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if (!this.isChannelAvailable()) {
    return;
  }
  goog.log.fine(goog.net.xpc.logger, "transport connect called");
  if (!this.initialized_) {
    goog.log.fine(goog.net.xpc.logger, "initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true;
  }
  this.checkForeignFramesReady_();
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name];
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr;
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if (this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return;
  }
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "Inner peer reconnect triggered.");
  this.channel_.updateChannelNameAndCatalog(goog.net.xpc.getRandomString(10));
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name);
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for (var i = 0;i < length;i++) {
    var frameName;
    try {
      if (frames[i] && frames[i].name) {
        frameName = frames[i].name;
      }
    } catch (e) {
    }
    if (!frameName) {
      continue;
    }
    var message = frameName.split("_");
    if (message.length == 3 && (message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect")) {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break;
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "deconstructSenderFrames called");
  if (this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null;
  }
  if (this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null;
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if (!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "foreign frames not (yet) present");
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_();
    } else {
      if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_();
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100);
  } else {
    goog.log.fine(goog.net.xpc.logger, "foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_();
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if (!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false;
    }
  } catch (e) {
    return false;
  }
  return true;
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if (!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if (!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this);
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.log.fine(goog.net.xpc.logger, "local frames not (yet) present");
  } else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.log.fine(goog.net.xpc.logger, "local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.log.fine(goog.net.xpc.logger, "SETUP sent");
    }, this), 100);
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if (this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if (this.deliveryQueue_) {
      goog.log.fine(goog.net.xpc.logger, "delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for (var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload);
      }
      delete this.deliveryQueue_;
    }
  } else {
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_);
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg received: " + raw);
  if (raw == goog.net.xpc.SETUP) {
    if (!this.ackSender_) {
      return;
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if (pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame);
      } else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if (part0 == 1) {
          this.parts_ = [];
        }
        this.parts_.push(frame);
        if (part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_;
        }
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received msg, but channel is not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "ack received: " + msgStr);
  if (msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_();
  } else {
    if (this.channel_.isConnected()) {
      if (!this.waitForAck_) {
        goog.log.warning(goog.net.xpc.logger, "got unexpected ack");
        return;
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if (seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_();
      } else {
        goog.log.warning(goog.net.xpc.logger, "got ack with wrong sequence");
      }
    } else {
      goog.log.warning(goog.net.xpc.logger, "received ack, but channel not connected");
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if (this.waitForAck_ || !this.sendQueue_.length) {
    return;
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true;
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if (!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "queued delivery");
  } else {
    this.channel_.xpcDeliver(service, payload);
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if (!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame);
  } else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while (pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_;
    }
  }
  this.sendNextFrame_();
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframePollingTransport.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null;
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for (var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive();
    }
  } catch (e) {
    goog.log.info(goog.net.xpc.logger, "receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if (!receivers.length) {
      return;
    }
  }
  var now = goog.now();
  if (rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now;
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t);
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.log.fine(goog.net.xpc.logger, "starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if (goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_);
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_);
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0;
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if (goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url;
    } else {
      this.sendFrame_.location.replace(url);
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "sending failed", e);
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_();
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if (loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if (payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload));
    }
    return true;
  } else {
    return false;
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.log");
goog.require("goog.log.Level");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.net.xpc.IframeRelayTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_();
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if (goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if (!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_();
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while (goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe removed");
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_);
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_();
  };
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if (!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_;
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if (!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  } else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if (!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0};
    }
    if (goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1;
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if (fragmentInfo.received != fragmentInfo.expected) {
      return;
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload));
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if (payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected();
  } else {
    if (payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected();
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if (goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for (var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr);
    }
  } else {
    this.send_(service, encodedPayload);
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if (goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '\x3ciframe onload\x3d"this.xpcOnload()"\x3e\x3c/iframe\x3e';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_;
  } else {
    var ifr = this.getWindow().document.createElement("iframe");
    if (goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr});
    } else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_);
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if (this.peerIframeId_) {
    url += "," + this.peerIframeId_;
  }
  url += "|" + service;
  if (opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr;
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "msg sent: " + url);
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.log.log(goog.net.xpc.logger, goog.log.Level.FINEST, "iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null;
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.net.xpc.IframeRelayTransport.base(this, "disposeInternal");
  if (goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0);
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.net.xpc.NativeMessagingTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if (this.oneSidedHandshake_) {
    if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_);
    } else {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  } else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if (this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_);
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.log.info(goog.net.xpc.logger, "NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole());
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version;
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if (!goog.isNumber(value)) {
    value = 0;
  }
  if (value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1;
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if (!goog.isString(data)) {
    return false;
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if (headDelim == -1 || serviceDelim == -1) {
    return false;
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.log.fine(goog.net.xpc.logger, "messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if (channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true;
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for (var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if (staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && (!staleChannel.isConnected() && (service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)))) {
      staleChannel.updateChannelNameAndCatalog(channelName);
      staleChannel.xpcDeliver(service, payload);
      return true;
    }
  }
  goog.log.info(goog.net.xpc.logger, 'channel name mismatch; message ignored"');
  return false;
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if (!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true);
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if (this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if (!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true);
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if (this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if ((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.log.info(goog.net.xpc.logger, "Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_();
        }
        this.peerEndpointId_ = peerEndpointId;
      }
      break;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if (this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload);
  }
  if (this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if (this.protocolVersion_ == 2 && (this.couldPeerVersionBe_(2) && protocolVersion == 2)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2);
  } else {
    if (this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    } else {
      return;
    }
  }
  if (!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true);
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if (version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version;
  }
  if (this.peerProtocolVersion_ == 1) {
    if (!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true);
    }
    this.peerEndpointId_ = null;
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_();
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if (this.oneSidedHandshake_ && outerFrame || (this.channel_.isConnected() || this.isDisposed())) {
    this.maybeAttemptToConnectTimer_.stop();
    return;
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_();
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if (!win) {
    goog.log.fine(goog.net.xpc.logger, "send(): window not ready");
    return;
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if (!obj.postMessage) {
          goog.log.warning(goog.net.xpc.logger, "Peer window had no postMessage function.");
          return;
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.log.fine(goog.net.xpc.logger, "send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_);
      } catch (error) {
        goog.log.warning(goog.net.xpc.logger, "Error performing postMessage, ignoring.", error);
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0);
  };
  this.send(service, payload);
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay);
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if (this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if (value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport);
    }
  }
  if (this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0;
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.net.xpc.NativeMessagingTransport.base(this, "disposeInternal");
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts;
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.log");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.net.xpc.NixTransport.base(this, "constructor", opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_;
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener;
  } catch (e) {
  }
  return isSupported;
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if (listenWindow["nix_setup_complete"]) {
    return;
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting global setup: " + e);
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if (this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_();
  } else {
    this.attemptInnerSetup_();
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true;
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if (this.localSetupCompleted_) {
    return;
  }
  try {
    var opener = this.getWindow().opener;
    if (opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if (remoteAuthToken != this.remoteAuthToken_) {
        goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
        return;
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected();
    }
  } catch (e) {
    goog.log.error(goog.net.xpc.logger, "exception caught while attempting setup: " + e);
    return;
  }
  if (!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100);
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if (typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.log.error(goog.net.xpc.logger, "Invalid NIX channel given to createChannel_");
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if (remoteAuthToken != this.remoteAuthToken_) {
    goog.log.error(goog.net.xpc.logger, "Invalid auth token from other party");
    return;
  }
  this.channel_.notifyConnected();
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload);
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1);
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if (typeof this.nixChannel_ !== "unknown") {
    goog.log.error(goog.net.xpc.logger, "NIX channel not connected");
  }
  this.nixChannel_["SendMessage"](service, payload);
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.net.xpc.NixTransport.base(this, "disposeInternal");
  this.nixChannel_ = null;
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.json");
goog.require("goog.log");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.xpc.ChannelStates");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.DirectTransport");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.TransportTypes");
goog.require("goog.net.xpc.UriCfgFields");
goog.require("goog.string");
goog.require("goog.uri.utils");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.net.xpc.CrossPageChannel.base(this, "constructor");
  for (var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if (uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  if (!goog.events.getListener(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_)) {
    goog.events.listenOnce(window, goog.events.EventType.UNLOAD, goog.net.xpc.CrossPageChannel.disposeAll_);
  }
  goog.log.info(goog.net.xpc.logger, "CrossPageChannel created: " + this.name);
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED;
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_;
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_;
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject;
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_;
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed);
  } catch (e) {
    return false;
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if (goog.isFunction(document.postMessage) || (goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage)) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
  } else {
    if (goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
    } else {
      if (goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
      } else {
        if (goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX;
        } else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
        }
      }
    }
  }
  return transportType;
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if (this.transport_) {
    return;
  }
  var CfgFields = goog.net.xpc.CfgFields;
  if (!this.cfg_[CfgFields.TRANSPORT]) {
    this.cfg_[CfgFields.TRANSPORT] = this.determineTransportType_();
  }
  switch(this.cfg_[CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.DIRECT:
      if (this.peerWindowObject_ && goog.net.xpc.DirectTransport.isSupported((this.peerWindowObject_))) {
        this.transport_ = new goog.net.xpc.DirectTransport(this, this.domHelper_);
      } else {
        goog.log.info(goog.net.xpc.logger, "DirectTransport not supported for this window, peer window in" + " different security context or not set yet.");
      }
      break;
  }
  if (this.transport_) {
    goog.log.info(goog.net.xpc.logger, "Transport created: " + this.transport_.getName());
  } else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType();
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  }
  if (this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER;
  }
  return peerCfg;
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.log.info(goog.net.xpc.logger, "createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if (!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4);
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if (opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm);
  } else {
    iframeElm.style.width = iframeElm.style.height = "100%";
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnceWithScope(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if (goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
    }, this), 1);
  } else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.log.info(goog.net.xpc.logger, "peer iframe created (" + iframeId + ")");
  }
  return(iframeElm);
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null;
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll();
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if (goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri);
  }
  if (opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()));
  }
  return peerUri;
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if (this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_);
  } else {
    this.continueConnection_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.log.info(goog.net.xpc.logger, "continueConnection_()");
  this.peerWindowDeferred_ = null;
  if (this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]);
  }
  if (this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if (!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]];
    }
    this.setPeerWindowObject(winObj);
  }
  if (!this.peerWindowObject_) {
    if (window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    } else {
      this.setPeerWindowObject(window.parent);
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while (this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()();
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" closed');
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if (this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return;
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.log.info(goog.net.xpc.logger, 'Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if (goog.isDef(opt_delay)) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start();
  } else {
    this.connectionDelay_ = null;
    this.connectCb_();
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.log.info(goog.net.xpc.logger, "Transport Error");
  this.close();
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if (!this.isConnected()) {
    goog.log.error(goog.net.xpc.logger, "Can't send. Channel not connected.");
    return;
  }
  if (!this.isPeerAvailable()) {
    goog.log.error(goog.net.xpc.logger, "Peer has disappeared.");
    this.close();
    return;
  }
  if (goog.isObject(payload)) {
    payload = goog.json.serialize(payload);
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload);
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if (this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return;
  }
  if (!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.log.warning(goog.net.xpc.logger, 'Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return;
  }
  if (this.isDisposed()) {
    goog.log.warning(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Disposed.");
  } else {
    if (!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload);
    } else {
      if (this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload);
      } else {
        goog.log.info(goog.net.xpc.logger, "CrossPageChannel::xpcDeliver(): Not connected.");
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name;
  }
  return name.replace(/[%:|]/g, encodeURIComponent);
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if (goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1);
  } else {
    return name;
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if (goog.isNumber(role)) {
    return role;
  } else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER;
  }
};
goog.net.xpc.CrossPageChannel.prototype.updateChannelNameAndCatalog = function(name) {
  goog.log.fine(goog.net.xpc.logger, "changing channel name to " + name);
  delete goog.net.xpc.channels[this.name];
  this.name = name;
  goog.net.xpc.channels[name] = this;
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || (goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]);
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.net.xpc.CrossPageChannel.base(this, "disposeInternal");
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for (var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name]);
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
goog.require("goog.events");
clojure.browser.event.EventType = function() {
  var obj6254 = {};
  return obj6254;
}();
clojure.browser.event.event_types = function event_types(this$) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.clojure$browser$event$EventType$event_types$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = clojure.browser.event.event_types[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = clojure.browser.event.event_types["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$);
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__6255) {
      var vec__6256 = p__6255;
      var k = cljs.core.nth.call(null, vec__6256, 0, null);
      var v = cljs.core.nth.call(null, vec__6256, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__6257) {
      var vec__6258 = p__6257;
      var k = cljs.core.nth.call(null, vec__6258, 0, null);
      var v = cljs.core.nth.call(null, vec__6258, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))));
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false);
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen;
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false);
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once;
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false);
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_);
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten;
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key);
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event);
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e);
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null;
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount();
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null;
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null;
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null;
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null;
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null;
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.XhrIo");
goog.require("goog.net.EventType");
goog.require("goog.json");
goog.require("goog.json");
goog.require("goog.net.EventType");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
goog.require("goog.net.xpc.CfgFields");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__6362) {
  var vec__6363 = p__6362;
  var k = cljs.core.nth.call(null, vec__6363, 0, null);
  var v = cljs.core.nth.call(null, vec__6363, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = function() {
  var obj6365 = {};
  return obj6365;
}();
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.connect[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var connect__2 = function(this$, opt1) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.connect[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1);
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.connect[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2);
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.connect[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.connect["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3);
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect;
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt);
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2);
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3);
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4);
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.transmit[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.transmit["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5);
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit;
}();
clojure.browser.net.close = function close(this$) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = clojure.browser.net.close[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = clojure.browser.net.close["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$);
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__6366) {
      var vec__6367 = p__6366;
      var k = cljs.core.nth.call(null, vec__6367, 0, null);
      var v = cljs.core.nth.call(null, vec__6367, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  var this$__$1 = this;
  return clojure.browser.net.transmit.call(null, this$__$1, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_);
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  var this$__$1 = this;
  this$__$1.setTimeoutInterval(timeout);
  return this$__$1.send(uri, method, content, headers);
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__6368) {
  var vec__6369 = p__6368;
  var k = cljs.core.nth.call(null, vec__6369, 0, null);
  var v = cljs.core.nth.call(null, vec__6369, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo;
};
clojure.browser.net.ICrossPageChannel = function() {
  var obj6371 = {};
  return obj6371;
}();
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn);
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if (function() {
      var and__3469__auto__ = this$;
      if (and__3469__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_);
    } else {
      var x__4108__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3481__auto__ = clojure.browser.net.register_service[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = clojure.browser.net.register_service["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_);
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service;
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, null);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  var this$__$1 = this;
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, on_connect_fn, config_iframe_fn, document.body);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  var this$__$1 = this;
  this$__$1.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$__$1.connect(on_connect_fn);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  var this$__$1 = this;
  return this$__$1.send(cljs.core.name.call(null, service_name), payload);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  var this$__$1 = this;
  return clojure.browser.net.register_service.call(null, this$__$1, service_name, fn, false);
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  var this$__$1 = this;
  return this$__$1.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_);
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4126__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if (cljs.core.truth_(temp__4126__auto__)) {
      var config = temp__4126__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config));
    } else {
      return null;
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__6377) {
      var vec__6378 = p__6377;
      var k = cljs.core.nth.call(null, vec__6378, 0, null);
      var v = cljs.core.nth.call(null, vec__6378, 1, null);
      var temp__4124__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var field = temp__4124__auto__;
        var G__6379 = sum;
        G__6379[field] = v;
        return G__6379;
      } else {
        return sum;
      }
    }, function() {
      var obj6381 = {};
      return obj6381;
    }(), config));
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection;
}();
goog.provide("goog.net.WebSocket");
goog.provide("goog.net.WebSocket.ErrorEvent");
goog.provide("goog.net.WebSocket.EventType");
goog.provide("goog.net.WebSocket.MessageEvent");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.log");
goog.net.WebSocket = function(opt_autoReconnect, opt_getNextReconnect) {
  goog.net.WebSocket.base(this, "constructor");
  this.autoReconnect_ = goog.isDef(opt_autoReconnect) ? opt_autoReconnect : true;
  this.getNextReconnect_ = opt_getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.inherits(goog.net.WebSocket, goog.events.EventTarget);
goog.net.WebSocket.prototype.webSocket_ = null;
goog.net.WebSocket.prototype.url_ = null;
goog.net.WebSocket.prototype.protocol_ = undefined;
goog.net.WebSocket.prototype.closeExpected_ = false;
goog.net.WebSocket.prototype.reconnectAttempt_ = 0;
goog.net.WebSocket.prototype.logger_ = goog.log.getLogger("goog.net.WebSocket");
goog.net.WebSocket.EventType = {CLOSED:goog.events.getUniqueId("closed"), ERROR:goog.events.getUniqueId("error"), MESSAGE:goog.events.getUniqueId("message"), OPENED:goog.events.getUniqueId("opened")};
goog.net.WebSocket.ReadyState_ = {CONNECTING:0, OPEN:1, CLOSING:2, CLOSED:3};
goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1E3;
goog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {
  var time = Math.pow(2, attempt) * 1E3;
  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);
};
goog.net.WebSocket.protectEntryPoints = function(errorHandler) {
  goog.net.WebSocket.prototype.onOpen_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);
};
goog.net.WebSocket.prototype.open = function(url, opt_protocol) {
  goog.asserts.assert(goog.global["WebSocket"], "This browser does not support WebSocket");
  goog.asserts.assert(!this.isOpen(), "The WebSocket is already open");
  this.clearReconnectTimer_();
  this.url_ = url;
  this.protocol_ = opt_protocol;
  if (this.protocol_) {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_ + " with protocol " + this.protocol_);
    this.webSocket_ = new WebSocket(this.url_, this.protocol_);
  } else {
    goog.log.info(this.logger_, "Opening the WebSocket on " + this.url_);
    this.webSocket_ = new WebSocket(this.url_);
  }
  this.webSocket_.onopen = goog.bind(this.onOpen_, this);
  this.webSocket_.onclose = goog.bind(this.onClose_, this);
  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);
  this.webSocket_.onerror = goog.bind(this.onError_, this);
};
goog.net.WebSocket.prototype.close = function() {
  this.clearReconnectTimer_();
  if (this.webSocket_) {
    goog.log.info(this.logger_, "Closing the WebSocket.");
    this.closeExpected_ = true;
    this.webSocket_.close();
    this.webSocket_ = null;
  }
};
goog.net.WebSocket.prototype.send = function(message) {
  goog.asserts.assert(this.isOpen(), "Cannot send without an open socket");
  this.webSocket_.send(message);
};
goog.net.WebSocket.prototype.isOpen = function() {
  return!!this.webSocket_ && this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;
};
goog.net.WebSocket.prototype.onOpen_ = function() {
  goog.log.info(this.logger_, "WebSocket opened on " + this.url_);
  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);
  this.reconnectAttempt_ = 0;
  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
};
goog.net.WebSocket.prototype.onClose_ = function(event) {
  goog.log.info(this.logger_, "The WebSocket on " + this.url_ + " closed.");
  this.dispatchEvent(goog.net.WebSocket.EventType.CLOSED);
  this.webSocket_ = null;
  if (this.closeExpected_) {
    goog.log.info(this.logger_, "The WebSocket closed normally.");
    this.url_ = null;
    this.protocol_ = undefined;
  } else {
    goog.log.error(this.logger_, "The WebSocket disconnected unexpectedly: " + event.data);
    if (this.autoReconnect_) {
      var seconds = Math.floor(this.nextReconnect_ / 1E3);
      goog.log.info(this.logger_, "Seconds until next reconnect attempt: " + seconds);
      this.reconnectTimer_ = goog.Timer.callOnce(goog.bind(this.open, this, this.url_, this.protocol_), this.nextReconnect_, this);
      this.reconnectAttempt_++;
      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);
    }
  }
  this.closeExpected_ = false;
};
goog.net.WebSocket.prototype.onMessage_ = function(event) {
  var message = (event.data);
  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(message));
};
goog.net.WebSocket.prototype.onError_ = function(event) {
  var data = (event.data);
  goog.log.error(this.logger_, "An error occurred: " + data);
  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));
};
goog.net.WebSocket.prototype.clearReconnectTimer_ = function() {
  if (goog.isDefAndNotNull(this.reconnectTimer_)) {
    goog.Timer.clear(this.reconnectTimer_);
  }
  this.reconnectTimer_ = null;
};
goog.net.WebSocket.prototype.disposeInternal = function() {
  goog.net.WebSocket.base(this, "disposeInternal");
  this.close();
};
goog.net.WebSocket.MessageEvent = function(message) {
  goog.net.WebSocket.MessageEvent.base(this, "constructor", goog.net.WebSocket.EventType.MESSAGE);
  this.message = message;
};
goog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);
goog.net.WebSocket.ErrorEvent = function(data) {
  goog.net.WebSocket.ErrorEvent.base(this, "constructor", goog.net.WebSocket.EventType.ERROR);
  this.data = data;
};
goog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.WebSocket.prototype.onOpen_ = transformer(goog.net.WebSocket.prototype.onOpen_);
  goog.net.WebSocket.prototype.onClose_ = transformer(goog.net.WebSocket.prototype.onClose_);
  goog.net.WebSocket.prototype.onMessage_ = transformer(goog.net.WebSocket.prototype.onMessage_);
  goog.net.WebSocket.prototype.onError_ = transformer(goog.net.WebSocket.prototype.onError_);
});
goog.provide("weasel.impls.websocket");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("goog.net.WebSocket");
goog.require("goog.net.WebSocket");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
weasel.impls.websocket.IWebSocket = function() {
  var obj6383 = {};
  return obj6383;
}();
weasel.impls.websocket.open_QMARK_ = function open_QMARK_(this$) {
  if (function() {
    var and__3469__auto__ = this$;
    if (and__3469__auto__) {
      return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return this$.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1(this$);
  } else {
    var x__4108__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3481__auto__ = weasel.impls.websocket.open_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = weasel.impls.websocket.open_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWebSocket.open?", this$);
        }
      }
    }().call(null, this$);
  }
};
weasel.impls.websocket.websocket_connection = function() {
  var websocket_connection = null;
  var websocket_connection__0 = function() {
    return websocket_connection.call(null, null, null);
  };
  var websocket_connection__1 = function(auto_reconnect_QMARK_) {
    return websocket_connection.call(null, auto_reconnect_QMARK_, null);
  };
  var websocket_connection__2 = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    return new goog.net.WebSocket(auto_reconnect_QMARK_, next_reconnect_fn);
  };
  websocket_connection = function(auto_reconnect_QMARK_, next_reconnect_fn) {
    switch(arguments.length) {
      case 0:
        return websocket_connection__0.call(this);
      case 1:
        return websocket_connection__1.call(this, auto_reconnect_QMARK_);
      case 2:
        return websocket_connection__2.call(this, auto_reconnect_QMARK_, next_reconnect_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  websocket_connection.cljs$core$IFn$_invoke$arity$0 = websocket_connection__0;
  websocket_connection.cljs$core$IFn$_invoke$arity$1 = websocket_connection__1;
  websocket_connection.cljs$core$IFn$_invoke$arity$2 = websocket_connection__2;
  return websocket_connection;
}();
goog.net.WebSocket.prototype.clojure$browser$event$EventType$ = true;
goog.net.WebSocket.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(this$__$1) {
    return function(p__6384) {
      var vec__6385 = p__6384;
      var k = cljs.core.nth.call(null, vec__6385, 0, null);
      var v = cljs.core.nth.call(null, vec__6385, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k.toLowerCase()), v], null);
    };
  }(this$__$1), cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.WebSocket.EventType))));
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$ = true;
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, url) {
  var this$__$1 = this;
  return clojure.browser.net.connect.call(null, this$__$1, url, null);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, url, protocol) {
  var this$__$1 = this;
  return this$__$1.open(url, protocol);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, message) {
  var this$__$1 = this;
  return this$__$1.send(message);
};
goog.net.WebSocket.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.close(cljs.core.List.EMPTY);
};
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$ = true;
goog.net.WebSocket.prototype.weasel$impls$websocket$IWebSocket$open_QMARK_$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.isOpen(cljs.core.List.EMPTY);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj6260 = {};
  return obj6260;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3469__auto__ = reader;
    if (and__3469__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4108__auto__ = reader == null ? null : reader;
    return function() {
      var or__3481__auto__ = cljs.reader.read_char[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.reader.read_char["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3469__auto__ = reader;
    if (and__3469__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4108__auto__ = reader == null ? null : reader;
    return function() {
      var or__3481__auto__ = cljs.reader.unread[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.reader.unread["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3481__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__6261) {
    var rdr = cljs.core.first(arglist__6261);
    var msg = cljs.core.rest(arglist__6261);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3469__auto__ = !(ch === "#");
  if (and__3469__auto__) {
    var and__3469__auto____$1 = !(ch === "'");
    if (and__3469__auto____$1) {
      var and__3469__auto____$2 = !(ch === ":");
      if (and__3469__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3469__auto____$2;
      }
    } else {
      return and__3469__auto____$1;
    }
  } else {
    return and__3469__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__6262 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__6263 = cljs.reader.read_char.call(null, rdr);
      sb = G__6262;
      ch = G__6263;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__6264 = cljs.reader.read_char.call(null, rdr);
      ch = G__6264;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__6265 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__6265;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__6266 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__6266;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3481__auto__ = ch == null;
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3481__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__6267 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__6268 = cljs.reader.read_char.call(null, reader);
      buffer = G__6267;
      ch = G__6268;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__6269 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__6270 = cljs.reader.read_char.call(null, reader);
        buffer = G__6269;
        ch = G__6270;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__6271 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__6272 = cljs.reader.read_char.call(null, reader);
            buffer = G__6271;
            ch = G__6272;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__6274 = o;
    if (G__6274) {
      var bit__4131__auto__ = G__6274.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4131__auto__ || G__6274.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6274.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6274);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6274);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__6275 = reader;
        var G__6276 = eof_is_error;
        var G__6277 = sentinel;
        var G__6278 = is_recursive;
        reader = G__6275;
        eof_is_error = G__6276;
        sentinel = G__6277;
        is_recursive = G__6278;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__6279 = cljs.reader.read_comment.call(null, reader, ch);
          var G__6280 = eof_is_error;
          var G__6281 = sentinel;
          var G__6282 = is_recursive;
          reader = G__6279;
          eof_is_error = G__6280;
          sentinel = G__6281;
          is_recursive = G__6282;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__6283 = reader;
              var G__6284 = eof_is_error;
              var G__6285 = sentinel;
              var G__6286 = is_recursive;
              reader = G__6283;
              eof_is_error = G__6284;
              sentinel = G__6285;
              is_recursive = G__6286;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__6287 = b.append("0");
            b = G__6287;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__6289 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__6289, 0, null);
  var years = cljs.core.nth.call(null, vec__6289, 1, null);
  var months = cljs.core.nth.call(null, vec__6289, 2, null);
  var days = cljs.core.nth.call(null, vec__6289, 3, null);
  var hours = cljs.core.nth.call(null, vec__6289, 4, null);
  var minutes = cljs.core.nth.call(null, vec__6289, 5, null);
  var seconds = cljs.core.nth.call(null, vec__6289, 6, null);
  var fraction = cljs.core.nth.call(null, vec__6289, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__6289, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__6289, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__6289, 10, null);
  var v = vec__6289;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3481__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__6291 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__6291, 0, null);
    var months = cljs.core.nth.call(null, vec__6291, 1, null);
    var days = cljs.core.nth.call(null, vec__6291, 2, null);
    var hours = cljs.core.nth.call(null, vec__6291, 3, null);
    var minutes = cljs.core.nth.call(null, vec__6291, 4, null);
    var seconds = cljs.core.nth.call(null, vec__6291, 5, null);
    var ms = cljs.core.nth.call(null, vec__6291, 6, null);
    var offset = cljs.core.nth.call(null, vec__6291, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__6304_6316 = cljs.core.seq.call(null, form);
    var chunk__6305_6317 = null;
    var count__6306_6318 = 0;
    var i__6307_6319 = 0;
    while (true) {
      if (i__6307_6319 < count__6306_6318) {
        var x_6320 = cljs.core._nth.call(null, chunk__6305_6317, i__6307_6319);
        arr.push(x_6320);
        var G__6321 = seq__6304_6316;
        var G__6322 = chunk__6305_6317;
        var G__6323 = count__6306_6318;
        var G__6324 = i__6307_6319 + 1;
        seq__6304_6316 = G__6321;
        chunk__6305_6317 = G__6322;
        count__6306_6318 = G__6323;
        i__6307_6319 = G__6324;
        continue;
      } else {
        var temp__4126__auto___6325 = cljs.core.seq.call(null, seq__6304_6316);
        if (temp__4126__auto___6325) {
          var seq__6304_6326__$1 = temp__4126__auto___6325;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6304_6326__$1)) {
            var c__4229__auto___6327 = cljs.core.chunk_first.call(null, seq__6304_6326__$1);
            var G__6328 = cljs.core.chunk_rest.call(null, seq__6304_6326__$1);
            var G__6329 = c__4229__auto___6327;
            var G__6330 = cljs.core.count.call(null, c__4229__auto___6327);
            var G__6331 = 0;
            seq__6304_6316 = G__6328;
            chunk__6305_6317 = G__6329;
            count__6306_6318 = G__6330;
            i__6307_6319 = G__6331;
            continue;
          } else {
            var x_6332 = cljs.core.first.call(null, seq__6304_6326__$1);
            arr.push(x_6332);
            var G__6333 = cljs.core.next.call(null, seq__6304_6326__$1);
            var G__6334 = null;
            var G__6335 = 0;
            var G__6336 = 0;
            seq__6304_6316 = G__6333;
            chunk__6305_6317 = G__6334;
            count__6306_6318 = G__6335;
            i__6307_6319 = G__6336;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj6309 = {};
        return obj6309;
      }();
      var seq__6310_6337 = cljs.core.seq.call(null, form);
      var chunk__6311_6338 = null;
      var count__6312_6339 = 0;
      var i__6313_6340 = 0;
      while (true) {
        if (i__6313_6340 < count__6312_6339) {
          var vec__6314_6341 = cljs.core._nth.call(null, chunk__6311_6338, i__6313_6340);
          var k_6342 = cljs.core.nth.call(null, vec__6314_6341, 0, null);
          var v_6343 = cljs.core.nth.call(null, vec__6314_6341, 1, null);
          obj[cljs.core.name.call(null, k_6342)] = v_6343;
          var G__6344 = seq__6310_6337;
          var G__6345 = chunk__6311_6338;
          var G__6346 = count__6312_6339;
          var G__6347 = i__6313_6340 + 1;
          seq__6310_6337 = G__6344;
          chunk__6311_6338 = G__6345;
          count__6312_6339 = G__6346;
          i__6313_6340 = G__6347;
          continue;
        } else {
          var temp__4126__auto___6348 = cljs.core.seq.call(null, seq__6310_6337);
          if (temp__4126__auto___6348) {
            var seq__6310_6349__$1 = temp__4126__auto___6348;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6310_6349__$1)) {
              var c__4229__auto___6350 = cljs.core.chunk_first.call(null, seq__6310_6349__$1);
              var G__6351 = cljs.core.chunk_rest.call(null, seq__6310_6349__$1);
              var G__6352 = c__4229__auto___6350;
              var G__6353 = cljs.core.count.call(null, c__4229__auto___6350);
              var G__6354 = 0;
              seq__6310_6337 = G__6351;
              chunk__6311_6338 = G__6352;
              count__6312_6339 = G__6353;
              i__6313_6340 = G__6354;
              continue;
            } else {
              var vec__6315_6355 = cljs.core.first.call(null, seq__6310_6349__$1);
              var k_6356 = cljs.core.nth.call(null, vec__6315_6355, 0, null);
              var v_6357 = cljs.core.nth.call(null, vec__6315_6355, 1, null);
              obj[cljs.core.name.call(null, k_6356)] = v_6357;
              var G__6358 = cljs.core.next.call(null, seq__6310_6349__$1);
              var G__6359 = null;
              var G__6360 = 0;
              var G__6361 = 0;
              seq__6310_6337 = G__6358;
              chunk__6311_6338 = G__6359;
              count__6312_6339 = G__6360;
              i__6313_6340 = G__6361;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("weasel.repl");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("clojure.browser.event");
goog.require("weasel.impls.websocket");
goog.require("weasel.impls.websocket");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("clojure.browser.net");
goog.require("clojure.browser.net");
goog.require("clojure.browser.event");
goog.require("clojure.browser.event");
weasel.repl.ws_connection = cljs.core.atom.call(null, null);
weasel.repl.alive_QMARK_ = function alive_QMARK_() {
  return!(cljs.core.deref.call(null, weasel.repl.ws_connection) == null);
};
weasel.repl.process_message = function() {
  var method_table__4339__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4340__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4341__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4342__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4343__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("process-message", new cljs.core.Keyword(null, "op", "op", 1013907795), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4343__auto__, method_table__4339__auto__, prefer_table__4340__auto__, method_cache__4341__auto__, cached_hierarchy__4342__auto__);
}();
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "error", "error", 1110689146), function(message) {
  return console.error([cljs.core.str("Websocket REPL error "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(message))].join(""));
});
cljs.core._add_method.call(null, weasel.repl.process_message, new cljs.core.Keyword(null, "eval-js", "eval-js", 3928548236), function(message) {
  var code = (new cljs.core.Keyword(null, "code", "code", 1016963423)).cljs$core$IFn$_invoke$arity$1(message);
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", 1013907795), new cljs.core.Keyword(null, "result", "result", 4374444943), new cljs.core.Keyword(null, "value", "value", 1125876963), function() {
    try {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "success", "success", 3441701749), new cljs.core.Keyword(null, "value", "value", 1125876963), [cljs.core.str(eval(code))].join("")], null);
    } catch (e6246) {
      if (e6246 instanceof Error) {
        var e = e6246;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "exception", "exception", 2495529921), new cljs.core.Keyword(null, "value", "value", 1125876963), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available.".call(null)], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e6246;
        } else {
          return null;
        }
      }
    }
  }()], null);
});
weasel.repl.repl_print = function repl_print(x) {
  var temp__4124__auto__ = cljs.core.deref.call(null, weasel.repl.ws_connection);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var conn = temp__4124__auto__;
    return clojure.browser.net.transmit.call(null, cljs.core.deref.call(null, weasel.repl.ws_connection), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", 1013907795), new cljs.core.Keyword(null, "print", "print", 1120839199), new cljs.core.Keyword(null, "value", "value", 1125876963), cljs.core.pr_str.call(null, x)], null));
  } else {
    return null;
  }
};
weasel.repl.connect = function() {
  var connect__delegate = function(repl_server_url, p__6247) {
    var map__6250 = p__6247;
    var map__6250__$1 = cljs.core.seq_QMARK_.call(null, map__6250) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6250) : map__6250;
    var on_close = cljs.core.get.call(null, map__6250__$1, new cljs.core.Keyword(null, "on-close", "on-close", 1416548348));
    var on_error = cljs.core.get.call(null, map__6250__$1, new cljs.core.Keyword(null, "on-error", "on-error", 1418576908));
    var on_open = cljs.core.get.call(null, map__6250__$1, new cljs.core.Keyword(null, "on-open", "on-open", 3936747754));
    var verbose = cljs.core.get.call(null, map__6250__$1, new cljs.core.Keyword(null, "verbose", "verbose", 1365011700));
    var repl_connection = weasel.impls.websocket.websocket_connection.call(null);
    cljs.core.swap_BANG_.call(null, weasel.repl.ws_connection, cljs.core.constantly.call(null, repl_connection));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "opened", "opened", 4298292187), function(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        clojure.browser.net.transmit.call(null, repl_connection, cljs.core.pr_str.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", 1013907795), new cljs.core.Keyword(null, "ready", "ready", 1122290965)], null)));
        if (cljs.core.truth_(verbose)) {
          console.info("Opened Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_open)) {
          return on_open.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "message", "message", 1968829305), function(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        var map__6251 = cljs.reader.read_string.call(null, evt.message);
        var map__6251__$1 = cljs.core.seq_QMARK_.call(null, map__6251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6251) : map__6251;
        var message = map__6251__$1;
        var op = cljs.core.get.call(null, map__6251__$1, new cljs.core.Keyword(null, "op", "op", 1013907795));
        var response = cljs.core.pr_str.call(null, weasel.repl.process_message.call(null, message));
        return clojure.browser.net.transmit.call(null, repl_connection, response);
      };
    }(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "closed", "closed", 3951351006), function(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        cljs.core.reset_BANG_.call(null, weasel.repl.ws_connection, null);
        if (cljs.core.truth_(verbose)) {
          console.info("Closed Websocket REPL connection");
        } else {
        }
        if (cljs.core.fn_QMARK_.call(null, on_close)) {
          return on_close.call(null);
        } else {
          return null;
        }
      };
    }(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose));
    clojure.browser.event.listen.call(null, repl_connection, new cljs.core.Keyword(null, "error", "error", 1110689146), function(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose) {
      return function(evt) {
        console.error("WebSocket error", evt);
        if (cljs.core.fn_QMARK_.call(null, on_error)) {
          return on_error.call(null, evt);
        } else {
          return null;
        }
      };
    }(repl_connection, map__6250, map__6250__$1, on_close, on_error, on_open, verbose));
    return clojure.browser.net.connect.call(null, repl_connection, repl_server_url);
  };
  var connect = function(repl_server_url, var_args) {
    var p__6247 = null;
    if (arguments.length > 1) {
      p__6247 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return connect__delegate.call(this, repl_server_url, p__6247);
  };
  connect.cljs$lang$maxFixedArity = 1;
  connect.cljs$lang$applyTo = function(arglist__6252) {
    var repl_server_url = cljs.core.first(arglist__6252);
    var p__6247 = cljs.core.rest(arglist__6252);
    return connect__delegate(repl_server_url, p__6247);
  };
  connect.cljs$core$IFn$_invoke$arity$variadic = connect__delegate;
  return connect;
}();
goog.provide("thi.ng.geom.webgl.arrays");
goog.require("cljs.core");
thi.ng.geom.webgl.arrays.int8 = function int8(size_or_coll) {
  return new Int8Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.uint8 = function uint8(size_or_coll) {
  return new Uint8Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.uint8_clamped = function uint8_clamped(size_or_coll) {
  return new Uint8ClampedArray(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.int16 = function int16(size_or_coll) {
  return new Int16Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.uint16 = function uint16(size_or_coll) {
  return new Uint16Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.int32 = function int32(size_or_coll) {
  return new Int32Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.uint32 = function uint32(size_or_coll) {
  return new Uint32Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.float32 = function float32(size_or_coll) {
  return new Float32Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.float64 = function float64(size_or_coll) {
  return new Float64Array(typeof size_or_coll === "number" ? size_or_coll : cljs.core.clj__GT_js.call(null, size_or_coll));
};
thi.ng.geom.webgl.arrays.typed_array_QMARK_ = function typed_array_QMARK_(x) {
  var t = cljs.core.type.call(null, x);
  return cljs.core._EQ_.call(null, t, Int8Array) || (cljs.core._EQ_.call(null, t, Uint8Array) || (cljs.core._EQ_.call(null, t, Uint8ClampedArray) || (cljs.core._EQ_.call(null, t, Int16Array) || (cljs.core._EQ_.call(null, t, Uint16Array) || (cljs.core._EQ_.call(null, t, Int32Array) || (cljs.core._EQ_.call(null, t, Uint32Array) || (cljs.core._EQ_.call(null, t, Float32Array) || cljs.core._EQ_.call(null, t, Float64Array))))))));
};
goog.provide("thi.ng.common.error");
goog.require("cljs.core");
thi.ng.common.error.throw_BANG_ = function throw_BANG_(msg) {
  throw new Error(msg);
};
thi.ng.common.error.key_error_BANG_ = function key_error_BANG_(k) {
  return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str("Illegal lookup key: "), cljs.core.str(k)].join(""));
};
thi.ng.common.error.type_error_BANG_ = function type_error_BANG_(t, x) {
  return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str("Can't create "), cljs.core.str(t), cljs.core.str(" from "), cljs.core.str(cljs.core.pr_str.call(null, x))].join(""));
};
thi.ng.common.error.arity_error_BANG_ = function arity_error_BANG_(n) {
  return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str("Wrong number of args: "), cljs.core.str(n)].join(""));
};
thi.ng.common.error.illegal_arg_BANG_ = function() {
  var illegal_arg_BANG_ = null;
  var illegal_arg_BANG___1 = function(x) {
    return illegal_arg_BANG_.call(null, "Illegal argument", x);
  };
  var illegal_arg_BANG___2 = function(msg, x) {
    return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str(msg), cljs.core.str(": "), cljs.core.str(x)].join(""));
  };
  illegal_arg_BANG_ = function(msg, x) {
    switch(arguments.length) {
      case 1:
        return illegal_arg_BANG___1.call(this, msg);
      case 2:
        return illegal_arg_BANG___2.call(this, msg, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  illegal_arg_BANG_.cljs$core$IFn$_invoke$arity$1 = illegal_arg_BANG___1;
  illegal_arg_BANG_.cljs$core$IFn$_invoke$arity$2 = illegal_arg_BANG___2;
  return illegal_arg_BANG_;
}();
thi.ng.common.error.unsupported_BANG_ = function() {
  var unsupported_BANG_ = null;
  var unsupported_BANG___0 = function() {
    return unsupported_BANG_.call(null, "Unsupported operation");
  };
  var unsupported_BANG___1 = function(msg) {
    throw new Error(msg);
  };
  unsupported_BANG_ = function(msg) {
    switch(arguments.length) {
      case 0:
        return unsupported_BANG___0.call(this);
      case 1:
        return unsupported_BANG___1.call(this, msg);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsupported_BANG_.cljs$core$IFn$_invoke$arity$0 = unsupported_BANG___0;
  unsupported_BANG_.cljs$core$IFn$_invoke$arity$1 = unsupported_BANG___1;
  return unsupported_BANG_;
}();
goog.provide("thi.ng.geom.webgl.utils");
goog.require("cljs.core");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.webgl.arrays");
thi.ng.geom.webgl.utils.get_script_text = function get_script_text(id) {
  var temp__4124__auto__ = document.getElementById(id);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var e = temp__4124__auto__;
    return e.text;
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, [cljs.core.str("Unknown DOM element: "), cljs.core.str(id)].join(""));
  }
};
thi.ng.geom.webgl.utils.loop_kv = function loop_kv(f, xs) {
  var xs__$1 = xs;
  while (true) {
    if (cljs.core.truth_(xs__$1)) {
      var x = cljs.core.first.call(null, xs__$1);
      f.call(null, cljs.core.nth.call(null, x, 0), cljs.core.nth.call(null, x, 1));
      var G__6163 = cljs.core.next.call(null, xs__$1);
      xs__$1 = G__6163;
      continue;
    } else {
      return null;
    }
    break;
  }
};
goog.provide("thi.ng.geom.core");
goog.require("cljs.core");
thi.ng.geom.core._STAR_resolution_STAR_ = 20;
thi.ng.geom.core.PMathOps = function() {
  var obj7432 = {};
  return obj7432;
}();
thi.ng.geom.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._PLUS_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._PLUS_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.+", _);
          }
        }
      }().call(null, _);
    }
  };
  var _PLUS___2 = function(_, a) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$2(_, a);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._PLUS_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._PLUS_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.+", _);
          }
        }
      }().call(null, _, a);
    }
  };
  var _PLUS___3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._PLUS_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._PLUS_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.+", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  var _PLUS___4 = function(_, a, b, c) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_PLUS_$arity$4(_, a, b, c);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._PLUS_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._PLUS_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.+", _);
          }
        }
      }().call(null, _, a, b, c);
    }
  };
  _PLUS_ = function(_, a, b, c) {
    switch(arguments.length) {
      case 1:
        return _PLUS___1.call(this, _);
      case 2:
        return _PLUS___2.call(this, _, a);
      case 3:
        return _PLUS___3.call(this, _, a, b);
      case 4:
        return _PLUS___4.call(this, _, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$3 = _PLUS___3;
  _PLUS_.cljs$core$IFn$_invoke$arity$4 = _PLUS___4;
  return _PLUS_;
}();
thi.ng.geom.core._ = function() {
  var _ = null;
  var ___1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.-", _);
          }
        }
      }().call(null, _);
    }
  };
  var ___2 = function(_, a) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_$arity$2(_, a);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.-", _);
          }
        }
      }().call(null, _, a);
    }
  };
  var ___3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.-", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  var ___4 = function(_, a, b, c) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_$arity$4(_, a, b, c);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.-", _);
          }
        }
      }().call(null, _, a, b, c);
    }
  };
  _ = function(_, a, b, c) {
    switch(arguments.length) {
      case 1:
        return ___1.call(this, _);
      case 2:
        return ___2.call(this, _, a);
      case 3:
        return ___3.call(this, _, a, b);
      case 4:
        return ___4.call(this, _, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$3 = ___3;
  _.cljs$core$IFn$_invoke$arity$4 = ___4;
  return _;
}();
thi.ng.geom.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_STAR_$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_STAR_$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._STAR_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._STAR_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.*", _);
          }
        }
      }().call(null, _);
    }
  };
  var _STAR___2 = function(_, a) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_STAR_$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_STAR_$arity$2(_, a);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._STAR_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._STAR_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.*", _);
          }
        }
      }().call(null, _, a);
    }
  };
  var _STAR___3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_STAR_$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_STAR_$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._STAR_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._STAR_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.*", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  var _STAR___4 = function(_, a, b, c) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$_STAR_$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$_STAR_$arity$4(_, a, b, c);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core._STAR_[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core._STAR_["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.*", _);
          }
        }
      }().call(null, _, a, b, c);
    }
  };
  _STAR_ = function(_, a, b, c) {
    switch(arguments.length) {
      case 1:
        return _STAR___1.call(this, _);
      case 2:
        return _STAR___2.call(this, _, a);
      case 3:
        return _STAR___3.call(this, _, a, b);
      case 4:
        return _STAR___4.call(this, _, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$3 = _STAR___3;
  _STAR_.cljs$core$IFn$_invoke$arity$4 = _STAR___4;
  return _STAR_;
}();
thi.ng.geom.core.div = function() {
  var div = null;
  var div__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$div$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$div$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.div[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.div["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.div", _);
          }
        }
      }().call(null, _);
    }
  };
  var div__2 = function(_, a) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$div$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$div$arity$2(_, a);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.div[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.div["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.div", _);
          }
        }
      }().call(null, _, a);
    }
  };
  var div__3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$div$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$div$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.div[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.div["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.div", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  var div__4 = function(_, a, b, c) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMathOps$div$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMathOps$div$arity$4(_, a, b, c);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.div[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.div["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMathOps.div", _);
          }
        }
      }().call(null, _, a, b, c);
    }
  };
  div = function(_, a, b, c) {
    switch(arguments.length) {
      case 1:
        return div__1.call(this, _);
      case 2:
        return div__2.call(this, _, a);
      case 3:
        return div__3.call(this, _, a, b);
      case 4:
        return div__4.call(this, _, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  div.cljs$core$IFn$_invoke$arity$1 = div__1;
  div.cljs$core$IFn$_invoke$arity$2 = div__2;
  div.cljs$core$IFn$_invoke$arity$3 = div__3;
  div.cljs$core$IFn$_invoke$arity$4 = div__4;
  return div;
}();
thi.ng.geom.core.madd = function madd(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMathOps$madd$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMathOps$madd$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.madd[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.madd["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMathOps.madd", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.addm = function addm(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMathOps$addm$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMathOps$addm$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.addm[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.addm["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMathOps.addm", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.msub = function msub(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMathOps$msub$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMathOps$msub$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.msub[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.msub["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMathOps.msub", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.subm = function subm(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMathOps$subm$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMathOps$subm$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.subm[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.subm["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMathOps.subm", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.abs = function abs(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMathOps$abs$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMathOps$abs$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.abs[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.abs["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMathOps.abs", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PConjugate = function() {
  var obj7434 = {};
  return obj7434;
}();
thi.ng.geom.core.conjugate = function conjugate(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PConjugate$conjugate$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PConjugate$conjugate$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.conjugate[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.conjugate["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PConjugate.conjugate", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PCrossProduct = function() {
  var obj7436 = {};
  return obj7436;
}();
thi.ng.geom.core.cross = function cross(_, a) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PCrossProduct$cross$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PCrossProduct$cross$arity$2(_, a);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.cross[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.cross["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PCrossProduct.cross", _);
        }
      }
    }().call(null, _, a);
  }
};
thi.ng.geom.core.PDeterminant = function() {
  var obj7438 = {};
  return obj7438;
}();
thi.ng.geom.core.determinant = function determinant(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDeterminant$determinant$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDeterminant$determinant$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.determinant[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.determinant["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDeterminant.determinant", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PDistance = function() {
  var obj7440 = {};
  return obj7440;
}();
thi.ng.geom.core.dist = function dist(_, a) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDistance$dist$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDistance$dist$arity$2(_, a);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.dist[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.dist["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDistance.dist", _);
        }
      }
    }().call(null, _, a);
  }
};
thi.ng.geom.core.dist_squared = function dist_squared(_, a) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDistance$dist_squared$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDistance$dist_squared$arity$2(_, a);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.dist_squared[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.dist_squared["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDistance.dist-squared", _);
        }
      }
    }().call(null, _, a);
  }
};
thi.ng.geom.core.PDotProduct = function() {
  var obj7442 = {};
  return obj7442;
}();
thi.ng.geom.core.dot = function dot(_, a) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDotProduct$dot$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDotProduct$dot$arity$2(_, a);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.dot[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.dot["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDotProduct.dot", _);
        }
      }
    }().call(null, _, a);
  }
};
thi.ng.geom.core.PHeading = function() {
  var obj7444 = {};
  return obj7444;
}();
thi.ng.geom.core.heading = function heading(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$heading$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$heading$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.heading[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.heading["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.heading", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.heading_xy = function heading_xy(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$heading_xy$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$heading_xy$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.heading_xy[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.heading_xy["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.heading-xy", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.heading_xz = function heading_xz(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$heading_xz$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$heading_xz$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.heading_xz[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.heading_xz["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.heading-xz", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.heading_yz = function heading_yz(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$heading_yz$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$heading_yz$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.heading_yz[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.heading_yz["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.heading-yz", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.angle_between = function angle_between(_, a) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$angle_between$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$angle_between$arity$2(_, a);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.angle_between[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.angle_between["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.angle-between", _);
        }
      }
    }().call(null, _, a);
  }
};
thi.ng.geom.core.slope_xy = function slope_xy(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$slope_xy$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$slope_xy$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.slope_xy[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.slope_xy["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.slope-xy", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.slope_xz = function slope_xz(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$slope_xz$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$slope_xz$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.slope_xz[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.slope_xz["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.slope-xz", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.slope_yz = function slope_yz(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PHeading$slope_yz$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PHeading$slope_yz$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.slope_yz[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.slope_yz["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PHeading.slope-yz", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PInterpolate = function() {
  var obj7446 = {};
  return obj7446;
}();
thi.ng.geom.core.mix = function() {
  var mix = null;
  var mix__2 = function(_, x) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PInterpolate$mix$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PInterpolate$mix$arity$2(_, x);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.mix[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.mix["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PInterpolate.mix", _);
          }
        }
      }().call(null, _, x);
    }
  };
  var mix__3 = function(_, x, t) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PInterpolate$mix$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PInterpolate$mix$arity$3(_, x, t);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.mix[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.mix["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PInterpolate.mix", _);
          }
        }
      }().call(null, _, x, t);
    }
  };
  var mix__6 = function(_, a, b, c, u, v) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PInterpolate$mix$arity$6;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PInterpolate$mix$arity$6(_, a, b, c, u, v);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.mix[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.mix["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PInterpolate.mix", _);
          }
        }
      }().call(null, _, a, b, c, u, v);
    }
  };
  mix = function(_, a, b, c, u, v) {
    switch(arguments.length) {
      case 2:
        return mix__2.call(this, _, a);
      case 3:
        return mix__3.call(this, _, a, b);
      case 6:
        return mix__6.call(this, _, a, b, c, u, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mix.cljs$core$IFn$_invoke$arity$2 = mix__2;
  mix.cljs$core$IFn$_invoke$arity$3 = mix__3;
  mix.cljs$core$IFn$_invoke$arity$6 = mix__6;
  return mix;
}();
thi.ng.geom.core.PInvert = function() {
  var obj7448 = {};
  return obj7448;
}();
thi.ng.geom.core.invert = function invert(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PInvert$invert$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PInvert$invert$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.invert[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.invert["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PInvert.invert", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PLimit = function() {
  var obj7450 = {};
  return obj7450;
}();
thi.ng.geom.core.limit = function limit(_, x) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PLimit$limit$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PLimit$limit$arity$2(_, x);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.limit[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.limit["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PLimit.limit", _);
        }
      }
    }().call(null, _, x);
  }
};
thi.ng.geom.core.PMagnitude = function() {
  var obj7452 = {};
  return obj7452;
}();
thi.ng.geom.core.mag = function mag(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMagnitude$mag$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMagnitude$mag$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.mag[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.mag["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMagnitude.mag", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.mag_squared = function mag_squared(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PMagnitude$mag_squared$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PMagnitude$mag_squared$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.mag_squared[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.mag_squared["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PMagnitude.mag-squared", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PMatrixConvert = function() {
  var obj7454 = {};
  return obj7454;
}();
thi.ng.geom.core.as_matrix = function() {
  var as_matrix = null;
  var as_matrix__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_matrix[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_matrix["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMatrixConvert.as-matrix", _);
          }
        }
      }().call(null, _);
    }
  };
  var as_matrix__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_matrix[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_matrix["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMatrixConvert.as-matrix", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  as_matrix = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return as_matrix__1.call(this, _);
      case 2:
        return as_matrix__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_matrix.cljs$core$IFn$_invoke$arity$1 = as_matrix__1;
  as_matrix.cljs$core$IFn$_invoke$arity$2 = as_matrix__2;
  return as_matrix;
}();
thi.ng.geom.core.PMinMax = function() {
  var obj7456 = {};
  return obj7456;
}();
thi.ng.geom.core.min = function() {
  var min = null;
  var min__2 = function(_, x) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMinMax$min$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMinMax$min$arity$2(_, x);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.min[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.min["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMinMax.min", _);
          }
        }
      }().call(null, _, x);
    }
  };
  var min__3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMinMax$min$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMinMax$min$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.min[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.min["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMinMax.min", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  min = function(_, a, b) {
    switch(arguments.length) {
      case 2:
        return min__2.call(this, _, a);
      case 3:
        return min__3.call(this, _, a, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$3 = min__3;
  return min;
}();
thi.ng.geom.core.max = function() {
  var max = null;
  var max__2 = function(_, y) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMinMax$max$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMinMax$max$arity$2(_, y);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.max[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.max["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMinMax.max", _);
          }
        }
      }().call(null, _, y);
    }
  };
  var max__3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMinMax$max$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMinMax$max$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.max[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.max["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMinMax.max", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  max = function(_, a, b) {
    switch(arguments.length) {
      case 2:
        return max__2.call(this, _, a);
      case 3:
        return max__3.call(this, _, a, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$3 = max__3;
  return max;
}();
thi.ng.geom.core.PNormal = function() {
  var obj7458 = {};
  return obj7458;
}();
thi.ng.geom.core.normal = function() {
  var normal = null;
  var normal__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PNormal$normal$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PNormal$normal$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.normal[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.normal["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PNormal.normal", _);
          }
        }
      }().call(null, _);
    }
  };
  var normal__2 = function(_, a) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PNormal$normal$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PNormal$normal$arity$2(_, a);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.normal[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.normal["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PNormal.normal", _);
          }
        }
      }().call(null, _, a);
    }
  };
  normal = function(_, a) {
    switch(arguments.length) {
      case 1:
        return normal__1.call(this, _);
      case 2:
        return normal__2.call(this, _, a);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  normal.cljs$core$IFn$_invoke$arity$1 = normal__1;
  normal.cljs$core$IFn$_invoke$arity$2 = normal__2;
  return normal;
}();
thi.ng.geom.core.PNormalize = function() {
  var obj7460 = {};
  return obj7460;
}();
thi.ng.geom.core.normalize = function() {
  var normalize = null;
  var normalize__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PNormalize$normalize$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PNormalize$normalize$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.normalize[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.normalize["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PNormalize.normalize", _);
          }
        }
      }().call(null, _);
    }
  };
  var normalize__2 = function(_, len) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PNormalize$normalize$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PNormalize$normalize$arity$2(_, len);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.normalize[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.normalize["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PNormalize.normalize", _);
          }
        }
      }().call(null, _, len);
    }
  };
  normalize = function(_, len) {
    switch(arguments.length) {
      case 1:
        return normalize__1.call(this, _);
      case 2:
        return normalize__2.call(this, _, len);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  normalize.cljs$core$IFn$_invoke$arity$1 = normalize__1;
  normalize.cljs$core$IFn$_invoke$arity$2 = normalize__2;
  return normalize;
}();
thi.ng.geom.core.normalized_QMARK_ = function normalized_QMARK_(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalize$normalized_QMARK_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalize$normalized_QMARK_$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.normalized_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.normalized_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalize.normalized?", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PSetOps = function() {
  var obj7462 = {};
  return obj7462;
}();
thi.ng.geom.core.union = function union(_, x) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSetOps$union$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSetOps$union$arity$2(_, x);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.union[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.union["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSetOps.union", _);
        }
      }
    }().call(null, _, x);
  }
};
thi.ng.geom.core.intersection = function intersection(_, y) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSetOps$intersection$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSetOps$intersection$arity$2(_, y);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.intersection[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.intersection["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSetOps.intersection", _);
        }
      }
    }().call(null, _, y);
  }
};
thi.ng.geom.core.difference = function difference(_, x) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSetOps$difference$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSetOps$difference$arity$2(_, x);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.difference[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.difference["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSetOps.difference", _);
        }
      }
    }().call(null, _, x);
  }
};
thi.ng.geom.core.PTranspose = function() {
  var obj7464 = {};
  return obj7464;
}();
thi.ng.geom.core.transpose = function transpose(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PTranspose$transpose$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PTranspose$transpose$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.transpose[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.transpose["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PTranspose.transpose", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PPolar = function() {
  var obj7466 = {};
  return obj7466;
}();
thi.ng.geom.core.as_polar = function as_polar(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PPolar$as_polar$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PPolar$as_polar$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.as_polar[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.as_polar["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PPolar.as-polar", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.as_cartesian = function as_cartesian(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PPolar$as_cartesian$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PPolar$as_cartesian$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.as_cartesian[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.as_cartesian["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PPolar.as-cartesian", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PReflect = function() {
  var obj7468 = {};
  return obj7468;
}();
thi.ng.geom.core.reflect = function reflect(_, r) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PReflect$reflect$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PReflect$reflect$arity$2(_, r);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.reflect[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.reflect["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PReflect.reflect", _);
        }
      }
    }().call(null, _, r);
  }
};
thi.ng.geom.core.PRotate = function() {
  var obj7470 = {};
  return obj7470;
}();
thi.ng.geom.core.rotate = function rotate(_, t) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PRotate$rotate$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PRotate$rotate$arity$2(_, t);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.rotate[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.rotate["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRotate.rotate", _);
        }
      }
    }().call(null, _, t);
  }
};
thi.ng.geom.core.PRotate3D = function() {
  var obj7472 = {};
  return obj7472;
}();
thi.ng.geom.core.rotate_x = function rotate_x(_, t) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PRotate3D$rotate_x$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PRotate3D$rotate_x$arity$2(_, t);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.rotate_x[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.rotate_x["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRotate3D.rotate-x", _);
        }
      }
    }().call(null, _, t);
  }
};
thi.ng.geom.core.rotate_y = function rotate_y(_, t) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PRotate3D$rotate_y$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PRotate3D$rotate_y$arity$2(_, t);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.rotate_y[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.rotate_y["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRotate3D.rotate-y", _);
        }
      }
    }().call(null, _, t);
  }
};
thi.ng.geom.core.rotate_z = function rotate_z(_, t) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PRotate3D$rotate_z$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PRotate3D$rotate_z$arity$2(_, t);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.rotate_z[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.rotate_z["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRotate3D.rotate-z", _);
        }
      }
    }().call(null, _, t);
  }
};
thi.ng.geom.core.rotate_around_axis = function rotate_around_axis(_, a, t) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3(_, a, t);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.rotate_around_axis[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.rotate_around_axis["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRotate3D.rotate-around-axis", _);
        }
      }
    }().call(null, _, a, t);
  }
};
thi.ng.geom.core.PScale = function() {
  var obj7474 = {};
  return obj7474;
}();
thi.ng.geom.core.scale = function() {
  var scale = null;
  var scale__2 = function(_, s) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PScale$scale$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PScale$scale$arity$2(_, s);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.scale[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.scale["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PScale.scale", _);
          }
        }
      }().call(null, _, s);
    }
  };
  var scale__3 = function(_, a, b) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PScale$scale$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PScale$scale$arity$3(_, a, b);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.scale[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.scale["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PScale.scale", _);
          }
        }
      }().call(null, _, a, b);
    }
  };
  var scale__4 = function(_, a, b, c) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PScale$scale$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PScale$scale$arity$4(_, a, b, c);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.scale[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.scale["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PScale.scale", _);
          }
        }
      }().call(null, _, a, b, c);
    }
  };
  scale = function(_, a, b, c) {
    switch(arguments.length) {
      case 2:
        return scale__2.call(this, _, a);
      case 3:
        return scale__3.call(this, _, a, b);
      case 4:
        return scale__4.call(this, _, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scale.cljs$core$IFn$_invoke$arity$2 = scale__2;
  scale.cljs$core$IFn$_invoke$arity$3 = scale__3;
  scale.cljs$core$IFn$_invoke$arity$4 = scale__4;
  return scale;
}();
thi.ng.geom.core.scale_size = function scale_size(_, s) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PScale$scale_size$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PScale$scale_size$arity$2(_, s);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.scale_size[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.scale_size["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PScale.scale-size", _);
        }
      }
    }().call(null, _, s);
  }
};
thi.ng.geom.core.PShear = function() {
  var obj7476 = {};
  return obj7476;
}();
thi.ng.geom.core.shear = function() {
  var shear = null;
  var shear__2 = function(_, s) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PShear$shear$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PShear$shear$arity$2(_, s);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.shear[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.shear["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PShear.shear", _);
          }
        }
      }().call(null, _, s);
    }
  };
  var shear__3 = function(_, sx, sy) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PShear$shear$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PShear$shear$arity$3(_, sx, sy);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.shear[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.shear["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PShear.shear", _);
          }
        }
      }().call(null, _, sx, sy);
    }
  };
  var shear__4 = function(_, sx, sy, sz) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PShear$shear$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PShear$shear$arity$4(_, sx, sy, sz);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.shear[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.shear["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PShear.shear", _);
          }
        }
      }().call(null, _, sx, sy, sz);
    }
  };
  shear = function(_, sx, sy, sz) {
    switch(arguments.length) {
      case 2:
        return shear__2.call(this, _, sx);
      case 3:
        return shear__3.call(this, _, sx, sy);
      case 4:
        return shear__4.call(this, _, sx, sy, sz);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  shear.cljs$core$IFn$_invoke$arity$2 = shear__2;
  shear.cljs$core$IFn$_invoke$arity$3 = shear__3;
  shear.cljs$core$IFn$_invoke$arity$4 = shear__4;
  return shear;
}();
thi.ng.geom.core.PTransform = function() {
  var obj7478 = {};
  return obj7478;
}();
thi.ng.geom.core.transform = function transform(_, matrix) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PTransform$transform$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PTransform$transform$arity$2(_, matrix);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.transform[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.transform["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PTransform.transform", _);
        }
      }
    }().call(null, _, matrix);
  }
};
thi.ng.geom.core.PTranslate = function() {
  var obj7480 = {};
  return obj7480;
}();
thi.ng.geom.core.translate = function() {
  var translate = null;
  var translate__2 = function(_, t) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PTranslate$translate$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PTranslate$translate$arity$2(_, t);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.translate[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.translate["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PTranslate.translate", _);
          }
        }
      }().call(null, _, t);
    }
  };
  var translate__3 = function(_, x, y) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PTranslate$translate$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PTranslate$translate$arity$3(_, x, y);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.translate[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.translate["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PTranslate.translate", _);
          }
        }
      }().call(null, _, x, y);
    }
  };
  var translate__4 = function(_, x, y, z) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PTranslate$translate$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PTranslate$translate$arity$4(_, x, y, z);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.translate[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.translate["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PTranslate.translate", _);
          }
        }
      }().call(null, _, x, y, z);
    }
  };
  translate = function(_, x, y, z) {
    switch(arguments.length) {
      case 2:
        return translate__2.call(this, _, x);
      case 3:
        return translate__3.call(this, _, x, y);
      case 4:
        return translate__4.call(this, _, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  translate.cljs$core$IFn$_invoke$arity$2 = translate__2;
  translate.cljs$core$IFn$_invoke$arity$3 = translate__3;
  translate.cljs$core$IFn$_invoke$arity$4 = translate__4;
  return translate;
}();
thi.ng.geom.core.PVectorTransform = function() {
  var obj7482 = {};
  return obj7482;
}();
thi.ng.geom.core.transform_vector = function transform_vector(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PVectorTransform$transform_vector$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PVectorTransform$transform_vector$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.transform_vector[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.transform_vector["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PVectorTransform.transform-vector", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.PGraph = function() {
  var obj7484 = {};
  return obj7484;
}();
thi.ng.geom.core.connected_components = function connected_components(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$connected_components$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$connected_components$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.connected_components[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.connected_components["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.connected-components", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.cyclic_QMARK_ = function cyclic_QMARK_(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$cyclic_QMARK_$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$cyclic_QMARK_$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.cyclic_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.cyclic_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.cyclic?", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.vertex_valence = function vertex_valence(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$vertex_valence$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$vertex_valence$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.vertex_valence[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.vertex_valence["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.vertex-valence", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.vertex_neighbors = function vertex_neighbors(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$vertex_neighbors$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$vertex_neighbors$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.vertex_neighbors[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.vertex_neighbors["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.vertex-neighbors", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.remove_vertex = function remove_vertex(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$remove_vertex$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$remove_vertex$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.remove_vertex[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.remove_vertex["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.remove-vertex", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.replace_vertex = function replace_vertex(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$replace_vertex$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$replace_vertex$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.replace_vertex[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.replace_vertex["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.replace-vertex", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.merge_vertices = function merge_vertices(_, a, b) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGraph$merge_vertices$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGraph$merge_vertices$arity$3(_, a, b);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.merge_vertices[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.merge_vertices["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGraph.merge-vertices", _);
        }
      }
    }().call(null, _, a, b);
  }
};
thi.ng.geom.core.PDirectedGraph = function() {
  var obj7486 = {};
  return obj7486;
}();
thi.ng.geom.core.in_vertices = function in_vertices(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDirectedGraph$in_vertices$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDirectedGraph$in_vertices$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.in_vertices[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.in_vertices["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDirectedGraph.in-vertices", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.out_vertices = function out_vertices(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PDirectedGraph$out_vertices$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PDirectedGraph$out_vertices$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.out_vertices[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.out_vertices["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PDirectedGraph.out-vertices", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.PGraphConvert = function() {
  var obj7488 = {};
  return obj7488;
}();
thi.ng.geom.core.as_graph = function() {
  var as_graph = null;
  var as_graph__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PGraphConvert$as_graph$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PGraphConvert$as_graph$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_graph[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_graph["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PGraphConvert.as-graph", _);
          }
        }
      }().call(null, _);
    }
  };
  var as_graph__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PGraphConvert$as_graph$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PGraphConvert$as_graph$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_graph[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_graph["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PGraphConvert.as-graph", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  as_graph = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return as_graph__1.call(this, _);
      case 2:
        return as_graph__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_graph.cljs$core$IFn$_invoke$arity$1 = as_graph__1;
  as_graph.cljs$core$IFn$_invoke$arity$2 = as_graph__2;
  return as_graph;
}();
thi.ng.geom.core.PVertexAccess = function() {
  var obj7490 = {};
  return obj7490;
}();
thi.ng.geom.core.vertices = function() {
  var vertices = null;
  var vertices__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PVertexAccess$vertices$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PVertexAccess$vertices$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.vertices[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.vertices["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PVertexAccess.vertices", _);
          }
        }
      }().call(null, _);
    }
  };
  var vertices__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PVertexAccess$vertices$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PVertexAccess$vertices$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.vertices[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.vertices["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PVertexAccess.vertices", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  vertices = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return vertices__1.call(this, _);
      case 2:
        return vertices__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vertices.cljs$core$IFn$_invoke$arity$1 = vertices__1;
  vertices.cljs$core$IFn$_invoke$arity$2 = vertices__2;
  return vertices;
}();
thi.ng.geom.core.PEdgeAccess = function() {
  var obj7492 = {};
  return obj7492;
}();
thi.ng.geom.core.edges = function() {
  var edges = null;
  var edges__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PEdgeAccess$edges$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PEdgeAccess$edges$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.edges[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.edges["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PEdgeAccess.edges", _);
          }
        }
      }().call(null, _);
    }
  };
  var edges__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PEdgeAccess$edges$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PEdgeAccess$edges$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.edges[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.edges["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PEdgeAccess.edges", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  edges = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return edges__1.call(this, _);
      case 2:
        return edges__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edges.cljs$core$IFn$_invoke$arity$1 = edges__1;
  edges.cljs$core$IFn$_invoke$arity$2 = edges__2;
  return edges;
}();
thi.ng.geom.core.PFaceAccess = function() {
  var obj7494 = {};
  return obj7494;
}();
thi.ng.geom.core.add_face = function add_face(_, f) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PFaceAccess$add_face$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PFaceAccess$add_face$arity$2(_, f);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.add_face[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.add_face["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFaceAccess.add-face", _);
        }
      }
    }().call(null, _, f);
  }
};
thi.ng.geom.core.faces = function faces(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PFaceAccess$faces$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PFaceAccess$faces$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.faces[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.faces["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFaceAccess.faces", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.remove_face = function remove_face(_, f) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PFaceAccess$remove_face$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PFaceAccess$remove_face$arity$2(_, f);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.remove_face[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.remove_face["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFaceAccess.remove-face", _);
        }
      }
    }().call(null, _, f);
  }
};
thi.ng.geom.core.vertex_faces = function vertex_faces(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PFaceAccess$vertex_faces$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PFaceAccess$vertex_faces$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.vertex_faces[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.vertex_faces["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFaceAccess.vertex-faces", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.PNormalAccess = function() {
  var obj7496 = {};
  return obj7496;
}();
thi.ng.geom.core.compute_face_normals = function compute_face_normals(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$compute_face_normals$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$compute_face_normals$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.compute_face_normals[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.compute_face_normals["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.compute-face-normals", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.compute_vertex_normals = function compute_vertex_normals(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$compute_vertex_normals$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$compute_vertex_normals$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.compute_vertex_normals[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.compute_vertex_normals["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.compute-vertex-normals", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.face_normals = function face_normals(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$face_normals$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$face_normals$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.face_normals[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.face_normals["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.face-normals", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.face_normal = function face_normal(_, f) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$face_normal$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$face_normal$arity$2(_, f);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.face_normal[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.face_normal["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.face-normal", _);
        }
      }
    }().call(null, _, f);
  }
};
thi.ng.geom.core.vertex_normals = function vertex_normals(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$vertex_normals$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$vertex_normals$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.vertex_normals[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.vertex_normals["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.vertex-normals", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.vertex_normal = function vertex_normal(_, v) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PNormalAccess$vertex_normal$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PNormalAccess$vertex_normal$arity$2(_, v);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.vertex_normal[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.vertex_normal["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PNormalAccess.vertex-normal", _);
        }
      }
    }().call(null, _, v);
  }
};
thi.ng.geom.core.PAlign = function() {
  var obj7498 = {};
  return obj7498;
}();
thi.ng.geom.core.align_with = function align_with(_, x, opts) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PAlign$align_with$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PAlign$align_with$arity$3(_, x, opts);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.align_with[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.align_with["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PAlign.align-with", _);
        }
      }
    }().call(null, _, x, opts);
  }
};
thi.ng.geom.core.PArea = function() {
  var obj7500 = {};
  return obj7500;
}();
thi.ng.geom.core.area = function area(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PArea$area$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PArea$area$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.area[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.area["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PArea.area", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PBoundary = function() {
  var obj7502 = {};
  return obj7502;
}();
thi.ng.geom.core.contains_entity_QMARK_ = function contains_entity_QMARK_(_, s) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBoundary$contains_entity_QMARK_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBoundary$contains_entity_QMARK_$arity$2(_, s);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.contains_entity_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.contains_entity_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBoundary.contains-entity?", _);
        }
      }
    }().call(null, _, s);
  }
};
thi.ng.geom.core.contains_point_QMARK_ = function contains_point_QMARK_(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.contains_point_QMARK_[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.contains_point_QMARK_["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBoundary.contains-point?", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.PBoundingCircle = function() {
  var obj7504 = {};
  return obj7504;
}();
thi.ng.geom.core.bounding_circle = function bounding_circle(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBoundingCircle$bounding_circle$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBoundingCircle$bounding_circle$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.bounding_circle[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.bounding_circle["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBoundingCircle.bounding-circle", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PBoundingSphere = function() {
  var obj7506 = {};
  return obj7506;
}();
thi.ng.geom.core.bounding_sphere = function bounding_sphere(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.bounding_sphere[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.bounding_sphere["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBoundingSphere.bounding-sphere", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PBounds = function() {
  var obj7508 = {};
  return obj7508;
}();
thi.ng.geom.core.bounds = function bounds(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBounds$bounds$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBounds$bounds$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.bounds[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.bounds["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBounds.bounds", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.depth = function depth(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBounds$depth$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBounds$depth$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.depth[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.depth["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBounds.depth", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.height = function height(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBounds$height$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBounds$height$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.height[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.height["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBounds.height", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.width = function width(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PBounds$width$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PBounds$width$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.width[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.width["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBounds.width", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PCenter = function() {
  var obj7510 = {};
  return obj7510;
}();
thi.ng.geom.core.center = function() {
  var center = null;
  var center__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PCenter$center$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PCenter$center$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.center[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.center["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PCenter.center", _);
          }
        }
      }().call(null, _);
    }
  };
  var center__2 = function(_, p) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PCenter$center$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PCenter$center$arity$2(_, p);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.center[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.center["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PCenter.center", _);
          }
        }
      }().call(null, _, p);
    }
  };
  center = function(_, p) {
    switch(arguments.length) {
      case 1:
        return center__1.call(this, _);
      case 2:
        return center__2.call(this, _, p);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  center.cljs$core$IFn$_invoke$arity$1 = center__1;
  center.cljs$core$IFn$_invoke$arity$2 = center__2;
  return center;
}();
thi.ng.geom.core.centroid = function centroid(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PCenter$centroid$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PCenter$centroid$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.centroid[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.centroid["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PCenter.centroid", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PCircumference = function() {
  var obj7512 = {};
  return obj7512;
}();
thi.ng.geom.core.circumference = function circumference(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PCircumference$circumference$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PCircumference$circumference$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.circumference[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.circumference["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PCircumference.circumference", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PClassify = function() {
  var obj7514 = {};
  return obj7514;
}();
thi.ng.geom.core.classify_point = function classify_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PClassify$classify_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PClassify$classify_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.classify_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.classify_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PClassify.classify-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.PClip = function() {
  var obj7516 = {};
  return obj7516;
}();
thi.ng.geom.core.clip_with = function clip_with(_, s) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PClip$clip_with$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PClip$clip_with$arity$2(_, s);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.clip_with[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.clip_with["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PClip.clip-with", _);
        }
      }
    }().call(null, _, s);
  }
};
thi.ng.geom.core.PConvexHull = function() {
  var obj7518 = {};
  return obj7518;
}();
thi.ng.geom.core.convex_hull = function convex_hull(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PConvexHull$convex_hull$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PConvexHull$convex_hull$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.convex_hull[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.convex_hull["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PConvexHull.convex-hull", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PExtrude = function() {
  var obj7520 = {};
  return obj7520;
}();
thi.ng.geom.core.extrude = function extrude(_, opts) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PExtrude$extrude$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PExtrude$extrude$arity$2(_, opts);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.extrude[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.extrude["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PExtrude.extrude", _);
        }
      }
    }().call(null, _, opts);
  }
};
thi.ng.geom.core.extrude_shell = function extrude_shell(_, opts) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PExtrude$extrude_shell$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PExtrude$extrude_shell$arity$2(_, opts);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.extrude_shell[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.extrude_shell["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PExtrude.extrude-shell", _);
        }
      }
    }().call(null, _, opts);
  }
};
thi.ng.geom.core.PFlip = function() {
  var obj7522 = {};
  return obj7522;
}();
thi.ng.geom.core.flip = function flip(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PFlip$flip$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PFlip$flip$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.flip[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.flip["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFlip.flip", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PInset = function() {
  var obj7524 = {};
  return obj7524;
}();
thi.ng.geom.core.inset = function inset(_, inset__$1) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PInset$inset$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PInset$inset$arity$2(_, inset__$1);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.inset[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.inset["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PInset.inset", _);
        }
      }
    }().call(null, _, inset__$1);
  }
};
thi.ng.geom.core.PIntersect = function() {
  var obj7526 = {};
  return obj7526;
}();
thi.ng.geom.core.intersect_line = function() {
  var intersect_line = null;
  var intersect_line__2 = function(_, l) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PIntersect$intersect_line$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PIntersect$intersect_line$arity$2(_, l);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.intersect_line[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.intersect_line["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PIntersect.intersect-line", _);
          }
        }
      }().call(null, _, l);
    }
  };
  var intersect_line__3 = function(_, p, q) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PIntersect$intersect_line$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PIntersect$intersect_line$arity$3(_, p, q);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.intersect_line[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.intersect_line["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PIntersect.intersect-line", _);
          }
        }
      }().call(null, _, p, q);
    }
  };
  intersect_line = function(_, p, q) {
    switch(arguments.length) {
      case 2:
        return intersect_line__2.call(this, _, p);
      case 3:
        return intersect_line__3.call(this, _, p, q);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_line.cljs$core$IFn$_invoke$arity$2 = intersect_line__2;
  intersect_line.cljs$core$IFn$_invoke$arity$3 = intersect_line__3;
  return intersect_line;
}();
thi.ng.geom.core.intersect_ray = function() {
  var intersect_ray = null;
  var intersect_ray__2 = function(_, r) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PIntersect$intersect_ray$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PIntersect$intersect_ray$arity$2(_, r);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.intersect_ray[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.intersect_ray["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PIntersect.intersect-ray", _);
          }
        }
      }().call(null, _, r);
    }
  };
  var intersect_ray__3 = function(_, p, dir) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PIntersect$intersect_ray$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PIntersect$intersect_ray$arity$3(_, p, dir);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.intersect_ray[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.intersect_ray["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PIntersect.intersect-ray", _);
          }
        }
      }().call(null, _, p, dir);
    }
  };
  intersect_ray = function(_, p, dir) {
    switch(arguments.length) {
      case 2:
        return intersect_ray__2.call(this, _, p);
      case 3:
        return intersect_ray__3.call(this, _, p, dir);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_ray.cljs$core$IFn$_invoke$arity$2 = intersect_ray__2;
  intersect_ray.cljs$core$IFn$_invoke$arity$3 = intersect_ray__3;
  return intersect_ray;
}();
thi.ng.geom.core.intersect_shape = function intersect_shape(_, s) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PIntersect$intersect_shape$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PIntersect$intersect_shape$arity$2(_, s);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.intersect_shape[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.intersect_shape["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PIntersect.intersect-shape", _);
        }
      }
    }().call(null, _, s);
  }
};
thi.ng.geom.core.PMeshConvert = function() {
  var obj7528 = {};
  return obj7528;
}();
thi.ng.geom.core.as_mesh = function() {
  var as_mesh = null;
  var as_mesh__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_mesh[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_mesh["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMeshConvert.as-mesh", _);
          }
        }
      }().call(null, _);
    }
  };
  var as_mesh__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_mesh[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_mesh["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PMeshConvert.as-mesh", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  as_mesh = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return as_mesh__1.call(this, _);
      case 2:
        return as_mesh__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_mesh.cljs$core$IFn$_invoke$arity$1 = as_mesh__1;
  as_mesh.cljs$core$IFn$_invoke$arity$2 = as_mesh__2;
  return as_mesh;
}();
thi.ng.geom.core.PPolygonConvert = function() {
  var obj7530 = {};
  return obj7530;
}();
thi.ng.geom.core.as_polygon = function() {
  var as_polygon = null;
  var as_polygon__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PPolygonConvert$as_polygon$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PPolygonConvert$as_polygon$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_polygon[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_polygon["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PPolygonConvert.as-polygon", _);
          }
        }
      }().call(null, _);
    }
  };
  var as_polygon__2 = function(_, res) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PPolygonConvert$as_polygon$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PPolygonConvert$as_polygon$arity$2(_, res);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.as_polygon[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.as_polygon["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PPolygonConvert.as-polygon", _);
          }
        }
      }().call(null, _, res);
    }
  };
  as_polygon = function(_, res) {
    switch(arguments.length) {
      case 1:
        return as_polygon__1.call(this, _);
      case 2:
        return as_polygon__2.call(this, _, res);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  as_polygon.cljs$core$IFn$_invoke$arity$1 = as_polygon__1;
  as_polygon.cljs$core$IFn$_invoke$arity$2 = as_polygon__2;
  return as_polygon;
}();
thi.ng.geom.core.PProximity = function() {
  var obj7532 = {};
  return obj7532;
}();
thi.ng.geom.core.closest_point = function closest_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PProximity$closest_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PProximity$closest_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.closest_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.closest_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PProximity.closest-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.PSample = function() {
  var obj7534 = {};
  return obj7534;
}();
thi.ng.geom.core.point_at = function() {
  var point_at = null;
  var point_at__2 = function(_, t) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSample$point_at$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSample$point_at$arity$2(_, t);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.point_at[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.point_at["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSample.point-at", _);
          }
        }
      }().call(null, _, t);
    }
  };
  var point_at__3 = function(_, u, v) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSample$point_at$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSample$point_at$arity$3(_, u, v);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.point_at[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.point_at["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSample.point-at", _);
          }
        }
      }().call(null, _, u, v);
    }
  };
  point_at = function(_, u, v) {
    switch(arguments.length) {
      case 2:
        return point_at__2.call(this, _, u);
      case 3:
        return point_at__3.call(this, _, u, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  point_at.cljs$core$IFn$_invoke$arity$2 = point_at__2;
  point_at.cljs$core$IFn$_invoke$arity$3 = point_at__3;
  return point_at;
}();
thi.ng.geom.core.random_point = function random_point(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSample$random_point$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSample$random_point$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.random_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.random_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSample.random-point", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.random_point_inside = function random_point_inside(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSample$random_point_inside$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSample$random_point_inside$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.random_point_inside[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.random_point_inside["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSample.random-point-inside", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.sample_uniform = function sample_uniform(_, dist, include_last_QMARK_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSample$sample_uniform$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSample$sample_uniform$arity$3(_, dist, include_last_QMARK_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.sample_uniform[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.sample_uniform["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSample.sample-uniform", _);
        }
      }
    }().call(null, _, dist, include_last_QMARK_);
  }
};
thi.ng.geom.core.sample_with_resolution = function sample_with_resolution(_, res) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSample$sample_with_resolution$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSample$sample_with_resolution$arity$2(_, res);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.sample_with_resolution[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.sample_with_resolution["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSample.sample-with-resolution", _);
        }
      }
    }().call(null, _, res);
  }
};
thi.ng.geom.core.PSlice = function() {
  var obj7536 = {};
  return obj7536;
}();
thi.ng.geom.core.slice_with = function() {
  var slice_with = null;
  var slice_with__2 = function(_, e) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSlice$slice_with$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSlice$slice_with$arity$2(_, e);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.slice_with[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.slice_with["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSlice.slice-with", _);
          }
        }
      }().call(null, _, e);
    }
  };
  var slice_with__3 = function(_, e, classifier) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSlice$slice_with$arity$3;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSlice$slice_with$arity$3(_, e, classifier);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.slice_with[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.slice_with["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSlice.slice-with", _);
          }
        }
      }().call(null, _, e, classifier);
    }
  };
  var slice_with__4 = function(_, e, classifier, parts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSlice$slice_with$arity$4;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSlice$slice_with$arity$4(_, e, classifier, parts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.slice_with[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.slice_with["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSlice.slice-with", _);
          }
        }
      }().call(null, _, e, classifier, parts);
    }
  };
  slice_with = function(_, e, classifier, parts) {
    switch(arguments.length) {
      case 2:
        return slice_with__2.call(this, _, e);
      case 3:
        return slice_with__3.call(this, _, e, classifier);
      case 4:
        return slice_with__4.call(this, _, e, classifier, parts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  slice_with.cljs$core$IFn$_invoke$arity$2 = slice_with__2;
  slice_with.cljs$core$IFn$_invoke$arity$3 = slice_with__3;
  slice_with.cljs$core$IFn$_invoke$arity$4 = slice_with__4;
  return slice_with;
}();
thi.ng.geom.core.PSubdivide = function() {
  var obj7538 = {};
  return obj7538;
}();
thi.ng.geom.core.subdivide = function() {
  var subdivide = null;
  var subdivide__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSubdivide$subdivide$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSubdivide$subdivide$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.subdivide[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.subdivide["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSubdivide.subdivide", _);
          }
        }
      }().call(null, _);
    }
  };
  var subdivide__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PSubdivide$subdivide$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PSubdivide$subdivide$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.subdivide[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.subdivide["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PSubdivide.subdivide", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  subdivide = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return subdivide__1.call(this, _);
      case 2:
        return subdivide__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subdivide.cljs$core$IFn$_invoke$arity$1 = subdivide__1;
  subdivide.cljs$core$IFn$_invoke$arity$2 = subdivide__2;
  return subdivide;
}();
thi.ng.geom.core.subdivide_edge = function subdivide_edge(_, a, b, splits) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSubdivide$subdivide_edge$arity$4;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSubdivide$subdivide_edge$arity$4(_, a, b, splits);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.subdivide_edge[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.subdivide_edge["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSubdivide.subdivide-edge", _);
        }
      }
    }().call(null, _, a, b, splits);
  }
};
thi.ng.geom.core.subdivide_face = function subdivide_face(_, f, p, displace, splits) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSubdivide$subdivide_face$arity$5;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSubdivide$subdivide_face$arity$5(_, f, p, displace, splits);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.subdivide_face[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.subdivide_face["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSubdivide.subdivide-face", _);
        }
      }
    }().call(null, _, f, p, displace, splits);
  }
};
thi.ng.geom.core.PTessellate = function() {
  var obj7540 = {};
  return obj7540;
}();
thi.ng.geom.core.tessellate = function() {
  var tessellate = null;
  var tessellate__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PTessellate$tessellate$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PTessellate$tessellate$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.tessellate[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.tessellate["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PTessellate.tessellate", _);
          }
        }
      }().call(null, _);
    }
  };
  var tessellate__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$core$PTessellate$tessellate$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$core$PTessellate$tessellate$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.core.tessellate[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.core.tessellate["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PTessellate.tessellate", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  tessellate = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return tessellate__1.call(this, _);
      case 2:
        return tessellate__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tessellate.cljs$core$IFn$_invoke$arity$1 = tessellate__1;
  tessellate.cljs$core$IFn$_invoke$arity$2 = tessellate__2;
  return tessellate;
}();
thi.ng.geom.core.PVolume = function() {
  var obj7542 = {};
  return obj7542;
}();
thi.ng.geom.core.volume = function volume(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PVolume$volume$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PVolume$volume$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.volume[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.volume["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PVolume.volume", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.signed_volume = function signed_volume(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PVolume$signed_volume$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PVolume$signed_volume$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.signed_volume[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.signed_volume["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PVolume.signed-volume", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PSpatialTree = function() {
  var obj7544 = {};
  return obj7544;
}();
thi.ng.geom.core.add_point = function add_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$add_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$add_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.add_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.add_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.add-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.child_index_for_point = function child_index_for_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$child_index_for_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$child_index_for_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.child_index_for_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.child_index_for_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.child-index-for-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.child_for_point = function child_for_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$child_for_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$child_for_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.child_for_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.child_for_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.child-for-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.delete_point = function delete_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$delete_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$delete_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.delete_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.delete_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.delete-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.get_children = function get_children(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$get_children$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$get_children$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.get_children[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.get_children["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.get-children", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.get_point = function get_point(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$get_point$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$get_point$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.get_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.get_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.get-point", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.set_child = function set_child(_, i, c) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$set_child$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$set_child$arity$3(_, i, c);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.set_child[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.set_child["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.set-child", _);
        }
      }
    }().call(null, _, i, c);
  }
};
thi.ng.geom.core.set_children = function set_children(_, c) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$set_children$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$set_children$arity$2(_, c);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.set_children[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.set_children["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.set-children", _);
        }
      }
    }().call(null, _, c);
  }
};
thi.ng.geom.core.set_point = function set_point(_, p) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$set_point$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$set_point$arity$2(_, p);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.set_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.set_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.set-point", _);
        }
      }
    }().call(null, _, p);
  }
};
thi.ng.geom.core.make_child_for_point = function make_child_for_point(_, p, add_point_QMARK_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$make_child_for_point$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$make_child_for_point$arity$3(_, p, add_point_QMARK_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.make_child_for_point[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.make_child_for_point["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.make-child-for-point", _);
        }
      }
    }().call(null, _, p, add_point_QMARK_);
  }
};
thi.ng.geom.core.split_node = function split_node(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PSpatialTree$split_node$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PSpatialTree$split_node$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.split_node[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.split_node["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PSpatialTree.split-node", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.core.PGeomContainer = function() {
  var obj7546 = {};
  return obj7546;
}();
thi.ng.geom.core.into = function into(_, m) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$core$PGeomContainer$into$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$core$PGeomContainer$into$arity$2(_, m);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.core.into[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.core.into["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PGeomContainer.into", _);
        }
      }
    }().call(null, _, m);
  }
};
goog.provide("thi.ng.common.data.core");
goog.require("cljs.core");
thi.ng.common.data.core.index = function index(i, t) {
  var temp__4124__auto__ = cljs.core.get.call(null, i, t);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var tt = temp__4124__auto__;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tt], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, i, t), t], null);
  }
};
thi.ng.common.data.core.index_BANG_ = function index_BANG_(i, t) {
  var temp__4124__auto__ = cljs.core.get.call(null, i, t);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var tt = temp__4124__auto__;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, tt], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, i, t), t], null);
  }
};
thi.ng.common.data.core.index_kv = function index_kv(m, k, v) {
  var temp__4124__auto__ = cljs.core.find.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__7390 = temp__4124__auto__;
    var k__$1 = cljs.core.nth.call(null, vec__7390, 0, null);
    var vv = cljs.core.nth.call(null, vec__7390, 1, null);
    return cljs.core.assoc.call(null, m, k__$1, cljs.core.conj.call(null, vv, v));
  } else {
    return cljs.core.assoc.call(null, m, k, cljs.core.PersistentHashSet.fromArray([v], true));
  }
};
thi.ng.common.data.core.index_kv_BANG_ = function index_kv_BANG_(m, k, v) {
  var temp__4124__auto__ = cljs.core.get.call(null, m, k);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vv = temp__4124__auto__;
    return cljs.core.assoc_BANG_.call(null, m, k, cljs.core.conj.call(null, vv, v));
  } else {
    return cljs.core.assoc_BANG_.call(null, m, k, cljs.core.PersistentHashSet.fromArray([v], true));
  }
};
thi.ng.common.data.core.value_set = function() {
  var value_set = null;
  var value_set__2 = function(idx, v) {
    return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.get.call(null, idx, v));
  };
  var value_set__3 = function(f, idx, v) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(p1__7391_SHARP_, p2__7392_SHARP_) {
      return cljs.core.conj_BANG_.call(null, p1__7391_SHARP_, f.call(null, p2__7392_SHARP_));
    }, cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY), cljs.core.get.call(null, idx, v)));
  };
  value_set = function(f, idx, v) {
    switch(arguments.length) {
      case 2:
        return value_set__2.call(this, f, idx);
      case 3:
        return value_set__3.call(this, f, idx, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  value_set.cljs$core$IFn$_invoke$arity$2 = value_set__2;
  value_set.cljs$core$IFn$_invoke$arity$3 = value_set__3;
  return value_set;
}();
thi.ng.common.data.core.set_conj = cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY);
thi.ng.common.data.core.vec_conj = cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentVector.EMPTY);
thi.ng.common.data.core.set_conj2_STAR_ = function set_conj2_STAR_(p1__7393_SHARP_, p2__7394_SHARP_) {
  if (p1__7393_SHARP_ == null) {
    return p2__7394_SHARP_;
  } else {
    if (cljs.core.set_QMARK_.call(null, p1__7393_SHARP_)) {
      return cljs.core.conj.call(null, p1__7393_SHARP_, p2__7394_SHARP_);
    } else {
      return cljs.core.PersistentHashSet.fromArray([p1__7393_SHARP_, p2__7394_SHARP_], true);
    }
  }
};
thi.ng.common.data.core.vec_conj2_STAR_ = function vec_conj2_STAR_(p1__7395_SHARP_, p2__7396_SHARP_) {
  if (p1__7395_SHARP_ == null) {
    return p2__7396_SHARP_;
  } else {
    if (cljs.core.vector_QMARK_.call(null, p1__7395_SHARP_)) {
      return cljs.core.conj.call(null, p1__7395_SHARP_, p2__7396_SHARP_);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__7395_SHARP_, p2__7396_SHARP_], null);
    }
  }
};
thi.ng.common.data.core.collect_set = function collect_set(f, coll) {
  return cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.map.call(null, f, coll));
};
thi.ng.common.data.core.collect_indexed = function collect_indexed(f, f2, coll) {
  var keys = thi.ng.common.data.core.collect_set.call(null, f, coll);
  return cljs.core.zipmap.call(null, keys, cljs.core._EQ_.call(null, f2, cljs.core.identity) ? keys : cljs.core.map.call(null, f2, keys));
};
thi.ng.common.data.core.interval_set = function() {
  var interval_set__delegate = function(ivals) {
    return cljs.core.into.call(null, cljs.core.sorted_set.call(null), cljs.core.mapcat.call(null, function(v) {
      if (cljs.core.sequential_QMARK_.call(null, v)) {
        return cljs.core.range.call(null, v.call(null, 0), v.call(null, 1) + 1);
      } else {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null);
      }
    }, ivals));
  };
  var interval_set = function(var_args) {
    var ivals = null;
    if (arguments.length > 0) {
      ivals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return interval_set__delegate.call(this, ivals);
  };
  interval_set.cljs$lang$maxFixedArity = 0;
  interval_set.cljs$lang$applyTo = function(arglist__7397) {
    var ivals = cljs.core.seq(arglist__7397);
    return interval_set__delegate(ivals);
  };
  interval_set.cljs$core$IFn$_invoke$arity$variadic = interval_set__delegate;
  return interval_set;
}();
thi.ng.common.data.core.check_intervals = function() {
  var check_intervals__delegate = function(ivals) {
    var vec__7403 = cljs.core.reduce.call(null, function(p__7404, v) {
      var vec__7405 = p__7404;
      var i = cljs.core.nth.call(null, vec__7405, 0, null);
      var c = cljs.core.nth.call(null, vec__7405, 1, null);
      if (cljs.core.sequential_QMARK_.call(null, v)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.call(null, i, v), c], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.conj.call(null, c, v)], null);
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY, cljs.core.PersistentHashSet.EMPTY], null), ivals);
    var ivals__$1 = cljs.core.nth.call(null, vec__7403, 0, null);
    var const$ = cljs.core.nth.call(null, vec__7403, 1, null);
    return function(vec__7403, ivals__$1, const$) {
      return function(x) {
        if (cljs.core.truth_(const$.call(null, x))) {
          return x;
        } else {
          return cljs.core.some.call(null, function(vec__7403, ivals__$1, const$) {
            return function(p__7406) {
              var vec__7407 = p__7406;
              var a = cljs.core.nth.call(null, vec__7407, 0, null);
              var b = cljs.core.nth.call(null, vec__7407, 1, null);
              return a <= x && x <= b;
            };
          }(vec__7403, ivals__$1, const$), ivals__$1);
        }
      };
    }(vec__7403, ivals__$1, const$);
  };
  var check_intervals = function(var_args) {
    var ivals = null;
    if (arguments.length > 0) {
      ivals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return check_intervals__delegate.call(this, ivals);
  };
  check_intervals.cljs$lang$maxFixedArity = 0;
  check_intervals.cljs$lang$applyTo = function(arglist__7408) {
    var ivals = cljs.core.seq(arglist__7408);
    return check_intervals__delegate(ivals);
  };
  check_intervals.cljs$core$IFn$_invoke$arity$variadic = check_intervals__delegate;
  return check_intervals;
}();
thi.ng.common.data.core.cartesian_product = function() {
  var cartesian_product__delegate = function(seqs) {
    var v_original_seqs = cljs.core.vec.call(null, seqs);
    var step = function(v_original_seqs) {
      return function step(v_seqs) {
        var increment = function(v_original_seqs) {
          return function(v_seqs__$1) {
            var i = cljs.core.count.call(null, v_seqs__$1) - 1;
            var v_seqs__$2 = v_seqs__$1;
            while (true) {
              if (i < 0) {
                return null;
              } else {
                var temp__4124__auto__ = cljs.core.next.call(null, v_seqs__$2.call(null, i));
                if (temp__4124__auto__) {
                  var rst = temp__4124__auto__;
                  return cljs.core.assoc.call(null, v_seqs__$2, i, rst);
                } else {
                  var G__7409 = i - 1;
                  var G__7410 = cljs.core.assoc.call(null, v_seqs__$2, i, v_original_seqs.call(null, i));
                  i = G__7409;
                  v_seqs__$2 = G__7410;
                  continue;
                }
              }
              break;
            }
          };
        }(v_original_seqs);
        if (cljs.core.truth_(v_seqs)) {
          return cljs.core.cons.call(null, cljs.core.map.call(null, cljs.core.first, v_seqs), new cljs.core.LazySeq(null, function(increment, v_original_seqs) {
            return function() {
              return step.call(null, increment.call(null, v_seqs));
            };
          }(increment, v_original_seqs), null, null));
        } else {
          return null;
        }
      };
    }(v_original_seqs);
    if (cljs.core.every_QMARK_.call(null, cljs.core.first, seqs)) {
      return new cljs.core.LazySeq(null, function(v_original_seqs, step) {
        return function() {
          return step.call(null, v_original_seqs);
        };
      }(v_original_seqs, step), null, null);
    } else {
      return null;
    }
  };
  var cartesian_product = function(var_args) {
    var seqs = null;
    if (arguments.length > 0) {
      seqs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cartesian_product__delegate.call(this, seqs);
  };
  cartesian_product.cljs$lang$maxFixedArity = 0;
  cartesian_product.cljs$lang$applyTo = function(arglist__7411) {
    var seqs = cljs.core.seq(arglist__7411);
    return cartesian_product__delegate(seqs);
  };
  cartesian_product.cljs$core$IFn$_invoke$arity$variadic = cartesian_product__delegate;
  return cartesian_product;
}();
thi.ng.common.data.core.filter_tree = function filter_tree(f, root) {
  var walk = function walk(acc, node) {
    if (cljs.core.truth_(f.call(null, node))) {
      return cljs.core.conj.call(null, acc, node);
    } else {
      if (cljs.core.coll_QMARK_.call(null, node)) {
        return cljs.core.reduce.call(null, walk, acc, node);
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return acc;
        } else {
          return null;
        }
      }
    }
  };
  return cljs.core.reduce.call(null, walk, cljs.core.PersistentVector.EMPTY, root);
};
thi.ng.common.data.core.bisect = function() {
  var bisect = null;
  var bisect__2 = function(f, coll) {
    var vec__7416 = cljs.core.reduce.call(null, function(p__7417, v) {
      var vec__7418 = p__7417;
      var m = cljs.core.nth.call(null, vec__7418, 0, null);
      var n = cljs.core.nth.call(null, vec__7418, 1, null);
      if (cljs.core.truth_(f.call(null, v))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj_BANG_.call(null, m, v), n], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, cljs.core.conj_BANG_.call(null, n, v)], null);
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY)], null), coll);
    var m = cljs.core.nth.call(null, vec__7416, 0, null);
    var n = cljs.core.nth.call(null, vec__7416, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.persistent_BANG_.call(null, m), cljs.core.persistent_BANG_.call(null, n)], null);
  };
  var bisect__3 = function(f, f2, coll) {
    var vec__7419 = bisect.call(null, f, coll);
    var m = cljs.core.nth.call(null, vec__7419, 0, null);
    var n = cljs.core.nth.call(null, vec__7419, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f2.call(null, m), f2.call(null, n)], null);
  };
  bisect = function(f, f2, coll) {
    switch(arguments.length) {
      case 2:
        return bisect__2.call(this, f, f2);
      case 3:
        return bisect__3.call(this, f, f2, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bisect.cljs$core$IFn$_invoke$arity$2 = bisect__2;
  bisect.cljs$core$IFn$_invoke$arity$3 = bisect__3;
  return bisect;
}();
thi.ng.common.data.core.neighbors = function neighbors(x, coll) {
  var n = cljs.core.count.call(null, coll) - 1;
  var i = n;
  while (true) {
    if (i >= 0) {
      if (cljs.core._EQ_.call(null, x, coll.call(null, i))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [coll.call(null, i > 0 ? i - 1 : n), coll.call(null, i < n ? i + 1 : 0)], null);
      } else {
        var G__7420 = i - 1;
        i = G__7420;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
thi.ng.common.data.core.successive_nth = function() {
  var successive_nth = null;
  var successive_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.take.call(null, n, coll);
      if (cljs.core._EQ_.call(null, n, cljs.core.count.call(null, s))) {
        return cljs.core.cons.call(null, cljs.core.vec.call(null, s), successive_nth.call(null, n, cljs.core.rest.call(null, coll)));
      } else {
        return null;
      }
    }, null, null);
  };
  var successive_nth__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.take.call(null, n, coll);
      if (cljs.core._EQ_.call(null, n, cljs.core.count.call(null, s))) {
        return cljs.core.cons.call(null, cljs.core.vec.call(null, s), successive_nth.call(null, n, step, cljs.core.drop.call(null, step, coll)));
      } else {
        return null;
      }
    }, null, null);
  };
  successive_nth = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return successive_nth__2.call(this, n, step);
      case 3:
        return successive_nth__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  successive_nth.cljs$core$IFn$_invoke$arity$2 = successive_nth__2;
  successive_nth.cljs$core$IFn$_invoke$arity$3 = successive_nth__3;
  return successive_nth;
}();
thi.ng.common.data.core.successive_nth_indexed = function() {
  var successive_nth_indexed = null;
  var successive_nth_indexed__2 = function(n, coll) {
    return successive_nth_indexed.call(null, n, 0, coll);
  };
  var successive_nth_indexed__3 = function(n, idx, coll) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.take.call(null, n, coll);
      if (cljs.core._EQ_.call(null, n, cljs.core.count.call(null, s))) {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vec.call(null, s), idx], null), successive_nth_indexed.call(null, n, idx + 1, cljs.core.rest.call(null, coll)));
      } else {
        return null;
      }
    }, null, null);
  };
  successive_nth_indexed = function(n, idx, coll) {
    switch(arguments.length) {
      case 2:
        return successive_nth_indexed__2.call(this, n, idx);
      case 3:
        return successive_nth_indexed__3.call(this, n, idx, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  successive_nth_indexed.cljs$core$IFn$_invoke$arity$2 = successive_nth_indexed__2;
  successive_nth_indexed.cljs$core$IFn$_invoke$arity$3 = successive_nth_indexed__3;
  return successive_nth_indexed;
}();
thi.ng.common.data.core.apply_to_keys = function() {
  var apply_to_keys__delegate = function(type, keys, f, args) {
    return cljs.core.reduce.call(null, function(acc, k) {
      return cljs.core.assoc.call(null, acc, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, type, k), args));
    }, type, keys);
  };
  var apply_to_keys = function(type, keys, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return apply_to_keys__delegate.call(this, type, keys, f, args);
  };
  apply_to_keys.cljs$lang$maxFixedArity = 3;
  apply_to_keys.cljs$lang$applyTo = function(arglist__7421) {
    var type = cljs.core.first(arglist__7421);
    arglist__7421 = cljs.core.next(arglist__7421);
    var keys = cljs.core.first(arglist__7421);
    arglist__7421 = cljs.core.next(arglist__7421);
    var f = cljs.core.first(arglist__7421);
    var args = cljs.core.rest(arglist__7421);
    return apply_to_keys__delegate(type, keys, f, args);
  };
  apply_to_keys.cljs$core$IFn$_invoke$arity$variadic = apply_to_keys__delegate;
  return apply_to_keys;
}();
thi.ng.common.data.core.reduce_pairs = function() {
  var reduce_pairs = null;
  var reduce_pairs__3 = function(f1, f2, coll) {
    return reduce_pairs.call(null, f1, f2, null, coll);
  };
  var reduce_pairs__4 = function(f1, f2, acc, coll) {
    if (cljs.core.count.call(null, coll) > 1) {
      var pairs = cljs.core.map.call(null, function(p__7424) {
        var vec__7425 = p__7424;
        var a = cljs.core.nth.call(null, vec__7425, 0, null);
        var b = cljs.core.nth.call(null, vec__7425, 1, null);
        return f2.call(null, a, b);
      }, thi.ng.common.data.core.successive_nth.call(null, 2, coll));
      if (cljs.core.truth_(acc)) {
        return cljs.core.reduce.call(null, f1, acc, pairs);
      } else {
        return cljs.core.reduce.call(null, f1, pairs);
      }
    } else {
      return null;
    }
  };
  reduce_pairs = function(f1, f2, acc, coll) {
    switch(arguments.length) {
      case 3:
        return reduce_pairs__3.call(this, f1, f2, acc);
      case 4:
        return reduce_pairs__4.call(this, f1, f2, acc, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce_pairs.cljs$core$IFn$_invoke$arity$3 = reduce_pairs__3;
  reduce_pairs.cljs$core$IFn$_invoke$arity$4 = reduce_pairs__4;
  return reduce_pairs;
}();
thi.ng.common.data.core.wrap_seq = function wrap_seq(s, head, tail) {
  return cljs.core.concat.call(null, cljs.core.sequential_QMARK_.call(null, head) ? cljs.core.concat.call(null, head, s) : cljs.core.cons.call(null, head, s), cljs.core.sequential_QMARK_.call(null, tail) ? tail : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tail], null));
};
thi.ng.common.data.core.append_first = function append_first(xs) {
  return cljs.core.concat.call(null, xs, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, xs)], null));
};
thi.ng.common.data.core.rotate_left = function rotate_left(n, xs) {
  return cljs.core.concat.call(null, cljs.core.drop.call(null, n, xs), cljs.core.take.call(null, n, xs));
};
thi.ng.common.data.core.all_after = function all_after(item, coll) {
  var idx = coll.indexOf(item) + 1;
  if (idx > 0) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      return cljs.core.subvec.call(null, coll, idx);
    } else {
      return cljs.core.drop.call(null, idx, coll);
    }
  } else {
    return coll;
  }
};
thi.ng.common.data.core.iterate_while = function iterate_while(pred, f, x) {
  return new cljs.core.LazySeq(null, function() {
    if (cljs.core.truth_(pred.call(null, x))) {
      return cljs.core.cons.call(null, x, iterate_while.call(null, pred, f, f.call(null, x)));
    } else {
      return null;
    }
  }, null, null);
};
thi.ng.common.data.core.unwrap_string = function unwrap_string(s, n) {
  return cljs.core.subs.call(null, s, n, cljs.core.count.call(null, s) - n);
};
thi.ng.common.data.core.wrap = function wrap(a, b, s) {
  return[cljs.core.str(a), cljs.core.str(s), cljs.core.str(b)].join("");
};
thi.ng.common.data.core.stringify_keys = function stringify_keys(m) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__7428) {
    var vec__7429 = p__7428;
    var k = cljs.core.nth.call(null, vec__7429, 0, null);
    var v = cljs.core.nth.call(null, vec__7429, 1, null);
    var e = vec__7429;
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return e;
    }
  }, m));
};
thi.ng.common.data.core.demunge_flags = function demunge_flags(kw, xs) {
  if (cljs.core.truth_(kw)) {
    var flags = cljs.core.name.call(null, kw);
    return cljs.core.reduce.call(null, function(flags) {
      return function(acc, x) {
        var x__$1 = [cljs.core.str(x)].join("");
        return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, x__$1), 0 <= flags.indexOf(x__$1));
      };
    }(flags), cljs.core.PersistentArrayMap.EMPTY, xs);
  } else {
    return null;
  }
};
thi.ng.common.data.core.demunge_flags_seq = function demunge_flags_seq(kw, xs) {
  if (cljs.core.truth_(kw)) {
    var flags = cljs.core.name.call(null, kw);
    return cljs.core.map.call(null, function(flags) {
      return function(p1__7430_SHARP_) {
        return 0 <= flags.indexOf([cljs.core.str(p1__7430_SHARP_)].join(""));
      };
    }(flags), xs);
  } else {
    return null;
  }
};
goog.provide("thi.ng.common.math.core");
goog.require("cljs.core");
thi.ng.common.math.core.PI = Math.PI;
thi.ng.common.math.core.TWO_PI = thi.ng.common.math.core.PI * 2;
thi.ng.common.math.core.HALF_PI = thi.ng.common.math.core.PI / 2;
thi.ng.common.math.core.THIRD_PI = thi.ng.common.math.core.PI / 3;
thi.ng.common.math.core.QUARTER_PI = thi.ng.common.math.core.PI / 4;
thi.ng.common.math.core.SIXTH_PI = thi.ng.common.math.core.PI / 6;
thi.ng.common.math.core.THREE_HALVES_PI = thi.ng.common.math.core.PI * 1.5;
thi.ng.common.math.core.MAX = 1.7976931348623157E308;
thi.ng.common.math.core.MIN = 4.9E-324;
thi.ng.common.math.core.SQRT2 = Math.sqrt.call(null, 2);
thi.ng.common.math.core.SQRT3 = Math.sqrt.call(null, 3);
thi.ng.common.math.core.PHI = (Math.sqrt.call(null, 5) + 1) / 2;
thi.ng.common.math.core.THIRD = 1 / 3;
thi.ng.common.math.core.LOG2 = Math.log.call(null, 2);
thi.ng.common.math.core.INF_ = Number.POSITIVE_INFINITY;
thi.ng.common.math.core.INF_PLUS_ = Number.NEGATIVE_INFINITY;
thi.ng.common.math.core.DEG = 180 / thi.ng.common.math.core.PI;
thi.ng.common.math.core.RAD = thi.ng.common.math.core.PI / 180;
thi.ng.common.math.core._STAR_eps_STAR_ = 1E-6;
thi.ng.common.math.core._STAR_rnd_STAR_ = Math.random;
thi.ng.common.math.core.ensure_even = function ensure_even(x) {
  if (cljs.core.even_QMARK_.call(null, x)) {
    return x;
  } else {
    return x + 1;
  }
};
thi.ng.common.math.core.ensure_odd = function ensure_odd(x) {
  if (cljs.core.even_QMARK_.call(null, x)) {
    return x + 1;
  } else {
    return x;
  }
};
thi.ng.common.math.core.abs = Math.abs;
thi.ng.common.math.core.abs_diff = function abs_diff(x, y) {
  return thi.ng.common.math.core.abs.call(null, x - y);
};
thi.ng.common.math.core.delta_EQ_ = function() {
  var delta_EQ_ = null;
  var delta_EQ___2 = function(a, b) {
    return delta_EQ_.call(null, a, b, thi.ng.common.math.core._STAR_eps_STAR_);
  };
  var delta_EQ___3 = function(a, b, delta) {
    if (cljs.core.truth_(function() {
      var and__3469__auto__ = a;
      if (cljs.core.truth_(and__3469__auto__)) {
        return b;
      } else {
        return and__3469__auto__;
      }
    }())) {
      if (typeof a === "number") {
        if (typeof b === "number") {
          return thi.ng.common.math.core.abs.call(null, b - a) <= delta;
        } else {
          return false;
        }
      } else {
        return cljs.core._EQ_.call(null, cljs.core.count.call(null, a), cljs.core.count.call(null, b)) && cljs.core.every_QMARK_.call(null, cljs.core.true_QMARK_, cljs.core.map.call(null, function(p1__8307_SHARP_, p2__8308_SHARP_) {
          return thi.ng.common.math.core.abs.call(null, p1__8307_SHARP_ - p2__8308_SHARP_) <= delta;
        }, a, b));
      }
    } else {
      return cljs.core._EQ_.call(null, a, b);
    }
  };
  delta_EQ_ = function(a, b, delta) {
    switch(arguments.length) {
      case 2:
        return delta_EQ___2.call(this, a, b);
      case 3:
        return delta_EQ___3.call(this, a, b, delta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  delta_EQ_.cljs$core$IFn$_invoke$arity$2 = delta_EQ___2;
  delta_EQ_.cljs$core$IFn$_invoke$arity$3 = delta_EQ___3;
  return delta_EQ_;
}();
thi.ng.common.math.core.signum = function() {
  var signum = null;
  var signum__1 = function(x) {
    if (x < 0) {
      return-1;
    } else {
      if (x === 0) {
        return 0;
      } else {
        return 1;
      }
    }
  };
  var signum__2 = function(x, delta) {
    if (thi.ng.common.math.core.delta_EQ_.call(null, 0, x, delta)) {
      return 0;
    } else {
      if (x < 0) {
        return-1;
      } else {
        return 1;
      }
    }
  };
  signum = function(x, delta) {
    switch(arguments.length) {
      case 1:
        return signum__1.call(this, x);
      case 2:
        return signum__2.call(this, x, delta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  signum.cljs$core$IFn$_invoke$arity$1 = signum__1;
  signum.cljs$core$IFn$_invoke$arity$2 = signum__2;
  return signum;
}();
thi.ng.common.math.core.map_interval = function() {
  var map_interval = null;
  var map_interval__3 = function(x, p__8309, p__8310) {
    var vec__8313 = p__8309;
    var minIn = cljs.core.nth.call(null, vec__8313, 0, null);
    var maxIn = cljs.core.nth.call(null, vec__8313, 1, null);
    var vec__8314 = p__8310;
    var minOut = cljs.core.nth.call(null, vec__8314, 0, null);
    var maxOut = cljs.core.nth.call(null, vec__8314, 1, null);
    return(maxOut - minOut) * ((x - minIn) / (maxIn - minIn)) + minOut;
  };
  var map_interval__5 = function(x, minIn, maxIn, minOut, maxOut) {
    return(maxOut - minOut) * ((x - minIn) / (maxIn - minIn)) + minOut;
  };
  map_interval = function(x, minIn, maxIn, minOut, maxOut) {
    switch(arguments.length) {
      case 3:
        return map_interval__3.call(this, x, minIn, maxIn);
      case 5:
        return map_interval__5.call(this, x, minIn, maxIn, minOut, maxOut);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_interval.cljs$core$IFn$_invoke$arity$3 = map_interval__3;
  map_interval.cljs$core$IFn$_invoke$arity$5 = map_interval__5;
  return map_interval;
}();
thi.ng.common.math.core.in_range_QMARK_ = function() {
  var in_range_QMARK_ = null;
  var in_range_QMARK___2 = function(p__8315, x) {
    var vec__8317 = p__8315;
    var min = cljs.core.nth.call(null, vec__8317, 0, null);
    var max = cljs.core.nth.call(null, vec__8317, 1, null);
    return x >= min && x <= max;
  };
  var in_range_QMARK___3 = function(min, max, x) {
    return x >= min && x <= max;
  };
  in_range_QMARK_ = function(min, max, x) {
    switch(arguments.length) {
      case 2:
        return in_range_QMARK___2.call(this, min, max);
      case 3:
        return in_range_QMARK___3.call(this, min, max, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  in_range_QMARK_.cljs$core$IFn$_invoke$arity$2 = in_range_QMARK___2;
  in_range_QMARK_.cljs$core$IFn$_invoke$arity$3 = in_range_QMARK___3;
  return in_range_QMARK_;
}();
thi.ng.common.math.core.wrap_range = function wrap_range(x, y) {
  var x__$1 = cljs.core.rem.call(null, x, y);
  if (x__$1 < 0) {
    return x__$1 + y;
  } else {
    return x__$1;
  }
};
thi.ng.common.math.core.clamp = function clamp(x, min, max) {
  if (x < min) {
    return min;
  } else {
    if (x > max) {
      return max;
    } else {
      return x;
    }
  }
};
thi.ng.common.math.core.clamp_normalized = function clamp_normalized(x) {
  if (x < -1) {
    return-1;
  } else {
    if (x > 1) {
      return 1;
    } else {
      return x;
    }
  }
};
thi.ng.common.math.core.norm_range = function norm_range(x) {
  return cljs.core.map.call(null, function(p1__8318_SHARP_) {
    return p1__8318_SHARP_ / x;
  }, cljs.core.range.call(null, x + 1));
};
thi.ng.common.math.core.mix = function mix(a, b, t) {
  return(b - a) * t + a;
};
thi.ng.common.math.core.step = function step(edge, x) {
  if (x < edge) {
    return 0;
  } else {
    return 1;
  }
};
thi.ng.common.math.core.smoothstep = function smoothstep(e0, e1, x) {
  var t = thi.ng.common.math.core.clamp.call(null, (x - e0) / (e1 - e0), 0, 1);
  return t * (t * (t * -2 + 3));
};
thi.ng.common.math.core.floor = function floor(x) {
  return Math.floor.call(null, x);
};
thi.ng.common.math.core.ceil = function ceil(x) {
  return Math.ceil.call(null, x);
};
thi.ng.common.math.core.roundto = function roundto(x, prec) {
  return thi.ng.common.math.core.floor.call(null, x / prec + 0.5) * prec;
};
thi.ng.common.math.core.ceil_pow2 = function ceil_pow2(x) {
  var pow2 = 1;
  while (true) {
    if (pow2 >= x) {
      return pow2;
    } else {
      var G__8319 = pow2 * 2;
      pow2 = G__8319;
      continue;
    }
    break;
  }
};
thi.ng.common.math.core.floor_pow2 = function floor_pow2(x) {
  return Math.pow.call(null, 2, Math.log.call(null, x) / thi.ng.common.math.core.LOG2 | 0);
};
thi.ng.common.math.core.trunc = function trunc(x) {
  if (x < 0) {
    return thi.ng.common.math.core.ceil.call(null, x);
  } else {
    return thi.ng.common.math.core.floor.call(null, x);
  }
};
thi.ng.common.math.core.fract = function fract(x) {
  return x - Math.floor.call(null, x);
};
thi.ng.common.math.core.fdim = function fdim(x, y) {
  if (x > y) {
    return x - y;
  } else {
    return 0;
  }
};
thi.ng.common.math.core.radians = function radians(x) {
  return x * thi.ng.common.math.core.RAD;
};
thi.ng.common.math.core.degrees = function degrees(x) {
  return x * thi.ng.common.math.core.DEG;
};
thi.ng.common.math.core.maxmag = function maxmag(x, y) {
  var ax = Math.abs.call(null, x);
  var ay = Math.abs.call(null, y);
  if (ax > ay) {
    return x;
  } else {
    if (ay > ax) {
      return y;
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return x;
      } else {
        return null;
      }
    }
  }
};
thi.ng.common.math.core.minmag = function minmag(x, y) {
  var ax = Math.abs.call(null, x);
  var ay = Math.abs.call(null, y);
  if (ax < ay) {
    return x;
  } else {
    if (ay < ax) {
      return y;
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return x;
      } else {
        return null;
      }
    }
  }
};
thi.ng.common.math.core.ldexp = function ldexp(x, k) {
  return x * Math.pow.call(null, 2, k | 0);
};
thi.ng.common.math.core.remquo = function remquo(x, y) {
  var k = x / y;
  var f = thi.ng.common.math.core.fract.call(null, k);
  var k__$1 = cljs.core._EQ_.call(null, f, 0.5) ? cljs.core.even_QMARK_.call(null, k | 0) ? k | 0 : thi.ng.common.math.core.ceil.call(null, k) : f < 0.5 ? thi.ng.common.math.core.floor.call(null, k) : new cljs.core.Keyword(null, "default", "default", 2558708147) ? thi.ng.common.math.core.ceil.call(null, k) : null;
  return x - k__$1 * y;
};
thi.ng.common.math.core.hypot = function hypot(x, y) {
  return Math.sqrt.call(null, x * x + y * y);
};
thi.ng.common.math.core.rootn = function rootn(x, y) {
  return Math.pow.call(null, x, 1 / y);
};
thi.ng.common.math.core.rsqrt = function rsqrt(x) {
  return 1 / Math.sqrt.call(null, x);
};
thi.ng.common.math.core.impulse = function impulse(k, t) {
  var h = k * t;
  return h * Math.exp.call(null, 1 - h);
};
thi.ng.common.math.core.random = function() {
  var random = null;
  var random__0 = function() {
    return thi.ng.common.math.core._STAR_rnd_STAR_.call(null);
  };
  var random__1 = function(max) {
    return thi.ng.common.math.core._STAR_rnd_STAR_.call(null) * max;
  };
  var random__2 = function(min, max) {
    return(max - min) * thi.ng.common.math.core._STAR_rnd_STAR_.call(null) + min;
  };
  random = function(min, max) {
    switch(arguments.length) {
      case 0:
        return random__0.call(this);
      case 1:
        return random__1.call(this, min);
      case 2:
        return random__2.call(this, min, max);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random.cljs$core$IFn$_invoke$arity$0 = random__0;
  random.cljs$core$IFn$_invoke$arity$1 = random__1;
  random.cljs$core$IFn$_invoke$arity$2 = random__2;
  return random;
}();
thi.ng.common.math.core.randnorm = function randnorm() {
  return thi.ng.common.math.core._STAR_rnd_STAR_.call(null) * 2 - 1;
};
thi.ng.common.math.core.percentile_index = function percentile_index(n, num) {
  return(n < 100 ? Math.round.call(null, n / 100 * num + 0.5) | 0 : num) - 1;
};
thi.ng.common.math.core.percentile = function percentile(n, sorted) {
  return cljs.core.nth.call(null, sorted, thi.ng.common.math.core.percentile_index.call(null, n, cljs.core.count.call(null, sorted)));
};
thi.ng.common.math.core.quartile_index = function quartile_index(n, num) {
  return thi.ng.common.math.core.percentile_index.call(null, n * 25, num);
};
thi.ng.common.math.core.quartile_range = function quartile_range(n, num) {
  var a = thi.ng.common.math.core.quartile_index.call(null, n - 1, num);
  var b = thi.ng.common.math.core.quartile_index.call(null, n, num);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core._EQ_.call(null, n, 4) ? b + 1 : b], null);
};
thi.ng.common.math.core.quartile = function quartile(n, sorted) {
  var vec__8321 = thi.ng.common.math.core.quartile_range.call(null, n, cljs.core.count.call(null, sorted));
  var a = cljs.core.nth.call(null, vec__8321, 0, null);
  var b = cljs.core.nth.call(null, vec__8321, 1, null);
  return cljs.core.take.call(null, b - a, cljs.core.drop.call(null, a, sorted));
};
thi.ng.common.math.core.normdist_weights = function() {
  var normdist_weights = null;
  var normdist_weights__1 = function(n) {
    return normdist_weights.call(null, n, 1);
  };
  var normdist_weights__2 = function(n, scale) {
    var ws = cljs.core.repeatedly.call(null, n, thi.ng.common.math.core.random);
    var s = scale / cljs.core.reduce.call(null, cljs.core._PLUS_, ws);
    return cljs.core.map.call(null, function(ws, s) {
      return function(p1__8322_SHARP_) {
        return s * p1__8322_SHARP_;
      };
    }(ws, s), ws);
  };
  normdist_weights = function(n, scale) {
    switch(arguments.length) {
      case 1:
        return normdist_weights__1.call(this, n);
      case 2:
        return normdist_weights__2.call(this, n, scale);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  normdist_weights.cljs$core$IFn$_invoke$arity$1 = normdist_weights__1;
  normdist_weights.cljs$core$IFn$_invoke$arity$2 = normdist_weights__2;
  return normdist_weights;
}();
goog.provide("thi.ng.geom.core.vector");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core");
thi.ng.geom.core.vector.Vec2 = function(x, y) {
  this.x = x;
  this.y = y;
  this.cljs$lang$protocol_mask$partition0$ = 166224859;
  this.cljs$lang$protocol_mask$partition1$ = 10240;
};
thi.ng.geom.core.vector.Vec2.cljs$lang$type = true;
thi.ng.geom.core.vector.Vec2.cljs$lang$ctorStr = "thi.ng.geom.core.vector/Vec2";
thi.ng.geom.core.vector.Vec2.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.core.vector/Vec2");
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.transform_vector.call(null, m, ___$1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.vector.Vec2(self__.x * c - self__.y * s, self__.x * s + self__.y * c);
};
thi.ng.geom.core.vector.Vec2.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("["), cljs.core.str(self__.x), cljs.core.str(" "), cljs.core.str(self__.y), cljs.core.str("]")].join("");
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle2.call(null, ___$1, k, null);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle2.call(null, ___$1, k, nf);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PDotProduct$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PDotProduct$dot$arity$2 = function(_, p__7548) {
  var self__ = this;
  var vec__7549 = p__7548;
  var ax = cljs.core.nth.call(null, vec__7549, 0, null);
  var ay = cljs.core.nth.call(null, vec__7549, 1, null);
  var ___$1 = this;
  return self__.x * ax + self__.y * ay;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormalize$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormalize$normalize$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var l = Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y);
  if (l > 0) {
    return new thi.ng.geom.core.vector.Vec2(self__.x / l, self__.y / l);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormalize$normalize$arity$2 = function(_, len) {
  var self__ = this;
  var ___$1 = this;
  var l = Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y);
  if (l > 0) {
    var l__$1 = len / l;
    return new thi.ng.geom.core.vector.Vec2(self__.x * l__$1, self__.y * l__$1);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormalize$normalized_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.common.math.core.delta_EQ_.call(null, 1, thi.ng.geom.core.mag_squared.call(null, ___$1));
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.rotate_x.call(null, thi.ng.geom.core.vector.vec3.call(null, ___$1), theta);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.rotate_y.call(null, thi.ng.geom.core.vector.vec3.call(null, ___$1), theta);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3.call(null, thi.ng.geom.core.rotate.call(null, ___$1, theta));
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, axis, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.rotate_around_axis.call(null, thi.ng.geom.core.vector.vec3.call(null, ___$1), axis, theta);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PReflect$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PReflect$reflect$arity$2 = function(_, p__7550) {
  var self__ = this;
  var vec__7551 = p__7550;
  var rx = cljs.core.nth.call(null, vec__7551, 0, null);
  var ry = cljs.core.nth.call(null, vec__7551, 1, null);
  var r = vec__7551;
  var ___$1 = this;
  var d = thi.ng.geom.core.dot.call(null, ___$1, r) * 2;
  return new thi.ng.geom.core.vector.Vec2(rx * d - self__.x, ry * d - self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PCrossProduct$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PCrossProduct$cross$arity$2 = function(_, p__7552) {
  var self__ = this;
  var vec__7553 = p__7552;
  var ax = cljs.core.nth.call(null, vec__7553, 0, null);
  var ay = cljs.core.nth.call(null, vec__7553, 1, null);
  var ___$1 = this;
  return self__.x * ay - self__.y * ax;
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  var G__7554 = k | 0;
  if (cljs.core._EQ_.call(null, 1, G__7554)) {
    return self__.y;
  } else {
    if (cljs.core._EQ_.call(null, 0, G__7554)) {
      return self__.x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return thi.ng.common.error.key_error_BANG_.call(null, k);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  var G__7555 = k | 0;
  if (cljs.core._EQ_.call(null, 1, G__7555)) {
    return self__.y;
  } else {
    if (cljs.core._EQ_.call(null, 0, G__7555)) {
      return self__.x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return nf;
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  var G__7556 = k | 0;
  if (cljs.core._EQ_.call(null, 1, G__7556)) {
    return new thi.ng.geom.core.vector.Vec2(self__.x, v);
  } else {
    if (cljs.core._EQ_.call(null, 0, G__7556)) {
      return new thi.ng.geom.core.vector.Vec2(v, self__.y);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return thi.ng.common.error.key_error_BANG_.call(null, k);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(self__.x, self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, null);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 2;
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.y;
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x], null);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IReversible$_rseq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(self__.y, self__.x);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.x), cljs.core.hash.call(null, self__.y));
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.vector.Vec2) {
    return self__.x === o.x && self__.y === o.y;
  } else {
    return cljs.core.sequential_QMARK_.call(null, o) && (cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, o)) && (cljs.core._EQ_.call(null, self__.x, cljs.core.nth.call(null, o, 0)) && cljs.core._EQ_.call(null, self__.y, cljs.core.nth.call(null, o, 1))));
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PHeading$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PHeading$heading$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var t = Math.atan2.call(null, self__.y, self__.x);
  if (t < 0) {
    return t + thi.ng.common.math.core.TWO_PI;
  } else {
    return t;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PHeading$heading_xy$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.heading.call(null, ___$1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PHeading$angle_between$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  var t = thi.ng.geom.core.heading_xy.call(null, a) - thi.ng.geom.core.heading_xy.call(null, ___$1);
  if (t < 0) {
    return t + thi.ng.common.math.core.TWO_PI;
  } else {
    return t;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PHeading$slope_xy$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.y / self__.x;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PDistance$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PDistance$dist$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  var vec__7557 = a instanceof thi.ng.geom.core.vector.Vec2 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - a.x, self__.y - a.y], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - cljs.core.nth.call(null, a, 0), self__.y - cljs.core.nth.call(null, a, 1)], null);
  var dx = cljs.core.nth.call(null, vec__7557, 0, null);
  var dy = cljs.core.nth.call(null, vec__7557, 1, null);
  return Math.sqrt.call(null, dx * dx + dy * dy);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PDistance$dist_squared$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  var vec__7558 = a instanceof thi.ng.geom.core.vector.Vec2 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - a.x, self__.y - a.y], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - cljs.core.nth.call(null, a, 0), self__.y - cljs.core.nth.call(null, a, 1)], null);
  var dx = cljs.core.nth.call(null, vec__7558, 0, null);
  var dy = cljs.core.nth.call(null, vec__7558, 1, null);
  return dx * dx + dy * dy;
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var acc = f.call(null, self__.x, self__.y);
  if (cljs.core.reduced_QMARK_.call(null, acc)) {
    return cljs.core.deref.call(null, acc);
  } else {
    return acc;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var acc = f.call(null, start, self__.x);
  if (cljs.core.reduced_QMARK_.call(null, acc)) {
    return cljs.core.deref.call(null, acc);
  } else {
    var acc__$1 = f.call(null, acc, self__.y);
    if (cljs.core.reduced_QMARK_.call(null, acc__$1)) {
      return cljs.core.deref.call(null, acc__$1);
    } else {
      return acc__$1;
    }
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInvert$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInvert$invert$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(-self__.x, -self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$msub$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2_STAR_.call(null, cljs.core._STAR_, cljs.core._, ___$1, a, b, 1, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._STAR_, ___$1, a, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._STAR_, ___$1, a, b, 1, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._STAR_, ___$1, a, b, c, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(-self__.x, -self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$madd$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2_STAR_.call(null, cljs.core._STAR_, cljs.core._PLUS_, ___$1, a, b, 1, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$addm$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2_STAR_.call(null, cljs.core._PLUS_, cljs.core._STAR_, ___$1, a, b, 0, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$div$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(1 / self__.x, 1 / self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$div$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._SLASH_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$div$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._SLASH_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$div$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._SLASH_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._PLUS_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._PLUS_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._PLUS_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$abs$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(thi.ng.common.math.core.abs.call(null, self__.x), thi.ng.common.math.core.abs.call(null, self__.y));
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMathOps$subm$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2_STAR_.call(null, cljs.core._, cljs.core._STAR_, ___$1, a, b, 0, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormal$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PNormal$normal$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(-self__.y, self__.x);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x;
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, null);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._PLUS_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTranslate$translate$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._PLUS_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PTranslate$translate$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._PLUS_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return!((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [0, null, new cljs.core.Keyword(null, "y", "y", 1013904363), null, 1, null, new cljs.core.Keyword(null, "x", "x", 1013904362), null], null), null)).call(null, k) == null);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle2_assoc.call(null, ___$1, k, v);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_1.call(null, cljs.core._STAR_, ___$1, a, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_2.call(null, cljs.core._STAR_, ___$1, a, b, 1, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec2_op_3.call(null, cljs.core._STAR_, ___$1, a, b, c, 1);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, z) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3.call(null, self__.x, self__.y, z);
};
thi.ng.geom.core.vector.Vec2.prototype.call = function() {
  var G__7581 = null;
  var G__7581__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.vector.swizzle2.call(null, _, k, null);
  };
  var G__7581__3 = function(self__, k, nf) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.vector.swizzle2.call(null, _, k, nf);
  };
  G__7581 = function(self__, k, nf) {
    switch(arguments.length) {
      case 2:
        return G__7581__2.call(this, self__, k);
      case 3:
        return G__7581__3.call(this, self__, k, nf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7581;
}();
thi.ng.geom.core.vector.Vec2.prototype.apply = function(self__, args7547) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7547)));
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.vector.swizzle2.call(null, _, k, null);
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, nf) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.vector.swizzle2.call(null, _, k, nf);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMinMax$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMinMax$min$arity$2 = function(_, p__7559) {
  var self__ = this;
  var vec__7560 = p__7559;
  var ax = cljs.core.nth.call(null, vec__7560, 0, null);
  var ay = cljs.core.nth.call(null, vec__7560, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(function() {
    var x__3795__auto__ = self__.x;
    var y__3796__auto__ = ax;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = self__.y;
    var y__3796__auto__ = ay;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }());
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMinMax$min$arity$3 = function(_, p__7561, p__7562) {
  var self__ = this;
  var vec__7563 = p__7561;
  var ax = cljs.core.nth.call(null, vec__7563, 0, null);
  var ay = cljs.core.nth.call(null, vec__7563, 1, null);
  var vec__7564 = p__7562;
  var bx = cljs.core.nth.call(null, vec__7564, 0, null);
  var by = cljs.core.nth.call(null, vec__7564, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(function() {
    var x__3795__auto__ = function() {
      var x__3795__auto__ = self__.x;
      var y__3796__auto__ = ax;
      return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
    }();
    var y__3796__auto__ = bx;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = function() {
      var x__3795__auto__ = self__.y;
      var y__3796__auto__ = ay;
      return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
    }();
    var y__3796__auto__ = by;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }());
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMinMax$max$arity$2 = function(_, p__7565) {
  var self__ = this;
  var vec__7566 = p__7565;
  var ax = cljs.core.nth.call(null, vec__7566, 0, null);
  var ay = cljs.core.nth.call(null, vec__7566, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(function() {
    var x__3788__auto__ = self__.x;
    var y__3789__auto__ = ax;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = self__.y;
    var y__3789__auto__ = ay;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }());
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMinMax$max$arity$3 = function(_, p__7567, p__7568) {
  var self__ = this;
  var vec__7569 = p__7567;
  var ax = cljs.core.nth.call(null, vec__7569, 0, null);
  var ay = cljs.core.nth.call(null, vec__7569, 1, null);
  var vec__7570 = p__7568;
  var bx = cljs.core.nth.call(null, vec__7570, 0, null);
  var by = cljs.core.nth.call(null, vec__7570, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(function() {
    var x__3788__auto__ = function() {
      var x__3788__auto__ = self__.x;
      var y__3789__auto__ = ax;
      return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
    }();
    var y__3789__auto__ = bx;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = function() {
      var x__3788__auto__ = self__.y;
      var y__3789__auto__ = ay;
      return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
    }();
    var y__3789__auto__ = by;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }());
};
thi.ng.geom.core.vector.Vec2.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.vector.Vec2) {
    var c = cljs.core.compare.call(null, self__.x, o.x);
    if (0 === c) {
      return cljs.core.compare.call(null, self__.y, o.y);
    } else {
      return c;
    }
  } else {
    var c = cljs.core.count.call(null, o);
    if (2 === c) {
      return cljs.core.compare.call(null, o, ___$1);
    } else {
      return 2 - c;
    }
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMagnitude$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMagnitude$mag$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PMagnitude$mag_squared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x * self__.x + self__.y * self__.y;
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInterpolate$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInterpolate$mix$arity$2 = function(_, p__7571) {
  var self__ = this;
  var vec__7572 = p__7571;
  var ax = cljs.core.nth.call(null, vec__7572, 0, null);
  var ay = cljs.core.nth.call(null, vec__7572, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2((ax - self__.x) * 0.5 + self__.x, (ay - self__.y) * 0.5 + self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInterpolate$mix$arity$3 = function(_, p__7573, t) {
  var self__ = this;
  var vec__7574 = p__7573;
  var ax = cljs.core.nth.call(null, vec__7574, 0, null);
  var ay = cljs.core.nth.call(null, vec__7574, 1, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2((ax - self__.x) * t + self__.x, (ay - self__.y) * t + self__.y);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PInterpolate$mix$arity$6 = function(_, p__7575, p__7576, p__7577, u, v) {
  var self__ = this;
  var vec__7578 = p__7575;
  var ax = cljs.core.nth.call(null, vec__7578, 0, null);
  var ay = cljs.core.nth.call(null, vec__7578, 1, null);
  var vec__7579 = p__7576;
  var bx = cljs.core.nth.call(null, vec__7579, 0, null);
  var by = cljs.core.nth.call(null, vec__7579, 1, null);
  var vec__7580 = p__7577;
  var cx = cljs.core.nth.call(null, vec__7580, 0, null);
  var cy = cljs.core.nth.call(null, vec__7580, 1, null);
  var ___$1 = this;
  var ux = (ax - self__.x) * u + self__.x;
  var uy = (ay - self__.y) * u + self__.y;
  return new thi.ng.geom.core.vector.Vec2(((cx - bx) * u + bx - ux) * v + ux, ((cy - by) * u + by - uy) * v + uy);
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PLimit$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PLimit$limit$arity$2 = function(_, len) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.geom.core.mag_squared.call(null, ___$1) > len * len) {
    return thi.ng.geom.core.normalize.call(null, ___$1, len);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PPolar$ = true;
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PPolar$as_polar$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(thi.ng.geom.core.mag.call(null, ___$1), thi.ng.geom.core.heading_xy.call(null, ___$1));
};
thi.ng.geom.core.vector.Vec2.prototype.thi$ng$geom$core$PPolar$as_cartesian$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(self__.x * Math.cos.call(null, self__.y), self__.x * Math.sin.call(null, self__.y));
};
thi.ng.geom.core.vector.__GT_Vec2 = function __GT_Vec2(x, y) {
  return new thi.ng.geom.core.vector.Vec2(x, y);
};
thi.ng.geom.core.vector.Vec3 = function(x, y, z) {
  this.x = x;
  this.y = y;
  this.z = z;
  this.cljs$lang$protocol_mask$partition0$ = 166224859;
  this.cljs$lang$protocol_mask$partition1$ = 10240;
};
thi.ng.geom.core.vector.Vec3.cljs$lang$type = true;
thi.ng.geom.core.vector.Vec3.cljs$lang$ctorStr = "thi.ng.geom.core.vector/Vec3";
thi.ng.geom.core.vector.Vec3.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.core.vector/Vec3");
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.transform_vector.call(null, m, ___$1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.rotate_z.call(null, ___$1, theta);
};
thi.ng.geom.core.vector.Vec3.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("["), cljs.core.str(self__.x), cljs.core.str(" "), cljs.core.str(self__.y), cljs.core.str(" "), cljs.core.str(self__.z), cljs.core.str("]")].join("");
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle3.call(null, ___$1, k, null);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle3.call(null, ___$1, k, nf);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PDotProduct$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PDotProduct$dot$arity$2 = function(_, p__7583) {
  var self__ = this;
  var vec__7584 = p__7583;
  var ax = cljs.core.nth.call(null, vec__7584, 0, null);
  var ay = cljs.core.nth.call(null, vec__7584, 1, null);
  var az = cljs.core.nth.call(null, vec__7584, 2, null);
  var ___$1 = this;
  return self__.x * ax + self__.y * ay + self__.z * az;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PNormalize$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PNormalize$normalize$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var l = Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y + self__.z * self__.z);
  if (l > 0) {
    return new thi.ng.geom.core.vector.Vec3(self__.x / l, self__.y / l, self__.z / l);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PNormalize$normalize$arity$2 = function(_, len) {
  var self__ = this;
  var ___$1 = this;
  var l = Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y + self__.z * self__.z);
  if (l > 0) {
    var l__$1 = len / l;
    return new thi.ng.geom.core.vector.Vec3(self__.x * l__$1, self__.y * l__$1, self__.z * l__$1);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PNormalize$normalized_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.common.math.core.delta_EQ_.call(null, 1, thi.ng.geom.core.mag_squared.call(null, ___$1));
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.vector.Vec3(self__.x, self__.y * c - self__.z * s, self__.y * s + self__.z * c);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.vector.Vec3(self__.x * c + self__.z * s, self__.y, self__.z * c - self__.x * s);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.vector.Vec3(self__.x * c - self__.y * s, self__.x * s + self__.y * c, self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, p__7585, theta) {
  var self__ = this;
  var vec__7586 = p__7585;
  var ax = cljs.core.nth.call(null, vec__7586, 0, null);
  var ay = cljs.core.nth.call(null, vec__7586, 1, null);
  var az = cljs.core.nth.call(null, vec__7586, 2, null);
  var ___$1 = this;
  var ux = ax * self__.x;
  var uy = ax * self__.y;
  var uz = ax * self__.z;
  var vx = ay * self__.x;
  var vy = ay * self__.y;
  var vz = ay * self__.z;
  var wx = az * self__.x;
  var wy = az * self__.y;
  var wz = az * self__.z;
  var ax2 = ax * ax;
  var ay2 = ay * ay;
  var az2 = az * az;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  var uvw = ux + vy + wz;
  return new thi.ng.geom.core.vector.Vec3(uvw * ax + ((ay2 + az2) * self__.x - (vy + wz) * ax) * c + (vz - wy) * s, uvw * ay + ((ax2 + az2) * self__.y - (ux + wz) * ay) * c + (wx - uz) * s, uvw * az + ((ax2 + ay2) * self__.z - (ux + vy) * az) * c + (uy - vx) * s);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PReflect$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PReflect$reflect$arity$2 = function(_, p__7587) {
  var self__ = this;
  var vec__7588 = p__7587;
  var rx = cljs.core.nth.call(null, vec__7588, 0, null);
  var ry = cljs.core.nth.call(null, vec__7588, 1, null);
  var rz = cljs.core.nth.call(null, vec__7588, 2, null);
  var r = vec__7588;
  var ___$1 = this;
  var d = thi.ng.geom.core.dot.call(null, ___$1, r) * 2;
  return new thi.ng.geom.core.vector.Vec3(rx * d - self__.x, ry * d - self__.y, rz * d - self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PCrossProduct$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PCrossProduct$cross$arity$2 = function(_, p__7589) {
  var self__ = this;
  var vec__7590 = p__7589;
  var ax = cljs.core.nth.call(null, vec__7590, 0, null);
  var ay = cljs.core.nth.call(null, vec__7590, 1, null);
  var az = cljs.core.nth.call(null, vec__7590, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(self__.y * az - ay * self__.z, self__.z * ax - az * self__.x, self__.x * ay - ax * self__.y);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  var G__7591 = k | 0;
  if (cljs.core._EQ_.call(null, 2, G__7591)) {
    return self__.z;
  } else {
    if (cljs.core._EQ_.call(null, 1, G__7591)) {
      return self__.y;
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7591)) {
        return self__.x;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return thi.ng.common.error.key_error_BANG_.call(null, k);
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  var G__7592 = k | 0;
  if (cljs.core._EQ_.call(null, 2, G__7592)) {
    return self__.z;
  } else {
    if (cljs.core._EQ_.call(null, 1, G__7592)) {
      return self__.y;
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7592)) {
        return self__.x;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return nf;
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  var G__7593 = k | 0;
  if (cljs.core._EQ_.call(null, 2, G__7593)) {
    return new thi.ng.geom.core.vector.Vec3(self__.x, self__.y, v);
  } else {
    if (cljs.core._EQ_.call(null, 1, G__7593)) {
      return new thi.ng.geom.core.vector.Vec3(self__.x, v, self__.z);
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7593)) {
        return new thi.ng.geom.core.vector.Vec3(v, self__.y, self__.z);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return thi.ng.common.error.key_error_BANG_.call(null, k);
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(self__.x, self__.y, self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, cljs.core.cons.call(null, self__.z, null));
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 3;
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.z;
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(self__.x, self__.y);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IReversible$_rseq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(self__.z, self__.y, self__.x);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_combine.call(null, cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.x), cljs.core.hash.call(null, self__.y)), cljs.core.hash.call(null, self__.z));
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.vector.Vec3) {
    return self__.x === o.x && (self__.y === o.y && self__.z === o.z);
  } else {
    return cljs.core.sequential_QMARK_.call(null, o) && (cljs.core._EQ_.call(null, 3, cljs.core.count.call(null, o)) && (cljs.core._EQ_.call(null, self__.x, cljs.core.nth.call(null, o, 0)) && (cljs.core._EQ_.call(null, self__.y, cljs.core.nth.call(null, o, 1)) && cljs.core._EQ_.call(null, self__.z, cljs.core.nth.call(null, o, 2)))));
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$heading$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.heading_xy.call(null, ___$1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$heading_xy$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var t = Math.atan2.call(null, self__.y, self__.x);
  if (t < 0) {
    return t + thi.ng.common.math.core.TWO_PI;
  } else {
    return t;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$heading_xz$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var t = Math.atan2.call(null, self__.z, self__.x);
  if (t < 0) {
    return t + thi.ng.common.math.core.TWO_PI;
  } else {
    return t;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$heading_yz$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var t = Math.atan2.call(null, self__.z, self__.y);
  if (t < 0) {
    return t + thi.ng.common.math.core.TWO_PI;
  } else {
    return t;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$angle_between$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return Math.acos.call(null, thi.ng.geom.core.dot.call(null, ___$1, a));
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$slope_xy$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.y / self__.x;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$slope_xz$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x / self__.x;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PHeading$slope_yz$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.z / self__.y;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PDistance$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PDistance$dist$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return Math.sqrt.call(null, thi.ng.geom.core.dist_squared.call(null, ___$1, a));
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PDistance$dist_squared$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  var vec__7594 = a instanceof thi.ng.geom.core.vector.Vec3 ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - a.x, self__.y - a.y, self__.z - a.z], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x - cljs.core.nth.call(null, a, 0), self__.y - cljs.core.nth.call(null, a, 1), self__.z - cljs.core.nth.call(null, a, 2, 0)], null);
  var dx = cljs.core.nth.call(null, vec__7594, 0, null);
  var dy = cljs.core.nth.call(null, vec__7594, 1, null);
  var dz = cljs.core.nth.call(null, vec__7594, 2, null);
  return dx * dx + dy * dy + dz * dz;
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var acc = f.call(null, self__.x, self__.y);
  if (cljs.core.reduced_QMARK_.call(null, acc)) {
    return cljs.core.deref.call(null, acc);
  } else {
    var acc__$1 = f.call(null, acc, self__.z);
    if (cljs.core.reduced_QMARK_.call(null, acc__$1)) {
      return cljs.core.deref.call(null, acc__$1);
    } else {
      return acc__$1;
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var acc = f.call(null, start, self__.x);
  if (cljs.core.reduced_QMARK_.call(null, acc)) {
    return cljs.core.deref.call(null, acc);
  } else {
    var acc__$1 = f.call(null, acc, self__.y);
    if (cljs.core.reduced_QMARK_.call(null, acc__$1)) {
      return cljs.core.deref.call(null, acc__$1);
    } else {
      var acc__$2 = f.call(null, acc__$1, self__.z);
      if (cljs.core.reduced_QMARK_.call(null, acc__$2)) {
        return cljs.core.deref.call(null, acc__$2);
      } else {
        return acc__$2;
      }
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInvert$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInvert$invert$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(-self__.x, -self__.y, -self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$msub$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._STAR_, cljs.core._, ___$1, a, b, 1, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._STAR_, ___$1, a, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._STAR_, cljs.core._STAR_, ___$1, a, b, 1, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._STAR_, ___$1, a, b, c, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(-self__.x, -self__.y, -self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._, cljs.core._, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$madd$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._STAR_, cljs.core._PLUS_, ___$1, a, b, 1, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$addm$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._PLUS_, cljs.core._STAR_, ___$1, a, b, 0, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$div$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(1 / self__.x, 1 / self__.y, 1 / self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$div$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._SLASH_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$div$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._SLASH_, cljs.core._SLASH_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$div$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._SLASH_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._PLUS_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._PLUS_, cljs.core._PLUS_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._PLUS_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$abs$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(thi.ng.common.math.core.abs.call(null, self__.x), thi.ng.common.math.core.abs.call(null, self__.y), thi.ng.common.math.core.abs.call(null, self__.z));
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMathOps$subm$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._, cljs.core._STAR_, ___$1, a, b, 0, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x;
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, cljs.core.cons.call(null, self__.z, null));
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._PLUS_, ___$1, a, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTranslate$translate$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._PLUS_, cljs.core._PLUS_, ___$1, a, b, 0, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PTranslate$translate$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._PLUS_, ___$1, a, b, c, 0);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return!((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [0, null, new cljs.core.Keyword(null, "y", "y", 1013904363), null, 1, null, new cljs.core.Keyword(null, "z", "z", 1013904364), null, 2, null, new cljs.core.Keyword(null, "x", "x", 1013904362), null], null), null)).call(null, k) == null);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.swizzle3_assoc.call(null, ___$1, k, v);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, a) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_1.call(null, cljs.core._STAR_, ___$1, a, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, a, b) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_2.call(null, cljs.core._STAR_, cljs.core._STAR_, ___$1, a, b, 1, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, a, b, c) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.vector.vec3_op_3.call(null, cljs.core._STAR_, ___$1, a, b, c, 1);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, w) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x, self__.y, self__.z, w], null);
};
thi.ng.geom.core.vector.Vec3.prototype.call = function() {
  var G__7617 = null;
  var G__7617__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.vector.swizzle3.call(null, _, k, null);
  };
  var G__7617__3 = function(self__, k, nf) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.vector.swizzle3.call(null, _, k, nf);
  };
  G__7617 = function(self__, k, nf) {
    switch(arguments.length) {
      case 2:
        return G__7617__2.call(this, self__, k);
      case 3:
        return G__7617__3.call(this, self__, k, nf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__7617;
}();
thi.ng.geom.core.vector.Vec3.prototype.apply = function(self__, args7582) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args7582)));
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.vector.swizzle3.call(null, _, k, null);
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, nf) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.vector.swizzle3.call(null, _, k, nf);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMinMax$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMinMax$min$arity$2 = function(_, p__7595) {
  var self__ = this;
  var vec__7596 = p__7595;
  var ax = cljs.core.nth.call(null, vec__7596, 0, null);
  var ay = cljs.core.nth.call(null, vec__7596, 1, null);
  var az = cljs.core.nth.call(null, vec__7596, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(function() {
    var x__3795__auto__ = self__.x;
    var y__3796__auto__ = ax;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = self__.y;
    var y__3796__auto__ = ay;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = self__.z;
    var y__3796__auto__ = az;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }());
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMinMax$min$arity$3 = function(_, p__7597, p__7598) {
  var self__ = this;
  var vec__7599 = p__7597;
  var ax = cljs.core.nth.call(null, vec__7599, 0, null);
  var ay = cljs.core.nth.call(null, vec__7599, 1, null);
  var az = cljs.core.nth.call(null, vec__7599, 2, null);
  var vec__7600 = p__7598;
  var bx = cljs.core.nth.call(null, vec__7600, 0, null);
  var by = cljs.core.nth.call(null, vec__7600, 1, null);
  var bz = cljs.core.nth.call(null, vec__7600, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(function() {
    var x__3795__auto__ = function() {
      var x__3795__auto__ = self__.x;
      var y__3796__auto__ = ax;
      return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
    }();
    var y__3796__auto__ = bx;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = function() {
      var x__3795__auto__ = self__.y;
      var y__3796__auto__ = ay;
      return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
    }();
    var y__3796__auto__ = by;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }(), function() {
    var x__3795__auto__ = function() {
      var x__3795__auto__ = self__.z;
      var y__3796__auto__ = az;
      return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
    }();
    var y__3796__auto__ = bz;
    return x__3795__auto__ < y__3796__auto__ ? x__3795__auto__ : y__3796__auto__;
  }());
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMinMax$max$arity$2 = function(_, p__7601) {
  var self__ = this;
  var vec__7602 = p__7601;
  var ax = cljs.core.nth.call(null, vec__7602, 0, null);
  var ay = cljs.core.nth.call(null, vec__7602, 1, null);
  var az = cljs.core.nth.call(null, vec__7602, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(function() {
    var x__3788__auto__ = self__.x;
    var y__3789__auto__ = ax;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = self__.y;
    var y__3789__auto__ = ay;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = self__.z;
    var y__3789__auto__ = az;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }());
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMinMax$max$arity$3 = function(_, p__7603, p__7604) {
  var self__ = this;
  var vec__7605 = p__7603;
  var ax = cljs.core.nth.call(null, vec__7605, 0, null);
  var ay = cljs.core.nth.call(null, vec__7605, 1, null);
  var az = cljs.core.nth.call(null, vec__7605, 2, null);
  var vec__7606 = p__7604;
  var bx = cljs.core.nth.call(null, vec__7606, 0, null);
  var by = cljs.core.nth.call(null, vec__7606, 1, null);
  var bz = cljs.core.nth.call(null, vec__7606, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(function() {
    var x__3788__auto__ = function() {
      var x__3788__auto__ = self__.x;
      var y__3789__auto__ = ax;
      return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
    }();
    var y__3789__auto__ = bx;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = function() {
      var x__3788__auto__ = self__.y;
      var y__3789__auto__ = ay;
      return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
    }();
    var y__3789__auto__ = by;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }(), function() {
    var x__3788__auto__ = function() {
      var x__3788__auto__ = self__.z;
      var y__3789__auto__ = az;
      return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
    }();
    var y__3789__auto__ = bz;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }());
};
thi.ng.geom.core.vector.Vec3.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.vector.Vec3) {
    var c = cljs.core.compare.call(null, self__.x, o.x);
    if (0 === c) {
      var c__$1 = cljs.core.compare.call(null, self__.y, o.y);
      if (0 === c__$1) {
        return cljs.core.compare.call(null, self__.z, o.z);
      } else {
        return c__$1;
      }
    } else {
      return c;
    }
  } else {
    var c = cljs.core.count.call(null, o);
    if (3 === c) {
      return cljs.core.compare.call(null, o, ___$1);
    } else {
      return 3 - c;
    }
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMagnitude$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMagnitude$mag$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y + self__.z * self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PMagnitude$mag_squared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x * self__.x + self__.y * self__.y + self__.z * self__.z;
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInterpolate$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInterpolate$mix$arity$2 = function(_, p__7607) {
  var self__ = this;
  var vec__7608 = p__7607;
  var ax = cljs.core.nth.call(null, vec__7608, 0, null);
  var ay = cljs.core.nth.call(null, vec__7608, 1, null);
  var az = cljs.core.nth.call(null, vec__7608, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3((ax - self__.x) * 0.5 + self__.x, (ay - self__.y) * 0.5 + self__.y, (az - self__.z) * 0.5 + self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInterpolate$mix$arity$3 = function(_, p__7609, t) {
  var self__ = this;
  var vec__7610 = p__7609;
  var ax = cljs.core.nth.call(null, vec__7610, 0, null);
  var ay = cljs.core.nth.call(null, vec__7610, 1, null);
  var az = cljs.core.nth.call(null, vec__7610, 2, null);
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3((ax - self__.x) * t + self__.x, (ay - self__.y) * t + self__.y, (az - self__.z) * t + self__.z);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PInterpolate$mix$arity$6 = function(_, p__7611, p__7612, p__7613, u, v) {
  var self__ = this;
  var vec__7614 = p__7611;
  var ax = cljs.core.nth.call(null, vec__7614, 0, null);
  var ay = cljs.core.nth.call(null, vec__7614, 1, null);
  var az = cljs.core.nth.call(null, vec__7614, 2, null);
  var vec__7615 = p__7612;
  var bx = cljs.core.nth.call(null, vec__7615, 0, null);
  var by = cljs.core.nth.call(null, vec__7615, 1, null);
  var bz = cljs.core.nth.call(null, vec__7615, 2, null);
  var vec__7616 = p__7613;
  var cx = cljs.core.nth.call(null, vec__7616, 0, null);
  var cy = cljs.core.nth.call(null, vec__7616, 1, null);
  var cz = cljs.core.nth.call(null, vec__7616, 2, null);
  var ___$1 = this;
  var ux = (ax - self__.x) * u + self__.x;
  var uy = (ay - self__.y) * u + self__.y;
  var uz = (az - self__.z) * u + self__.z;
  return new thi.ng.geom.core.vector.Vec3(((cx - bx) * u + bx - ux) * v + ux, ((cy - by) * u + by - uy) * v + uy, ((cz - bz) * u + bz - uz) * v + uz);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PLimit$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PLimit$limit$arity$2 = function(_, len) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.geom.core.mag_squared.call(null, ___$1) > len * len) {
    return thi.ng.geom.core.normalize.call(null, ___$1, len);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PPolar$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PPolar$as_polar$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var r = thi.ng.geom.core.mag.call(null, ___$1);
  var theta = Math.atan2.call(null, self__.y, self__.x);
  var phi = Math.acos.call(null, self__.z / r);
  return new thi.ng.geom.core.vector.Vec3(r, theta < 0 ? thi.ng.common.math.core.TWO_PI + theta : theta, phi);
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$core$PPolar$as_cartesian$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var rsphi = Math.sin.call(null, self__.z) * self__.x;
  return new thi.ng.geom.core.vector.Vec3(Math.cos.call(null, self__.y) * rsphi, Math.sin.call(null, self__.y) * rsphi, Math.cos.call(null, self__.z) * self__.x);
};
thi.ng.geom.core.vector.__GT_Vec3 = function __GT_Vec3(x, y, z) {
  return new thi.ng.geom.core.vector.Vec3(x, y, z);
};
thi.ng.geom.core.vector.vec2_op_seq = function vec2_op_seq(op, acc, xs) {
  var ax = acc.x;
  var ay = acc.y;
  var xs__$1 = xs;
  while (true) {
    if (cljs.core.truth_(xs__$1)) {
      var v = cljs.core.first.call(null, xs__$1);
      var G__7618 = op.call(null, ax, v.x);
      var G__7619 = op.call(null, ay, v.y);
      var G__7620 = cljs.core.next.call(null, xs__$1);
      ax = G__7618;
      ay = G__7619;
      xs__$1 = G__7620;
      continue;
    } else {
      return new thi.ng.geom.core.vector.Vec2(ax, ay);
    }
    break;
  }
};
thi.ng.geom.core.vector.vec2_op_seq2 = function vec2_op_seq2(op, op2, acc, as, b) {
  var ax = acc.x;
  var ay = acc.y;
  var as__$1 = as;
  while (true) {
    if (cljs.core.truth_(as__$1)) {
      var v = cljs.core.first.call(null, as__$1);
      var G__7623 = op.call(null, ax, v.x);
      var G__7624 = op.call(null, ay, v.y);
      var G__7625 = cljs.core.next.call(null, as__$1);
      ax = G__7623;
      ay = G__7624;
      as__$1 = G__7625;
      continue;
    } else {
      var vec__7622 = typeof b === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7622, 0, null);
      var by = cljs.core.nth.call(null, vec__7622, 1, null);
      return new thi.ng.geom.core.vector.Vec2(op2.call(null, ax, bx), op2.call(null, ay, by));
    }
    break;
  }
};
thi.ng.geom.core.vector.vec2_op_1 = function vec2_op_1(op, _, a, d) {
  if (a instanceof thi.ng.geom.core.vector.Vec2) {
    return new thi.ng.geom.core.vector.Vec2(op.call(null, _.x, a.x), op.call(null, _.y, a.y));
  } else {
    if (typeof a === "number") {
      return new thi.ng.geom.core.vector.Vec2(op.call(null, _.x, a), op.call(null, _.y, a));
    } else {
      if (cljs.core.first.call(null, a) instanceof thi.ng.geom.core.vector.Vec2) {
        return thi.ng.geom.core.vector.vec2_op_seq.call(null, op, _, a);
      } else {
        return new thi.ng.geom.core.vector.Vec2(op.call(null, _.x, cljs.core.nth.call(null, a, 0, d)), op.call(null, _.y, cljs.core.nth.call(null, a, 1, d)));
      }
    }
  }
};
thi.ng.geom.core.vector.vec2_op_2 = function vec2_op_2(op, _, a, b, d1, d2) {
  if (a instanceof thi.ng.geom.core.vector.Vec2) {
    if (b instanceof thi.ng.geom.core.vector.Vec2) {
      return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, _.x, a.x), b.x), op.call(null, op.call(null, _.y, a.y), b.y));
    } else {
      if (typeof b === "number") {
        return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, _.x, a.x), b), op.call(null, op.call(null, _.y, a.y), b));
      } else {
        return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, _.x, a.x), cljs.core.nth.call(null, b, 0, d2)), op.call(null, op.call(null, _.y, a.y), cljs.core.nth.call(null, b, 1, d2)));
      }
    }
  } else {
    var an_QMARK_ = typeof a === "number";
    var bn_QMARK_ = typeof b === "number";
    if (an_QMARK_ && bn_QMARK_) {
      return new thi.ng.geom.core.vector.Vec2(op.call(null, _.x, a), op.call(null, _.y, b));
    } else {
      var vec__7628 = an_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a], null) : a;
      var ax = cljs.core.nth.call(null, vec__7628, 0, null);
      var ay = cljs.core.nth.call(null, vec__7628, 1, null);
      var vec__7629 = bn_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7629, 0, null);
      var by = cljs.core.nth.call(null, vec__7629, 1, null);
      return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, _.x, function() {
        var or__3481__auto__ = ax;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d1;
        }
      }()), function() {
        var or__3481__auto__ = bx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d2;
        }
      }()), op.call(null, op.call(null, _.y, function() {
        var or__3481__auto__ = ay;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d1;
        }
      }()), function() {
        var or__3481__auto__ = by;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d2;
        }
      }()));
    }
  }
};
thi.ng.geom.core.vector.vec2_op_2_STAR_ = function vec2_op_2_STAR_(op, op2, _, a, b, d1, d2) {
  if (a instanceof thi.ng.geom.core.vector.Vec2) {
    if (b instanceof thi.ng.geom.core.vector.Vec2) {
      return new thi.ng.geom.core.vector.Vec2(op2.call(null, op.call(null, _.x, a.x), b.x), op2.call(null, op.call(null, _.y, a.y), b.y));
    } else {
      if (typeof b === "number") {
        return new thi.ng.geom.core.vector.Vec2(op2.call(null, op.call(null, _.x, a.x), b), op2.call(null, op.call(null, _.y, a.y), b));
      } else {
        return new thi.ng.geom.core.vector.Vec2(op2.call(null, op.call(null, _.x, a.x), cljs.core.nth.call(null, b, 0, d2)), op2.call(null, op.call(null, _.y, a.y), cljs.core.nth.call(null, b, 1, d2)));
      }
    }
  } else {
    if (cljs.core.sequential_QMARK_.call(null, a) && cljs.core.first.call(null, a) instanceof thi.ng.geom.core.vector.Vec2) {
      return thi.ng.geom.core.vector.vec2_op_seq2.call(null, op, op2, _, a, b);
    } else {
      var an_QMARK_ = typeof a === "number";
      var bn_QMARK_ = typeof b === "number";
      if (an_QMARK_ && bn_QMARK_) {
        return new thi.ng.geom.core.vector.Vec2(op2.call(null, op.call(null, _.x, a), b), op2.call(null, op.call(null, _.y, a), b));
      } else {
        var vec__7632 = an_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a], null) : a;
        var ax = cljs.core.nth.call(null, vec__7632, 0, null);
        var ay = cljs.core.nth.call(null, vec__7632, 1, null);
        var vec__7633 = bn_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b], null) : b;
        var bx = cljs.core.nth.call(null, vec__7633, 0, null);
        var by = cljs.core.nth.call(null, vec__7633, 1, null);
        return new thi.ng.geom.core.vector.Vec2(op2.call(null, op.call(null, _.x, function() {
          var or__3481__auto__ = ax;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return d1;
          }
        }()), function() {
          var or__3481__auto__ = bx;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return d2;
          }
        }()), op2.call(null, op.call(null, _.y, function() {
          var or__3481__auto__ = ay;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return d1;
          }
        }()), function() {
          var or__3481__auto__ = by;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return d2;
          }
        }()));
      }
    }
  }
};
thi.ng.geom.core.vector.vec2_op_3 = function vec2_op_3(op, _, a, b, c, d) {
  if (a instanceof thi.ng.geom.core.vector.Vec2) {
    if (b instanceof thi.ng.geom.core.vector.Vec2) {
      if (c instanceof thi.ng.geom.core.vector.Vec2) {
        return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), c.x), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), c.y));
      } else {
        if (typeof c === "number") {
          return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), c), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), c));
        } else {
          return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), cljs.core.nth.call(null, c, 0, d)), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), cljs.core.nth.call(null, c, 1, d)));
        }
      }
    } else {
      var vec__7639 = typeof b === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7639, 0, null);
      var by = cljs.core.nth.call(null, vec__7639, 1, null);
      var vec__7640 = typeof c === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, c], null) : c;
      var cx = cljs.core.nth.call(null, vec__7640, 0, null);
      var cy = cljs.core.nth.call(null, vec__7640, 1, null);
      return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, op.call(null, _.x, a.x), function() {
        var or__3481__auto__ = bx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), op.call(null, op.call(null, op.call(null, _.y, a.y), function() {
        var or__3481__auto__ = by;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cy;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()));
    }
  } else {
    var vec__7641 = typeof a === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a], null) : a;
    var ax = cljs.core.nth.call(null, vec__7641, 0, null);
    var ay = cljs.core.nth.call(null, vec__7641, 1, null);
    var vec__7642 = typeof b === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b], null) : b;
    var bx = cljs.core.nth.call(null, vec__7642, 0, null);
    var by = cljs.core.nth.call(null, vec__7642, 1, null);
    var vec__7643 = typeof c === "number" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, c], null) : c;
    var cx = cljs.core.nth.call(null, vec__7643, 0, null);
    var cy = cljs.core.nth.call(null, vec__7643, 1, null);
    return new thi.ng.geom.core.vector.Vec2(op.call(null, op.call(null, op.call(null, _.x, function() {
      var or__3481__auto__ = ax;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()), function() {
      var or__3481__auto__ = bx;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()), function() {
      var or__3481__auto__ = cx;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()), op.call(null, op.call(null, op.call(null, _.y, function() {
      var or__3481__auto__ = ay;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()), function() {
      var or__3481__auto__ = by;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()), function() {
      var or__3481__auto__ = cy;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return d;
      }
    }()));
  }
};
thi.ng.geom.core.vector.vec3_op_seq = function vec3_op_seq(op, acc, xs) {
  var ax = acc.x;
  var ay = acc.y;
  var az = acc.z;
  var xs__$1 = xs;
  while (true) {
    if (cljs.core.truth_(xs__$1)) {
      var v = cljs.core.first.call(null, xs__$1);
      var G__7644 = op.call(null, ax, v.x);
      var G__7645 = op.call(null, ay, v.y);
      var G__7646 = op.call(null, az, v.z);
      var G__7647 = cljs.core.next.call(null, xs__$1);
      ax = G__7644;
      ay = G__7645;
      az = G__7646;
      xs__$1 = G__7647;
      continue;
    } else {
      return new thi.ng.geom.core.vector.Vec3(ax, ay, az);
    }
    break;
  }
};
thi.ng.geom.core.vector.vec3_op_seq2 = function vec3_op_seq2(op, op2, acc, as, b) {
  var ax = acc.x;
  var ay = acc.y;
  var az = acc.z;
  var as__$1 = as;
  while (true) {
    if (cljs.core.truth_(as__$1)) {
      var v = cljs.core.first.call(null, as__$1);
      var G__7650 = op.call(null, ax, v.x);
      var G__7651 = op.call(null, ay, v.y);
      var G__7652 = op.call(null, az, v.z);
      var G__7653 = cljs.core.next.call(null, as__$1);
      ax = G__7650;
      ay = G__7651;
      az = G__7652;
      as__$1 = G__7653;
      continue;
    } else {
      var vec__7649 = typeof b === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7649, 0, null);
      var by = cljs.core.nth.call(null, vec__7649, 1, null);
      var bz = cljs.core.nth.call(null, vec__7649, 2, null);
      return new thi.ng.geom.core.vector.Vec3(op2.call(null, ax, bx), op2.call(null, ay, by), op2.call(null, az, bz));
    }
    break;
  }
};
thi.ng.geom.core.vector.vec3_op_1 = function vec3_op_1(op, _, a, d) {
  if (a instanceof thi.ng.geom.core.vector.Vec3) {
    return new thi.ng.geom.core.vector.Vec3(op.call(null, _.x, a.x), op.call(null, _.y, a.y), op.call(null, _.z, a.z));
  } else {
    if (typeof a === "number") {
      return new thi.ng.geom.core.vector.Vec3(op.call(null, _.x, a), op.call(null, _.y, a), op.call(null, _.z, a));
    } else {
      if (cljs.core.first.call(null, a) instanceof thi.ng.geom.core.vector.Vec3) {
        return thi.ng.geom.core.vector.vec3_op_seq.call(null, op, _, a);
      } else {
        return new thi.ng.geom.core.vector.Vec3(op.call(null, _.x, cljs.core.nth.call(null, a, 0, d)), op.call(null, _.y, cljs.core.nth.call(null, a, 1, d)), op.call(null, _.z, cljs.core.nth.call(null, a, 2, d)));
      }
    }
  }
};
thi.ng.geom.core.vector.vec3_op_2 = function vec3_op_2(op, op2, _, a, b, d1, d2) {
  if (a instanceof thi.ng.geom.core.vector.Vec3) {
    if (b instanceof thi.ng.geom.core.vector.Vec3) {
      return new thi.ng.geom.core.vector.Vec3(op2.call(null, op.call(null, _.x, a.x), b.x), op2.call(null, op.call(null, _.y, a.y), b.y), op2.call(null, op.call(null, _.z, a.z), b.z));
    } else {
      if (typeof b === "number") {
        return new thi.ng.geom.core.vector.Vec3(op2.call(null, op.call(null, _.x, a.x), b), op2.call(null, op.call(null, _.y, a.y), b), op2.call(null, op.call(null, _.z, a.z), b));
      } else {
        return new thi.ng.geom.core.vector.Vec3(op2.call(null, op.call(null, _.x, a.x), cljs.core.nth.call(null, b, 0, d2)), op2.call(null, op.call(null, _.y, a.y), cljs.core.nth.call(null, b, 1, d2)), op2.call(null, op.call(null, _.z, a.z), cljs.core.nth.call(null, b, 2, d2)));
      }
    }
  } else {
    if (cljs.core.sequential_QMARK_.call(null, a) && cljs.core.first.call(null, a) instanceof thi.ng.geom.core.vector.Vec3) {
      return thi.ng.geom.core.vector.vec3_op_seq2.call(null, op, op2, _, a, b);
    } else {
      var vec__7656 = typeof a === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a, a], null) : a;
      var ax = cljs.core.nth.call(null, vec__7656, 0, null);
      var ay = cljs.core.nth.call(null, vec__7656, 1, null);
      var az = cljs.core.nth.call(null, vec__7656, 2, null);
      var vec__7657 = typeof b === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7657, 0, null);
      var by = cljs.core.nth.call(null, vec__7657, 1, null);
      var bz = cljs.core.nth.call(null, vec__7657, 2, null);
      return new thi.ng.geom.core.vector.Vec3(op2.call(null, op.call(null, _.x, function() {
        var or__3481__auto__ = ax;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d1;
        }
      }()), function() {
        var or__3481__auto__ = bx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d2;
        }
      }()), op2.call(null, op.call(null, _.y, function() {
        var or__3481__auto__ = ay;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d1;
        }
      }()), function() {
        var or__3481__auto__ = by;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d2;
        }
      }()), op2.call(null, op.call(null, _.z, function() {
        var or__3481__auto__ = az;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d1;
        }
      }()), function() {
        var or__3481__auto__ = bz;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d2;
        }
      }()));
    }
  }
};
thi.ng.geom.core.vector.vec3_op_3 = function vec3_op_3(op, _, a, b, c, d) {
  if (a instanceof thi.ng.geom.core.vector.Vec3) {
    if (b instanceof thi.ng.geom.core.vector.Vec3) {
      if (c instanceof thi.ng.geom.core.vector.Vec3) {
        return new thi.ng.geom.core.vector.Vec3(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), c.x), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), c.y), op.call(null, op.call(null, op.call(null, _.z, a.z), b.z), c.z));
      } else {
        if (typeof c === "number") {
          return new thi.ng.geom.core.vector.Vec3(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), c), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), c), op.call(null, op.call(null, op.call(null, _.z, a.z), b.z), c));
        } else {
          return new thi.ng.geom.core.vector.Vec3(op.call(null, op.call(null, op.call(null, _.x, a.x), b.x), cljs.core.nth.call(null, c, 0, d)), op.call(null, op.call(null, op.call(null, _.y, a.y), b.y), cljs.core.nth.call(null, c, 1, d)), op.call(null, op.call(null, op.call(null, _.z, a.z), b.z), cljs.core.nth.call(null, c, 2, d)));
        }
      }
    } else {
      var vec__7663 = typeof b === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7663, 0, null);
      var by = cljs.core.nth.call(null, vec__7663, 1, null);
      var bz = cljs.core.nth.call(null, vec__7663, 2, null);
      var vec__7664 = typeof c === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, c, c], null) : c;
      var cx = cljs.core.nth.call(null, vec__7664, 0, null);
      var cy = cljs.core.nth.call(null, vec__7664, 1, null);
      var cz = cljs.core.nth.call(null, vec__7664, 2, null);
      return new thi.ng.geom.core.vector.Vec3(op.call(null, op.call(null, op.call(null, _.x, a.x), function() {
        var or__3481__auto__ = bx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), op.call(null, op.call(null, op.call(null, _.y, a.y), function() {
        var or__3481__auto__ = by;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cy;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), op.call(null, op.call(null, op.call(null, _.z, a.z), function() {
        var or__3481__auto__ = bz;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cz;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()));
    }
  } else {
    var an_QMARK_ = typeof a === "number";
    var bn_QMARK_ = typeof b === "number";
    var cn_QMARK_ = typeof c === "number";
    if (an_QMARK_ && (bn_QMARK_ && cn_QMARK_)) {
      return new thi.ng.geom.core.vector.Vec3(op.call(null, _.x, a), op.call(null, _.y, b), op.call(null, _.z, c));
    } else {
      var vec__7665 = typeof a === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, a, a], null) : a;
      var ax = cljs.core.nth.call(null, vec__7665, 0, null);
      var ay = cljs.core.nth.call(null, vec__7665, 1, null);
      var az = cljs.core.nth.call(null, vec__7665, 2, null);
      var vec__7666 = typeof b === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, b, b], null) : b;
      var bx = cljs.core.nth.call(null, vec__7666, 0, null);
      var by = cljs.core.nth.call(null, vec__7666, 1, null);
      var bz = cljs.core.nth.call(null, vec__7666, 2, null);
      var vec__7667 = typeof c === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, c, c], null) : c;
      var cx = cljs.core.nth.call(null, vec__7667, 0, null);
      var cy = cljs.core.nth.call(null, vec__7667, 1, null);
      var cz = cljs.core.nth.call(null, vec__7667, 2, null);
      return new thi.ng.geom.core.vector.Vec3(op.call(null, op.call(null, op.call(null, _.x, function() {
        var or__3481__auto__ = ax;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = bx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cx;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), op.call(null, op.call(null, op.call(null, _.y, function() {
        var or__3481__auto__ = ay;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = by;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cy;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), op.call(null, op.call(null, op.call(null, _.z, function() {
        var or__3481__auto__ = az;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = bz;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()), function() {
        var or__3481__auto__ = cz;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return d;
        }
      }()));
    }
  }
};
thi.ng.geom.core.vector.V2 = new thi.ng.geom.core.vector.Vec2(0, 0);
thi.ng.geom.core.vector.V3 = new thi.ng.geom.core.vector.Vec3(0, 0, 0);
thi.ng.geom.core.vector.V2X = new thi.ng.geom.core.vector.Vec2(1, 0);
thi.ng.geom.core.vector.V2Y = new thi.ng.geom.core.vector.Vec2(0, 1);
thi.ng.geom.core.vector.V3X = new thi.ng.geom.core.vector.Vec3(1, 0, 0);
thi.ng.geom.core.vector.V3Y = new thi.ng.geom.core.vector.Vec3(0, 1, 0);
thi.ng.geom.core.vector.V3Z = new thi.ng.geom.core.vector.Vec3(0, 0, 1);
thi.ng.geom.core.vector.V2INF_ = new thi.ng.geom.core.vector.Vec2(thi.ng.common.math.core.INF_, thi.ng.common.math.core.INF_);
thi.ng.geom.core.vector.V2INF_PLUS_ = new thi.ng.geom.core.vector.Vec2(thi.ng.common.math.core.INF_PLUS_, thi.ng.common.math.core.INF_PLUS_);
thi.ng.geom.core.vector.V3INF_ = new thi.ng.geom.core.vector.Vec3(thi.ng.common.math.core.INF_, thi.ng.common.math.core.INF_, thi.ng.common.math.core.INF_);
thi.ng.geom.core.vector.V3INF_PLUS_ = new thi.ng.geom.core.vector.Vec3(thi.ng.common.math.core.INF_PLUS_, thi.ng.common.math.core.INF_PLUS_, thi.ng.common.math.core.INF_PLUS_);
thi.ng.geom.core.vector.vec2 = function() {
  var vec2 = null;
  var vec2__0 = function() {
    return thi.ng.geom.core.vector.V2;
  };
  var vec2__1 = function(x) {
    if (x instanceof thi.ng.geom.core.vector.Vec2) {
      return x;
    } else {
      if (cljs.core.sequential_QMARK_.call(null, x)) {
        return new thi.ng.geom.core.vector.Vec2(cljs.core.nth.call(null, x, 0, 0), cljs.core.nth.call(null, x, 1, 0));
      } else {
        if (typeof x === "number") {
          return new thi.ng.geom.core.vector.Vec2(x, x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            return new thi.ng.geom.core.vector.Vec2(cljs.core.get.call(null, x, new cljs.core.Keyword(null, "x", "x", 1013904362), 0), cljs.core.get.call(null, x, new cljs.core.Keyword(null, "y", "y", 1013904363), 0));
          } else {
            if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
              return thi.ng.common.error.type_error_BANG_.call(null, "Vec2", x);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var vec2__2 = function(x, y) {
    return new thi.ng.geom.core.vector.Vec2(x, y);
  };
  vec2 = function(x, y) {
    switch(arguments.length) {
      case 0:
        return vec2__0.call(this);
      case 1:
        return vec2__1.call(this, x);
      case 2:
        return vec2__2.call(this, x, y);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vec2.cljs$core$IFn$_invoke$arity$0 = vec2__0;
  vec2.cljs$core$IFn$_invoke$arity$1 = vec2__1;
  vec2.cljs$core$IFn$_invoke$arity$2 = vec2__2;
  return vec2;
}();
thi.ng.geom.core.vector.vec3 = function() {
  var vec3 = null;
  var vec3__0 = function() {
    return thi.ng.geom.core.vector.V3;
  };
  var vec3__1 = function(x) {
    if (x instanceof thi.ng.geom.core.vector.Vec3) {
      return x;
    } else {
      if (cljs.core.sequential_QMARK_.call(null, x)) {
        return new thi.ng.geom.core.vector.Vec3(cljs.core.nth.call(null, x, 0, 0), cljs.core.nth.call(null, x, 1, 0), cljs.core.nth.call(null, x, 2, 0));
      } else {
        if (typeof x === "number") {
          return new thi.ng.geom.core.vector.Vec3(x, x, x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            return new thi.ng.geom.core.vector.Vec3(cljs.core.get.call(null, x, new cljs.core.Keyword(null, "x", "x", 1013904362), 0), cljs.core.get.call(null, x, new cljs.core.Keyword(null, "y", "y", 1013904363), 0), cljs.core.get.call(null, x, new cljs.core.Keyword(null, "z", "z", 1013904364), 0));
          } else {
            if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
              return thi.ng.common.error.type_error_BANG_.call(null, "Vec3", x);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var vec3__2 = function(x, y) {
    return new thi.ng.geom.core.vector.Vec3(x, y, 0);
  };
  var vec3__3 = function(x, y, z) {
    return new thi.ng.geom.core.vector.Vec3(x, y, z);
  };
  vec3 = function(x, y, z) {
    switch(arguments.length) {
      case 0:
        return vec3__0.call(this);
      case 1:
        return vec3__1.call(this, x);
      case 2:
        return vec3__2.call(this, x, y);
      case 3:
        return vec3__3.call(this, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vec3.cljs$core$IFn$_invoke$arity$0 = vec3__0;
  vec3.cljs$core$IFn$_invoke$arity$1 = vec3__1;
  vec3.cljs$core$IFn$_invoke$arity$2 = vec3__2;
  vec3.cljs$core$IFn$_invoke$arity$3 = vec3__3;
  return vec3;
}();
thi.ng.geom.core.vector.vec2_QMARK_ = function vec2_QMARK_(x) {
  return x instanceof thi.ng.geom.core.vector.Vec2;
};
thi.ng.geom.core.vector.vec3_QMARK_ = function vec3_QMARK_(x) {
  return x instanceof thi.ng.geom.core.vector.Vec3;
};
thi.ng.geom.core.vector.randvec2 = function() {
  var randvec2 = null;
  var randvec2__0 = function() {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec2.call(null, thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null)));
  };
  var randvec2__1 = function(n) {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec2.call(null, thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null)), n);
  };
  randvec2 = function(n) {
    switch(arguments.length) {
      case 0:
        return randvec2__0.call(this);
      case 1:
        return randvec2__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  randvec2.cljs$core$IFn$_invoke$arity$0 = randvec2__0;
  randvec2.cljs$core$IFn$_invoke$arity$1 = randvec2__1;
  return randvec2;
}();
thi.ng.geom.core.vector.randvec3 = function() {
  var randvec3 = null;
  var randvec3__0 = function() {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null)));
  };
  var randvec3__1 = function(n) {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null), thi.ng.common.math.core.randnorm.call(null)), n);
  };
  randvec3 = function(n) {
    switch(arguments.length) {
      case 0:
        return randvec3__0.call(this);
      case 1:
        return randvec3__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  randvec3.cljs$core$IFn$_invoke$arity$0 = randvec3__0;
  randvec3.cljs$core$IFn$_invoke$arity$1 = randvec3__1;
  return randvec3;
}();
thi.ng.geom.core.vector.lookup2 = function lookup2(_, k, nf) {
  var G__7669 = k;
  if (cljs.core._EQ_.call(null, "y", G__7669)) {
    return _.y;
  } else {
    if (cljs.core._EQ_.call(null, "x", G__7669)) {
      return _.x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var or__3481__auto__ = nf;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return thi.ng.common.error.key_error_BANG_.call(null, k);
        }
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.vector.lookup3 = function lookup3(_, k, nf) {
  var G__7671 = k;
  if (cljs.core._EQ_.call(null, "z", G__7671)) {
    return _.z;
  } else {
    if (cljs.core._EQ_.call(null, "y", G__7671)) {
      return _.y;
    } else {
      if (cljs.core._EQ_.call(null, "x", G__7671)) {
        return _.x;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var or__3481__auto__ = nf;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return thi.ng.common.error.key_error_BANG_.call(null, k);
          }
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.vector.swizzle_assoc_STAR_ = function swizzle_assoc_STAR_(_, ctor, keymap, k, v) {
  var n = cljs.core.name.call(null, k);
  var c = cljs.core.count.call(null, n);
  if (c <= cljs.core.count.call(null, keymap) && (c === cljs.core.count.call(null, v) && cljs.core.count.call(null, v) === cljs.core.count.call(null, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, n)))) {
    var acc = cljs.core.vec.call(null, _);
    var i = 0;
    var n__$1 = n;
    while (true) {
      if (cljs.core.truth_(n__$1)) {
        var G__7672 = cljs.core.assoc.call(null, acc, keymap.call(null, cljs.core.first.call(null, n__$1)), v.call(null, i));
        var G__7673 = i + 1;
        var G__7674 = cljs.core.next.call(null, n__$1);
        acc = G__7672;
        i = G__7673;
        n__$1 = G__7674;
        continue;
      } else {
        return ctor.call(null, acc);
      }
      break;
    }
  } else {
    return thi.ng.common.error.key_error_BANG_.call(null, k);
  }
};
thi.ng.geom.core.vector.swizzle2 = function swizzle2(_, k, default$) {
  if (typeof k === "number") {
    var G__7678 = k | 0;
    if (cljs.core._EQ_.call(null, 1, G__7678)) {
      return _.y;
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7678)) {
        return _.x;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var or__3481__auto__ = default$;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return thi.ng.common.error.key_error_BANG_.call(null, k);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    var G__7679 = k;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__7679)) {
      return _.y;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__7679)) {
        return _.x;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var n = cljs.core.name.call(null, k);
          var c = cljs.core.count.call(null, n);
          var G__7680 = c;
          if (cljs.core._EQ_.call(null, 3, G__7680)) {
            return new thi.ng.geom.core.vector.Vec3(thi.ng.geom.core.vector.lookup2.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.vector.lookup2.call(null, _, cljs.core.nth.call(null, n, 1), default$), thi.ng.geom.core.vector.lookup2.call(null, _, cljs.core.nth.call(null, n, 2), default$));
          } else {
            if (cljs.core._EQ_.call(null, 2, G__7680)) {
              return new thi.ng.geom.core.vector.Vec2(thi.ng.geom.core.vector.lookup2.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.vector.lookup2.call(null, _, cljs.core.nth.call(null, n, 1), default$));
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                var or__3481__auto__ = default$;
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  return thi.ng.common.error.key_error_BANG_.call(null, k);
                }
              } else {
                return null;
              }
            }
          }
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.vector.swizzle2_assoc = function swizzle2_assoc(_, k, v) {
  var G__7682 = k;
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "yx", "yx", 1013908113), G__7682)) {
    return new thi.ng.geom.core.vector.Vec2(v.call(null, 1), v.call(null, 0));
  } else {
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "xy", "xy", 1013908083), G__7682)) {
      return new thi.ng.geom.core.vector.Vec2(v.call(null, 0), v.call(null, 1));
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__7682)) {
        return new thi.ng.geom.core.vector.Vec2(_.x, v);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__7682)) {
          return new thi.ng.geom.core.vector.Vec2(v, _.y);
        } else {
          if (cljs.core._EQ_.call(null, 1, G__7682)) {
            return new thi.ng.geom.core.vector.Vec2(_.x, v);
          } else {
            if (cljs.core._EQ_.call(null, 0, G__7682)) {
              return new thi.ng.geom.core.vector.Vec2(v, _.y);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return thi.ng.common.error.key_error_BANG_.call(null, k);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.core.vector.swizzle3 = function swizzle3(_, k, default$) {
  if (typeof k === "number") {
    var G__7686 = k | 0;
    if (cljs.core._EQ_.call(null, 2, G__7686)) {
      return _.z;
    } else {
      if (cljs.core._EQ_.call(null, 1, G__7686)) {
        return _.y;
      } else {
        if (cljs.core._EQ_.call(null, 0, G__7686)) {
          return _.x;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var or__3481__auto__ = default$;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return thi.ng.common.error.key_error_BANG_.call(null, k);
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    var G__7687 = k;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "z", "z", 1013904364), G__7687)) {
      return _.z;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__7687)) {
        return _.y;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__7687)) {
          return _.x;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var n = cljs.core.name.call(null, k);
            var c = cljs.core.count.call(null, n);
            var G__7688 = c;
            if (cljs.core._EQ_.call(null, 3, G__7688)) {
              return new thi.ng.geom.core.vector.Vec3(thi.ng.geom.core.vector.lookup3.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.vector.lookup3.call(null, _, cljs.core.nth.call(null, n, 1), default$), thi.ng.geom.core.vector.lookup3.call(null, _, cljs.core.nth.call(null, n, 2), default$));
            } else {
              if (cljs.core._EQ_.call(null, 2, G__7688)) {
                return new thi.ng.geom.core.vector.Vec2(thi.ng.geom.core.vector.lookup3.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.vector.lookup3.call(null, _, cljs.core.nth.call(null, n, 1), default$));
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  var or__3481__auto__ = default$;
                  if (cljs.core.truth_(or__3481__auto__)) {
                    return or__3481__auto__;
                  } else {
                    return thi.ng.common.error.key_error_BANG_.call(null, k);
                  }
                } else {
                  return null;
                }
              }
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
thi.ng.geom.core.vector.swizzle3_assoc = function swizzle3_assoc(_, k, v) {
  var G__7690 = k;
  if (cljs.core._EQ_.call(null, 2, G__7690)) {
    return new thi.ng.geom.core.vector.Vec3(_.x, _.y, v);
  } else {
    if (cljs.core._EQ_.call(null, 1, G__7690)) {
      return new thi.ng.geom.core.vector.Vec3(_.x, v, _.z);
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7690)) {
        return new thi.ng.geom.core.vector.Vec3(v, _.y, _.z);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "z", "z", 1013904364), G__7690)) {
          return new thi.ng.geom.core.vector.Vec3(_.x, _.y, v);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__7690)) {
            return new thi.ng.geom.core.vector.Vec3(_.x, v, _.z);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__7690)) {
              return new thi.ng.geom.core.vector.Vec3(v, _.y, _.z);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return thi.ng.geom.core.vector.swizzle_assoc_STAR_.call(null, _, thi.ng.geom.core.vector.vec3, new cljs.core.PersistentArrayMap(null, 3, ["x", 0, "y", 1, "z", 2], null), k, v);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
goog.provide("thi.ng.geom.core.utils");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core");
thi.ng.geom.core.utils.closest_point_coeff = function closest_point_coeff(p, a, b) {
  var d = thi.ng.geom.core._.call(null, b, a);
  return thi.ng.geom.core.dot.call(null, thi.ng.geom.core._.call(null, p, a), d) / thi.ng.geom.core.mag_squared.call(null, d);
};
thi.ng.geom.core.utils.closest_point_on_line = function closest_point_on_line(p, a, b) {
  return thi.ng.geom.core.mix.call(null, a, b, thi.ng.geom.core.utils.closest_point_coeff.call(null, p, a, b));
};
thi.ng.geom.core.utils.closest_point_on_segment = function closest_point_on_segment(p, a, b) {
  var t = thi.ng.geom.core.utils.closest_point_coeff.call(null, p, a, b);
  if (t <= 0) {
    return a;
  } else {
    if (t >= 1) {
      return b;
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.geom.core.mix.call(null, a, b, t);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.utils.closest_point_on_segments = function closest_point_on_segments(p, segments) {
  var vec__7318 = cljs.core.map.call(null, function(p1__7316_SHARP_) {
    return cljs.core.apply.call(null, thi.ng.geom.core.utils.closest_point_on_segment, p, p1__7316_SHARP_);
  }, segments);
  var a = cljs.core.nth.call(null, vec__7318, 0, null);
  var more = cljs.core.nthnext.call(null, vec__7318, 1);
  var c = a;
  var d = thi.ng.geom.core.dist_squared.call(null, p, a);
  var more__$1 = more;
  while (true) {
    if (more__$1) {
      var q = cljs.core.first.call(null, more__$1);
      var d_SINGLEQUOTE_ = thi.ng.geom.core.dist_squared.call(null, p, q);
      if (d_SINGLEQUOTE_ < d) {
        var G__7319 = q;
        var G__7320 = d_SINGLEQUOTE_;
        var G__7321 = cljs.core.next.call(null, more__$1);
        c = G__7319;
        d = G__7320;
        more__$1 = G__7321;
        continue;
      } else {
        var G__7322 = c;
        var G__7323 = d;
        var G__7324 = cljs.core.next.call(null, more__$1);
        c = G__7322;
        d = G__7323;
        more__$1 = G__7324;
        continue;
      }
    } else {
      return c;
    }
    break;
  }
};
thi.ng.geom.core.utils.closest_line_between = function closest_line_between(a1, b1, a2, b2) {
  var p43 = thi.ng.geom.core._.call(null, b2, a2);
  if (!thi.ng.common.math.core.delta_EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0], null), p43, thi.ng.common.math.core._STAR_eps_STAR_)) {
    var p21 = thi.ng.geom.core._.call(null, b1, a1);
    if (!thi.ng.common.math.core.delta_EQ_.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0], null), p21, thi.ng.common.math.core._STAR_eps_STAR_)) {
      var p13 = thi.ng.geom.core._.call(null, a1, a2);
      var d1343 = thi.ng.geom.core.dot.call(null, p13, p43);
      var d4321 = thi.ng.geom.core.dot.call(null, p43, p21);
      var d1321 = thi.ng.geom.core.dot.call(null, p13, p21);
      var d4343 = thi.ng.geom.core.dot.call(null, p43, p43);
      var d2121 = thi.ng.geom.core.dot.call(null, p21, p21);
      var d = d2121 * d4343 - d4321 * d4321;
      if (thi.ng.common.math.core.delta_EQ_.call(null, 0, d, thi.ng.common.math.core._STAR_eps_STAR_)) {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "parallel", "parallel", 2185306489)], null);
      } else {
        var n = d1343 * d4321 - d1321 * d4343;
        var ua = n / d;
        var ub = (d4321 * ua + d1343) / d4343;
        return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect", "intersect", 1516918929), new cljs.core.Keyword(null, "a", "a", 1013904339), thi.ng.geom.core.madd.call(null, p21, ua, a1), new cljs.core.Keyword(null, "b", "b", 1013904340), thi.ng.geom.core.madd.call(null, p43, ub, a2), new cljs.core.Keyword(null, "ua", "ua", 1013907966), ua, new cljs.core.Keyword(null, "ub", "ub", 1013907967), ub], null);
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
thi.ng.geom.core.utils.max_dist = function max_dist(c, points) {
  return Math.sqrt.call(null, cljs.core.reduce.call(null, cljs.core.max, cljs.core.map.call(null, function(p1__7325_SHARP_) {
    return thi.ng.geom.core.dist_squared.call(null, c, p1__7325_SHARP_);
  }, points)));
};
thi.ng.geom.core.utils.arc_length_index = function arc_length_index(points) {
  return cljs.core.vec.call(null, cljs.core.reductions.call(null, cljs.core._PLUS_, 0, cljs.core.map.call(null, function(p1__7326_SHARP_) {
    return thi.ng.geom.core.dist.call(null, p1__7326_SHARP_.call(null, 0), p1__7326_SHARP_.call(null, 1));
  }, thi.ng.common.data.core.successive_nth.call(null, 2, points))));
};
thi.ng.geom.core.utils.arc_length = function arc_length(points) {
  return thi.ng.common.data.core.reduce_pairs.call(null, cljs.core._PLUS_, thi.ng.geom.core.dist, points);
};
thi.ng.geom.core.utils.centroid = function centroid(p__7327) {
  var vec__7330 = p__7327;
  var x = cljs.core.nth.call(null, vec__7330, 0, null);
  var xs = cljs.core.nthnext.call(null, vec__7330, 1);
  var coll = vec__7330;
  var G__7331 = cljs.core.count.call(null, coll);
  if (cljs.core._EQ_.call(null, 2, G__7331)) {
    return thi.ng.geom.core.mix.call(null, x, cljs.core.first.call(null, xs));
  } else {
    if (cljs.core._EQ_.call(null, 1, G__7331)) {
      return x;
    } else {
      if (cljs.core._EQ_.call(null, 0, G__7331)) {
        return null;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return thi.ng.geom.core.addm.call(null, x, xs, 1 / cljs.core.count.call(null, coll));
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.core.utils.center = function() {
  var center = null;
  var center__2 = function(c_SINGLEQUOTE_, coll) {
    return center.call(null, thi.ng.geom.core.utils.centroid.call(null, coll), c_SINGLEQUOTE_, coll);
  };
  var center__3 = function(c, c_SINGLEQUOTE_, coll) {
    var d = c_SINGLEQUOTE_ - c;
    return cljs.core.mapv.call(null, function(d) {
      return function(p1__7332_SHARP_) {
        return thi.ng.geom.core._PLUS_.call(null, p1__7332_SHARP_, d);
      };
    }(d), coll);
  };
  center = function(c, c_SINGLEQUOTE_, coll) {
    switch(arguments.length) {
      case 2:
        return center__2.call(this, c, c_SINGLEQUOTE_);
      case 3:
        return center__3.call(this, c, c_SINGLEQUOTE_, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  center.cljs$core$IFn$_invoke$arity$2 = center__2;
  center.cljs$core$IFn$_invoke$arity$3 = center__3;
  return center;
}();
thi.ng.geom.core.utils.scale_size = function() {
  var scale_size = null;
  var scale_size__2 = function(s, coll) {
    return scale_size.call(null, thi.ng.geom.core.utils.centroid.call(null, coll), s, coll);
  };
  var scale_size__3 = function(c, s, coll) {
    return cljs.core.mapv.call(null, function(p1__7333_SHARP_) {
      return thi.ng.geom.core.madd.call(null, thi.ng.geom.core._.call(null, p1__7333_SHARP_, c), s, c);
    }, coll);
  };
  scale_size = function(c, s, coll) {
    switch(arguments.length) {
      case 2:
        return scale_size__2.call(this, c, s);
      case 3:
        return scale_size__3.call(this, c, s, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  scale_size.cljs$core$IFn$_invoke$arity$2 = scale_size__2;
  scale_size.cljs$core$IFn$_invoke$arity$3 = scale_size__3;
  return scale_size;
}();
thi.ng.geom.core.utils.bounds_STAR_ = function bounds_STAR_(f, zero, p__7334) {
  var vec__7336 = p__7334;
  var x = cljs.core.nth.call(null, vec__7336, 0, null);
  var xs = cljs.core.nthnext.call(null, vec__7336, 1);
  var coll = vec__7336;
  var c = cljs.core.count.call(null, coll);
  if (c > 1) {
    var p = f.call(null, cljs.core.min, x, xs);
    var q = f.call(null, cljs.core.max, x, xs);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, thi.ng.geom.core._.call(null, q, p)], null);
  } else {
    if (cljs.core._EQ_.call(null, c, 1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, zero], null);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.utils.bounding_rect = function bounding_rect(points) {
  return thi.ng.geom.core.utils.bounds_STAR_.call(null, thi.ng.geom.core.vector.vec2_op_seq, thi.ng.geom.core.vector.V2, points);
};
thi.ng.geom.core.utils.bounding_box = function bounding_box(points) {
  return thi.ng.geom.core.utils.bounds_STAR_.call(null, thi.ng.geom.core.vector.vec3_op_seq, thi.ng.geom.core.vector.V3, points);
};
thi.ng.geom.core.utils.radial_bounds = function radial_bounds(ctor, c, r_or_points) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctor.call(null, c), cljs.core.coll_QMARK_.call(null, r_or_points) ? thi.ng.geom.core.utils.max_dist.call(null, c, r_or_points) : r_or_points], null);
};
thi.ng.geom.core.utils.axis_bounds = function axis_bounds(axis, coll) {
  var xs = cljs.core.map.call(null, function(p1__7337_SHARP_) {
    return cljs.core.nth.call(null, p1__7337_SHARP_, axis);
  }, coll);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.call(null, cljs.core.min, xs), cljs.core.reduce.call(null, cljs.core.max, xs)], null);
};
thi.ng.geom.core.utils.axis_range = function axis_range(axis, coll) {
  return-cljs.core.apply.call(null, cljs.core._, thi.ng.geom.core.utils.axis_bounds.call(null, axis, coll));
};
thi.ng.geom.core.utils.delta_contains = function delta_contains(points, p, eps) {
  return cljs.core.some.call(null, function(p1__7338_SHARP_) {
    return thi.ng.common.math.core.delta_EQ_.call(null, p, p1__7338_SHARP_, eps);
  }, points);
};
thi.ng.geom.core.utils.from_barycentric = function from_barycentric(points, weights) {
  return cljs.core.reduce.call(null, thi.ng.geom.core._PLUS_, cljs.core.map.call(null, thi.ng.geom.core._STAR_, points, weights));
};
thi.ng.geom.core.utils.point_at_STAR_ = function point_at_STAR_(points, idx, total, t, i) {
  var ct = t * total;
  var i__$1 = function() {
    var i__$1 = i;
    while (true) {
      if (ct >= idx.call(null, i__$1)) {
        var G__7339 = i__$1 + 1;
        i__$1 = G__7339;
        continue;
      } else {
        return i__$1;
      }
      break;
    }
  }() | 0;
  var i1 = i__$1 - 1;
  var pi = idx.call(null, i1);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.mix.call(null, cljs.core.nth.call(null, points, i1), cljs.core.nth.call(null, points, i__$1), (ct - pi) / (idx.call(null, i__$1) - pi)), i__$1], null);
};
thi.ng.geom.core.utils.point_at = function() {
  var point_at = null;
  var point_at__2 = function(t, points) {
    return point_at.call(null, t, points, null);
  };
  var point_at__3 = function(t, points, idx) {
    if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 1, t)) {
      var n = cljs.core.count.call(null, points);
      var t__$1 = t;
      if (0 === n) {
        return null;
      } else {
        if (1 === n) {
          return cljs.core.first.call(null, points);
        } else {
          if (1 === t__$1) {
            return cljs.core.last.call(null, points);
          } else {
            if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
              var idx__$1 = function() {
                var or__3481__auto__ = idx;
                if (cljs.core.truth_(or__3481__auto__)) {
                  return or__3481__auto__;
                } else {
                  return thi.ng.geom.core.utils.arc_length_index.call(null, points);
                }
              }();
              return cljs.core.first.call(null, thi.ng.geom.core.utils.point_at_STAR_.call(null, points, idx__$1, cljs.core.peek.call(null, idx__$1), t__$1, 1));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      return null;
    }
  };
  point_at = function(t, points, idx) {
    switch(arguments.length) {
      case 2:
        return point_at__2.call(this, t, points);
      case 3:
        return point_at__3.call(this, t, points, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  point_at.cljs$core$IFn$_invoke$arity$2 = point_at__2;
  point_at.cljs$core$IFn$_invoke$arity$3 = point_at__3;
  return point_at;
}();
thi.ng.geom.core.utils.sample_uniform_STAR_ = function sample_uniform_STAR_(udist, include_last_QMARK_, points) {
  var idx = thi.ng.geom.core.utils.arc_length_index.call(null, points);
  var total = cljs.core.peek.call(null, idx);
  var delta = udist / total;
  var samples = function() {
    var t = 0;
    var i = 1;
    var acc = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (t < 1) {
        var vec__7341 = thi.ng.geom.core.utils.point_at_STAR_.call(null, points, idx, total, t, i);
        var p = cljs.core.nth.call(null, vec__7341, 0, null);
        var i__$1 = cljs.core.nth.call(null, vec__7341, 1, null);
        var G__7342 = t + delta;
        var G__7343 = i__$1 | 0;
        var G__7344 = cljs.core.conj.call(null, acc, p);
        t = G__7342;
        i = G__7343;
        acc = G__7344;
        continue;
      } else {
        return acc;
      }
      break;
    }
  }();
  if (cljs.core.truth_(include_last_QMARK_)) {
    return cljs.core.conj.call(null, samples, cljs.core.last.call(null, points));
  } else {
    return samples;
  }
};
thi.ng.geom.core.utils.sample_uniform = function sample_uniform(udist, include_last_QMARK_, points) {
  var n = cljs.core.count.call(null, points);
  if (0 === n) {
    return null;
  } else {
    if (1 === n) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, points)], null);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.geom.core.utils.sample_uniform_STAR_.call(null, udist, include_last_QMARK_, points);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.utils.sample_segment_with_res = function sample_segment_with_res(a, b, res, include_b_QMARK_) {
  var ls = function() {
    var iter__4198__auto__ = function iter__7349(s__7350) {
      return new cljs.core.LazySeq(null, function() {
        var s__7350__$1 = s__7350;
        while (true) {
          var temp__4126__auto__ = cljs.core.seq.call(null, s__7350__$1);
          if (temp__4126__auto__) {
            var s__7350__$2 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__7350__$2)) {
              var c__4196__auto__ = cljs.core.chunk_first.call(null, s__7350__$2);
              var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
              var b__7352 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
              if (function() {
                var i__7351 = 0;
                while (true) {
                  if (i__7351 < size__4197__auto__) {
                    var t = cljs.core._nth.call(null, c__4196__auto__, i__7351);
                    cljs.core.chunk_append.call(null, b__7352, thi.ng.geom.core.mix.call(null, a, b, t));
                    var G__7353 = i__7351 + 1;
                    i__7351 = G__7353;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7352), iter__7349.call(null, cljs.core.chunk_rest.call(null, s__7350__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7352), null);
              }
            } else {
              var t = cljs.core.first.call(null, s__7350__$2);
              return cljs.core.cons.call(null, thi.ng.geom.core.mix.call(null, a, b, t), iter__7349.call(null, cljs.core.rest.call(null, s__7350__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4198__auto__.call(null, thi.ng.common.math.core.norm_range.call(null, res));
  }();
  if (cljs.core.truth_(include_b_QMARK_)) {
    return ls;
  } else {
    return cljs.core.butlast.call(null, ls);
  }
};
thi.ng.geom.core.utils.tessellate_with_point = function() {
  var tessellate_with_point = null;
  var tessellate_with_point__1 = function(points) {
    return tessellate_with_point.call(null, thi.ng.geom.core.utils.centroid.call(null, points), points);
  };
  var tessellate_with_point__2 = function(c, points) {
    return cljs.core.map.call(null, function(p1__7354_SHARP_) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, p1__7354_SHARP_.call(null, 0), p1__7354_SHARP_.call(null, 1)], null);
    }, thi.ng.common.data.core.successive_nth.call(null, 2, cljs.core.concat.call(null, points, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, points)], null))));
  };
  tessellate_with_point = function(c, points) {
    switch(arguments.length) {
      case 1:
        return tessellate_with_point__1.call(this, c);
      case 2:
        return tessellate_with_point__2.call(this, c, points);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tessellate_with_point.cljs$core$IFn$_invoke$arity$1 = tessellate_with_point__1;
  tessellate_with_point.cljs$core$IFn$_invoke$arity$2 = tessellate_with_point__2;
  return tessellate_with_point;
}();
thi.ng.geom.core.utils.tessellate_with_first = function tessellate_with_first(points) {
  if (cljs.core.count.call(null, points) > 3) {
    var vec__7358 = points;
    var v0 = cljs.core.nth.call(null, vec__7358, 0, null);
    var more = cljs.core.nthnext.call(null, vec__7358, 1);
    return cljs.core.map.call(null, function(vec__7358, v0, more) {
      return function(p__7359) {
        var vec__7360 = p__7359;
        var a = cljs.core.nth.call(null, vec__7360, 0, null);
        var b = cljs.core.nth.call(null, vec__7360, 1, null);
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [v0, a, b], null);
      };
    }(vec__7358, v0, more), thi.ng.common.data.core.successive_nth.call(null, 2, more));
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);
  }
};
thi.ng.geom.core.utils.tessellate_tri_with_midpoints = function tessellate_tri_with_midpoints(p__7361) {
  var vec__7363 = p__7361;
  var a = cljs.core.nth.call(null, vec__7363, 0, null);
  var b = cljs.core.nth.call(null, vec__7363, 1, null);
  var c = cljs.core.nth.call(null, vec__7363, 2, null);
  var ab = thi.ng.geom.core.mix.call(null, a, b);
  var bc = thi.ng.geom.core.mix.call(null, b, c);
  var ca = thi.ng.geom.core.mix.call(null, c, a);
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, ab, ca], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ab, b, bc], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [bc, c, ca], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ab, bc, ca], null)], 
  null);
};
thi.ng.geom.core.utils.tessellate_3 = function tessellate_3(points) {
  var pred__7368 = cljs.core._EQ_;
  var expr__7369 = cljs.core.count.call(null, points);
  if (cljs.core.truth_(pred__7368.call(null, 3, expr__7369))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);
  } else {
    if (cljs.core.truth_(pred__7368.call(null, 4, expr__7369))) {
      var vec__7371 = points;
      var a = cljs.core.nth.call(null, vec__7371, 0, null);
      var b = cljs.core.nth.call(null, vec__7371, 1, null);
      var c = cljs.core.nth.call(null, vec__7371, 2, null);
      var d = cljs.core.nth.call(null, vec__7371, 3, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, c, d], null)], null);
    } else {
      return thi.ng.geom.core.utils.tessellate_with_point.call(null, points);
    }
  }
};
thi.ng.geom.core.utils.tessellate_max4 = function tessellate_max4(points) {
  if (cljs.core.count.call(null, points) <= 4) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);
  } else {
    return thi.ng.geom.core.utils.tessellate_with_point.call(null, points);
  }
};
thi.ng.geom.core.utils.ortho_normal = function() {
  var ortho_normal = null;
  var ortho_normal__1 = function(p__7372) {
    var vec__7374 = p__7372;
    var a = cljs.core.nth.call(null, vec__7374, 0, null);
    var b = cljs.core.nth.call(null, vec__7374, 1, null);
    var c = cljs.core.nth.call(null, vec__7374, 2, null);
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.cross.call(null, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a)));
  };
  var ortho_normal__2 = function(a, b) {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.cross.call(null, a, b));
  };
  var ortho_normal__3 = function(a, b, c) {
    return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.cross.call(null, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a)));
  };
  ortho_normal = function(a, b, c) {
    switch(arguments.length) {
      case 1:
        return ortho_normal__1.call(this, a);
      case 2:
        return ortho_normal__2.call(this, a, b);
      case 3:
        return ortho_normal__3.call(this, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ortho_normal.cljs$core$IFn$_invoke$arity$1 = ortho_normal__1;
  ortho_normal.cljs$core$IFn$_invoke$arity$2 = ortho_normal__2;
  ortho_normal.cljs$core$IFn$_invoke$arity$3 = ortho_normal__3;
  return ortho_normal;
}();
thi.ng.geom.core.utils.norm_sign2 = function norm_sign2(p__7375, p__7376, p__7377) {
  var vec__7381 = p__7375;
  var ax = cljs.core.nth.call(null, vec__7381, 0, null);
  var ay = cljs.core.nth.call(null, vec__7381, 1, null);
  var vec__7382 = p__7376;
  var bx = cljs.core.nth.call(null, vec__7382, 0, null);
  var by = cljs.core.nth.call(null, vec__7382, 1, null);
  var vec__7383 = p__7377;
  var cx = cljs.core.nth.call(null, vec__7383, 0, null);
  var cy = cljs.core.nth.call(null, vec__7383, 1, null);
  return(bx - ax) * (cy - ay) - (cx - ax) * (by - ay);
};
thi.ng.geom.core.utils.norm_sign3 = function norm_sign3(a, b, c) {
  return thi.ng.geom.core.mag.call(null, thi.ng.geom.core.cross.call(null, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a)));
};
thi.ng.geom.core.utils.tri_area2 = function tri_area2(a, b, c) {
  return 0.5 * thi.ng.geom.core.utils.norm_sign2.call(null, a, b, c);
};
thi.ng.geom.core.utils.tri_area3 = function tri_area3(a, b, c) {
  return 0.5 * thi.ng.geom.core.utils.norm_sign3.call(null, a, b, c);
};
thi.ng.geom.core.utils.clockwise2_QMARK_ = function clockwise2_QMARK_(a, b, c) {
  return thi.ng.geom.core.utils.norm_sign2.call(null, a, b, c) < 0;
};
thi.ng.geom.core.utils.clockwise3_QMARK_ = function clockwise3_QMARK_(a, b, c, n) {
  return thi.ng.geom.core.dot.call(null, thi.ng.geom.core.cross.call(null, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a)), n) > 0;
};
thi.ng.geom.core.utils.triangle_barycentric_coords = function() {
  var triangle_barycentric_coords = null;
  var triangle_barycentric_coords__2 = function(p__7384, p) {
    var vec__7386 = p__7384;
    var a = cljs.core.nth.call(null, vec__7386, 0, null);
    var b = cljs.core.nth.call(null, vec__7386, 1, null);
    var c = cljs.core.nth.call(null, vec__7386, 2, null);
    return triangle_barycentric_coords.call(null, a, b, c, p, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a));
  };
  var triangle_barycentric_coords__4 = function(a, b, c, p) {
    return triangle_barycentric_coords.call(null, a, b, c, p, thi.ng.geom.core._.call(null, b, a), thi.ng.geom.core._.call(null, c, a));
  };
  var triangle_barycentric_coords__6 = function(a, b, c, p, u, v) {
    var w = thi.ng.geom.core._.call(null, p, a);
    var uu = thi.ng.geom.core.mag_squared.call(null, u);
    var vv = thi.ng.geom.core.mag_squared.call(null, v);
    var uv = thi.ng.geom.core.dot.call(null, u, v);
    var wu = thi.ng.geom.core.dot.call(null, w, u);
    var wv = thi.ng.geom.core.dot.call(null, w, v);
    var denom = 1 / (uv * uv - uu * vv);
    var s = denom * (uv * wv - vv * wu);
    var t = denom * (uv * wu - uu * wv);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1 - (s + t), s, t], null);
  };
  triangle_barycentric_coords = function(a, b, c, p, u, v) {
    switch(arguments.length) {
      case 2:
        return triangle_barycentric_coords__2.call(this, a, b);
      case 4:
        return triangle_barycentric_coords__4.call(this, a, b, c, p);
      case 6:
        return triangle_barycentric_coords__6.call(this, a, b, c, p, u, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$2 = triangle_barycentric_coords__2;
  triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$4 = triangle_barycentric_coords__4;
  triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6 = triangle_barycentric_coords__6;
  return triangle_barycentric_coords;
}();
thi.ng.geom.core.utils.point_in_triangle2_QMARK_ = function point_in_triangle2_QMARK_(p, a, b, c) {
  if (thi.ng.geom.core.utils.clockwise2_QMARK_.call(null, a, b, c)) {
    return thi.ng.geom.core.utils.norm_sign2.call(null, a, c, p) >= 0 && (thi.ng.geom.core.utils.norm_sign2.call(null, b, a, p) >= 0 && thi.ng.geom.core.utils.norm_sign2.call(null, c, b, p) >= 0);
  } else {
    return thi.ng.geom.core.utils.norm_sign2.call(null, b, c, p) >= 0 && (thi.ng.geom.core.utils.norm_sign2.call(null, a, b, p) >= 0 && thi.ng.geom.core.utils.norm_sign2.call(null, c, a, p) >= 0);
  }
};
thi.ng.geom.core.utils.point_in_triangle3_QMARK_ = function point_in_triangle3_QMARK_(p, a, b, c) {
  var u = thi.ng.geom.core._.call(null, b, a);
  var v = thi.ng.geom.core._.call(null, c, a);
  var n = thi.ng.geom.core.utils.ortho_normal.call(null, u, v);
  var cl = thi.ng.geom.core.dot.call(null, n, p) - thi.ng.geom.core.dot.call(null, n, a);
  if (thi.ng.common.math.core.delta_EQ_.call(null, 0, cl)) {
    var vec__7388 = thi.ng.geom.core.utils.triangle_barycentric_coords.call(null, a, b, c, p, u, v);
    var u__$1 = cljs.core.nth.call(null, vec__7388, 0, null);
    var v__$1 = cljs.core.nth.call(null, vec__7388, 1, null);
    var w = cljs.core.nth.call(null, vec__7388, 2, null);
    return u__$1 >= 0 && (w >= 0 && thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 1, v__$1));
  } else {
    return null;
  }
};
goog.provide("thi.ng.geom.types");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
thi.ng.geom.types.Graph = function(vertices, edges, __meta, __extmap) {
  this.vertices = vertices;
  this.edges = edges;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Graph.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7692, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7692, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219))) {
    return self__.vertices;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7692, new cljs.core.Keyword(null, "edges", "edges", 1110261192))) {
      return self__.edges;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7692, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Graph{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null)], null), self__.__extmap));
};
thi.ng.geom.types.Graph.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Graph.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Graph(self__.vertices, self__.edges, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Graph.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Graph.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), null, new cljs.core.Keyword(null, "edges", "edges", 1110261192), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Graph(self__.vertices, self__.edges, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7691) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7694 = cljs.core.keyword_identical_QMARK_;
  var expr__7695 = k__4075__auto__;
  if (cljs.core.truth_(pred__7694.call(null, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), expr__7695))) {
    return new thi.ng.geom.types.Graph(G__7691, self__.edges, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7694.call(null, new cljs.core.Keyword(null, "edges", "edges", 1110261192), expr__7695))) {
      return new thi.ng.geom.types.Graph(self__.vertices, G__7691, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.Graph(self__.vertices, self__.edges, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7691), null);
    }
  }
};
thi.ng.geom.types.Graph.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null)], null), self__.__extmap));
};
thi.ng.geom.types.Graph.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7691) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Graph(self__.vertices, self__.edges, G__7691, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Graph.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Graph.cljs$lang$type = true;
thi.ng.geom.types.Graph.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Graph");
};
thi.ng.geom.types.Graph.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Graph");
};
thi.ng.geom.types.__GT_Graph = function __GT_Graph(vertices, edges) {
  return new thi.ng.geom.types.Graph(vertices, edges);
};
thi.ng.geom.types.map__GT_Graph = function map__GT_Graph(G__7693) {
  return new thi.ng.geom.types.Graph((new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(G__7693), (new cljs.core.Keyword(null, "edges", "edges", 1110261192)).cljs$core$IFn$_invoke$arity$1(G__7693), null, cljs.core.dissoc.call(null, G__7693, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), new cljs.core.Keyword(null, "edges", "edges", 1110261192)));
};
thi.ng.geom.types.Bezier2 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7698, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7698, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7698, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Bezier2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Bezier2(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Bezier2(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7697) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7700 = cljs.core.keyword_identical_QMARK_;
  var expr__7701 = k__4075__auto__;
  if (cljs.core.truth_(pred__7700.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7701))) {
    return new thi.ng.geom.types.Bezier2(G__7697, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Bezier2(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7697), null);
  }
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7697) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Bezier2(self__.points, G__7697, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Bezier2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Bezier2.cljs$lang$type = true;
thi.ng.geom.types.Bezier2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Bezier2");
};
thi.ng.geom.types.Bezier2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Bezier2");
};
thi.ng.geom.types.__GT_Bezier2 = function __GT_Bezier2(points) {
  return new thi.ng.geom.types.Bezier2(points);
};
thi.ng.geom.types.map__GT_Bezier2 = function map__GT_Bezier2(G__7699) {
  return new thi.ng.geom.types.Bezier2((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7699), null, cljs.core.dissoc.call(null, G__7699, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Circle2 = function(p, r, __meta, __extmap) {
  this.p = p;
  this.r = r;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7704, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7704, new cljs.core.Keyword(null, "p", "p", 1013904354))) {
    return self__.p;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7704, new cljs.core.Keyword(null, "r", "r", 1013904356))) {
      return self__.r;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7704, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Circle2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "r", "r", 1013904356), self__.r], null)], null), self__.__extmap));
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Circle2(self__.p, self__.r, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "r", "r", 1013904356), null, new cljs.core.Keyword(null, "p", "p", 1013904354), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Circle2(self__.p, self__.r, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7703) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7706 = cljs.core.keyword_identical_QMARK_;
  var expr__7707 = k__4075__auto__;
  if (cljs.core.truth_(pred__7706.call(null, new cljs.core.Keyword(null, "p", "p", 1013904354), expr__7707))) {
    return new thi.ng.geom.types.Circle2(G__7703, self__.r, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7706.call(null, new cljs.core.Keyword(null, "r", "r", 1013904356), expr__7707))) {
      return new thi.ng.geom.types.Circle2(self__.p, G__7703, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.Circle2(self__.p, self__.r, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7703), null);
    }
  }
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "r", "r", 1013904356), self__.r], null)], null), self__.__extmap));
};
thi.ng.geom.types.Circle2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7703) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Circle2(self__.p, self__.r, G__7703, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Circle2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Circle2.cljs$lang$type = true;
thi.ng.geom.types.Circle2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Circle2");
};
thi.ng.geom.types.Circle2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Circle2");
};
thi.ng.geom.types.__GT_Circle2 = function __GT_Circle2(p, r) {
  return new thi.ng.geom.types.Circle2(p, r);
};
thi.ng.geom.types.map__GT_Circle2 = function map__GT_Circle2(G__7705) {
  return new thi.ng.geom.types.Circle2((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(G__7705), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(G__7705), null, cljs.core.dissoc.call(null, G__7705, new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "r", "r", 1013904356)));
};
thi.ng.geom.types.Ellipse2 = function(p, rx, ry, __meta, __extmap) {
  this.p = p;
  this.rx = rx;
  this.ry = ry;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7710, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7710, new cljs.core.Keyword(null, "p", "p", 1013904354))) {
    return self__.p;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7710, new cljs.core.Keyword(null, "rx", "rx", 1013907896))) {
      return self__.rx;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k7710, new cljs.core.Keyword(null, "ry", "ry", 1013907897))) {
        return self__.ry;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k7710, else__4070__auto__);
        } else {
          return null;
        }
      }
    }
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Ellipse2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rx", "rx", 1013907896), self__.rx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ry", "ry", 1013907897), self__.ry], null)], null), self__.__extmap));
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Ellipse2(self__.p, self__.rx, self__.ry, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "rx", "rx", 1013907896), null, new cljs.core.Keyword(null, "p", "p", 1013904354), null, new cljs.core.Keyword(null, "ry", "ry", 1013907897), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Ellipse2(self__.p, self__.rx, self__.ry, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7709) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7712 = cljs.core.keyword_identical_QMARK_;
  var expr__7713 = k__4075__auto__;
  if (cljs.core.truth_(pred__7712.call(null, new cljs.core.Keyword(null, "p", "p", 1013904354), expr__7713))) {
    return new thi.ng.geom.types.Ellipse2(G__7709, self__.rx, self__.ry, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7712.call(null, new cljs.core.Keyword(null, "rx", "rx", 1013907896), expr__7713))) {
      return new thi.ng.geom.types.Ellipse2(self__.p, G__7709, self__.ry, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7712.call(null, new cljs.core.Keyword(null, "ry", "ry", 1013907897), expr__7713))) {
        return new thi.ng.geom.types.Ellipse2(self__.p, self__.rx, G__7709, self__.__meta, self__.__extmap, null);
      } else {
        return new thi.ng.geom.types.Ellipse2(self__.p, self__.rx, self__.ry, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7709), null);
      }
    }
  }
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rx", "rx", 1013907896), self__.rx], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "ry", "ry", 1013907897), self__.ry], null)], null), self__.__extmap));
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7709) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Ellipse2(self__.p, self__.rx, self__.ry, G__7709, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Ellipse2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Ellipse2.cljs$lang$type = true;
thi.ng.geom.types.Ellipse2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Ellipse2");
};
thi.ng.geom.types.Ellipse2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Ellipse2");
};
thi.ng.geom.types.__GT_Ellipse2 = function __GT_Ellipse2(p, rx, ry) {
  return new thi.ng.geom.types.Ellipse2(p, rx, ry);
};
thi.ng.geom.types.map__GT_Ellipse2 = function map__GT_Ellipse2(G__7711) {
  return new thi.ng.geom.types.Ellipse2((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(G__7711), (new cljs.core.Keyword(null, "rx", "rx", 1013907896)).cljs$core$IFn$_invoke$arity$1(G__7711), (new cljs.core.Keyword(null, "ry", "ry", 1013907897)).cljs$core$IFn$_invoke$arity$1(G__7711), null, cljs.core.dissoc.call(null, G__7711, new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "rx", "rx", 1013907896), new cljs.core.Keyword(null, "ry", 
  "ry", 1013907897)));
};
thi.ng.geom.types.Line2 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Line2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7716, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7716, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7716, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Line2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Line2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Line2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Line2(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Line2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Line2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Line2(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7715) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7718 = cljs.core.keyword_identical_QMARK_;
  var expr__7719 = k__4075__auto__;
  if (cljs.core.truth_(pred__7718.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7719))) {
    return new thi.ng.geom.types.Line2(G__7715, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Line2(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7715), null);
  }
};
thi.ng.geom.types.Line2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Line2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7715) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Line2(self__.points, G__7715, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Line2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Line2.cljs$lang$type = true;
thi.ng.geom.types.Line2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Line2");
};
thi.ng.geom.types.Line2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Line2");
};
thi.ng.geom.types.__GT_Line2 = function __GT_Line2(points) {
  return new thi.ng.geom.types.Line2(points);
};
thi.ng.geom.types.map__GT_Line2 = function map__GT_Line2(G__7717) {
  return new thi.ng.geom.types.Line2((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7717), null, cljs.core.dissoc.call(null, G__7717, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.LineStrip2 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7722, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7722, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7722, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.LineStrip2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.LineStrip2(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.LineStrip2(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7721) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7724 = cljs.core.keyword_identical_QMARK_;
  var expr__7725 = k__4075__auto__;
  if (cljs.core.truth_(pred__7724.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7725))) {
    return new thi.ng.geom.types.LineStrip2(G__7721, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.LineStrip2(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7721), null);
  }
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7721) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.LineStrip2(self__.points, G__7721, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.LineStrip2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.LineStrip2.cljs$lang$type = true;
thi.ng.geom.types.LineStrip2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/LineStrip2");
};
thi.ng.geom.types.LineStrip2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/LineStrip2");
};
thi.ng.geom.types.__GT_LineStrip2 = function __GT_LineStrip2(points) {
  return new thi.ng.geom.types.LineStrip2(points);
};
thi.ng.geom.types.map__GT_LineStrip2 = function map__GT_LineStrip2(G__7723) {
  return new thi.ng.geom.types.LineStrip2((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7723), null, cljs.core.dissoc.call(null, G__7723, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Mesh2 = function(vertices, normals, fnormals, vnormals, edges, faces, attribs, __meta, __extmap) {
  this.vertices = vertices;
  this.normals = normals;
  this.fnormals = fnormals;
  this.vnormals = vnormals;
  this.edges = edges;
  this.faces = faces;
  this.attribs = attribs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7728, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219))) {
    return self__.vertices;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "normals", "normals", 3141522398))) {
      return self__.normals;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136))) {
        return self__.fnormals;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720))) {
          return self__.vnormals;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "edges", "edges", 1110261192))) {
            return self__.edges;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "faces", "faces", 1111091496))) {
              return self__.faces;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, k7728, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563))) {
                return self__.attribs;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k7728, else__4070__auto__);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Mesh2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), null, new cljs.core.Keyword(null, "edges", 
  "edges", 1110261192), null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7727) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7730 = cljs.core.keyword_identical_QMARK_;
  var expr__7731 = k__4075__auto__;
  if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), expr__7731))) {
    return new thi.ng.geom.types.Mesh2(G__7727, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), expr__7731))) {
      return new thi.ng.geom.types.Mesh2(self__.vertices, G__7727, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), expr__7731))) {
        return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, G__7727, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), expr__7731))) {
          return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, G__7727, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "edges", "edges", 1110261192), expr__7731))) {
            return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, G__7727, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), expr__7731))) {
              return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, G__7727, self__.attribs, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__7730.call(null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), expr__7731))) {
                return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, G__7727, self__.__meta, self__.__extmap, null);
              } else {
                return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7727), null);
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7727) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Mesh2(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, G__7727, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Mesh2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Mesh2.cljs$lang$type = true;
thi.ng.geom.types.Mesh2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Mesh2");
};
thi.ng.geom.types.Mesh2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Mesh2");
};
thi.ng.geom.types.__GT_Mesh2 = function __GT_Mesh2(vertices, normals, fnormals, vnormals, edges, faces, attribs) {
  return new thi.ng.geom.types.Mesh2(vertices, normals, fnormals, vnormals, edges, faces, attribs);
};
thi.ng.geom.types.map__GT_Mesh2 = function map__GT_Mesh2(G__7729) {
  return new thi.ng.geom.types.Mesh2((new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "normals", "normals", 3141522398)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "edges", "edges", 
  1110261192)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(G__7729), (new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)).cljs$core$IFn$_invoke$arity$1(G__7729), null, cljs.core.dissoc.call(null, G__7729, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), new cljs.core.Keyword(null, "normals", "normals", 3141522398), new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), new cljs.core.Keyword(null, 
  "vnormals", "vnormals", 2634711720), new cljs.core.Keyword(null, "edges", "edges", 1110261192), new cljs.core.Keyword(null, "faces", "faces", 1111091496), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)));
};
thi.ng.geom.types.Path2 = function(segments, __meta, __extmap) {
  this.segments = segments;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Path2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7734, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7734, new cljs.core.Keyword(null, "segments", "segments", 2069773074))) {
    return self__.segments;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7734, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Path2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "segments", "segments", 2069773074), self__.segments], null)], null), self__.__extmap));
};
thi.ng.geom.types.Path2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Path2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Path2(self__.segments, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Path2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Path2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "segments", "segments", 2069773074), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Path2(self__.segments, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7733) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7736 = cljs.core.keyword_identical_QMARK_;
  var expr__7737 = k__4075__auto__;
  if (cljs.core.truth_(pred__7736.call(null, new cljs.core.Keyword(null, "segments", "segments", 2069773074), expr__7737))) {
    return new thi.ng.geom.types.Path2(G__7733, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Path2(self__.segments, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7733), null);
  }
};
thi.ng.geom.types.Path2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "segments", "segments", 2069773074), self__.segments], null)], null), self__.__extmap));
};
thi.ng.geom.types.Path2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7733) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Path2(self__.segments, G__7733, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Path2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Path2.cljs$lang$type = true;
thi.ng.geom.types.Path2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Path2");
};
thi.ng.geom.types.Path2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Path2");
};
thi.ng.geom.types.__GT_Path2 = function __GT_Path2(segments) {
  return new thi.ng.geom.types.Path2(segments);
};
thi.ng.geom.types.map__GT_Path2 = function map__GT_Path2(G__7735) {
  return new thi.ng.geom.types.Path2((new cljs.core.Keyword(null, "segments", "segments", 2069773074)).cljs$core$IFn$_invoke$arity$1(G__7735), null, cljs.core.dissoc.call(null, G__7735, new cljs.core.Keyword(null, "segments", "segments", 2069773074)));
};
thi.ng.geom.types.Polygon2 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7740, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7740, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7740, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Polygon2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Polygon2(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Polygon2(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7739) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7742 = cljs.core.keyword_identical_QMARK_;
  var expr__7743 = k__4075__auto__;
  if (cljs.core.truth_(pred__7742.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7743))) {
    return new thi.ng.geom.types.Polygon2(G__7739, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Polygon2(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7739), null);
  }
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7739) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Polygon2(self__.points, G__7739, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Polygon2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Polygon2.cljs$lang$type = true;
thi.ng.geom.types.Polygon2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Polygon2");
};
thi.ng.geom.types.Polygon2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Polygon2");
};
thi.ng.geom.types.__GT_Polygon2 = function __GT_Polygon2(points) {
  return new thi.ng.geom.types.Polygon2(points);
};
thi.ng.geom.types.map__GT_Polygon2 = function map__GT_Polygon2(G__7741) {
  return new thi.ng.geom.types.Polygon2((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7741), null, cljs.core.dissoc.call(null, G__7741, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Rect2 = function(p, size, __meta, __extmap) {
  this.p = p;
  this.size = size;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7746, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7746, new cljs.core.Keyword(null, "p", "p", 1013904354))) {
    return self__.p;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7746, new cljs.core.Keyword(null, "size", "size", 1017434995))) {
      return self__.size;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7746, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Rect2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "size", "size", 1017434995), self__.size], null)], null), self__.__extmap));
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Rect2(self__.p, self__.size, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), null, new cljs.core.Keyword(null, "p", "p", 1013904354), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Rect2(self__.p, self__.size, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7745) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7748 = cljs.core.keyword_identical_QMARK_;
  var expr__7749 = k__4075__auto__;
  if (cljs.core.truth_(pred__7748.call(null, new cljs.core.Keyword(null, "p", "p", 1013904354), expr__7749))) {
    return new thi.ng.geom.types.Rect2(G__7745, self__.size, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7748.call(null, new cljs.core.Keyword(null, "size", "size", 1017434995), expr__7749))) {
      return new thi.ng.geom.types.Rect2(self__.p, G__7745, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.Rect2(self__.p, self__.size, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7745), null);
    }
  }
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "size", "size", 1017434995), self__.size], null)], null), self__.__extmap));
};
thi.ng.geom.types.Rect2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7745) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Rect2(self__.p, self__.size, G__7745, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Rect2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Rect2.cljs$lang$type = true;
thi.ng.geom.types.Rect2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Rect2");
};
thi.ng.geom.types.Rect2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Rect2");
};
thi.ng.geom.types.__GT_Rect2 = function __GT_Rect2(p, size) {
  return new thi.ng.geom.types.Rect2(p, size);
};
thi.ng.geom.types.map__GT_Rect2 = function map__GT_Rect2(G__7747) {
  return new thi.ng.geom.types.Rect2((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(G__7747), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(G__7747), null, cljs.core.dissoc.call(null, G__7747, new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "size", "size", 1017434995)));
};
thi.ng.geom.types.Triangle2 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7752, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7752, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7752, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Triangle2{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Triangle2(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Triangle2(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7751) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7754 = cljs.core.keyword_identical_QMARK_;
  var expr__7755 = k__4075__auto__;
  if (cljs.core.truth_(pred__7754.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7755))) {
    return new thi.ng.geom.types.Triangle2(G__7751, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Triangle2(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7751), null);
  }
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7751) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Triangle2(self__.points, G__7751, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Triangle2.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Triangle2.cljs$lang$type = true;
thi.ng.geom.types.Triangle2.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Triangle2");
};
thi.ng.geom.types.Triangle2.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Triangle2");
};
thi.ng.geom.types.__GT_Triangle2 = function __GT_Triangle2(points) {
  return new thi.ng.geom.types.Triangle2(points);
};
thi.ng.geom.types.map__GT_Triangle2 = function map__GT_Triangle2(G__7753) {
  return new thi.ng.geom.types.Triangle2((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7753), null, cljs.core.dissoc.call(null, G__7753, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.AABB = function(p, size, __meta, __extmap) {
  this.p = p;
  this.size = size;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.AABB.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7758, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7758, new cljs.core.Keyword(null, "p", "p", 1013904354))) {
    return self__.p;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7758, new cljs.core.Keyword(null, "size", "size", 1017434995))) {
      return self__.size;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7758, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.AABB{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "size", "size", 1017434995), self__.size], null)], null), self__.__extmap));
};
thi.ng.geom.types.AABB.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.AABB.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.AABB(self__.p, self__.size, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.AABB.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.AABB.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "size", "size", 1017434995), null, new cljs.core.Keyword(null, "p", "p", 1013904354), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.AABB(self__.p, self__.size, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7757) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7760 = cljs.core.keyword_identical_QMARK_;
  var expr__7761 = k__4075__auto__;
  if (cljs.core.truth_(pred__7760.call(null, new cljs.core.Keyword(null, "p", "p", 1013904354), expr__7761))) {
    return new thi.ng.geom.types.AABB(G__7757, self__.size, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7760.call(null, new cljs.core.Keyword(null, "size", "size", 1017434995), expr__7761))) {
      return new thi.ng.geom.types.AABB(self__.p, G__7757, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.AABB(self__.p, self__.size, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7757), null);
    }
  }
};
thi.ng.geom.types.AABB.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "size", "size", 1017434995), self__.size], null)], null), self__.__extmap));
};
thi.ng.geom.types.AABB.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7757) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.AABB(self__.p, self__.size, G__7757, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.AABB.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.AABB.cljs$lang$type = true;
thi.ng.geom.types.AABB.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/AABB");
};
thi.ng.geom.types.AABB.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/AABB");
};
thi.ng.geom.types.__GT_AABB = function __GT_AABB(p, size) {
  return new thi.ng.geom.types.AABB(p, size);
};
thi.ng.geom.types.map__GT_AABB = function map__GT_AABB(G__7759) {
  return new thi.ng.geom.types.AABB((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(G__7759), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(G__7759), null, cljs.core.dissoc.call(null, G__7759, new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "size", "size", 1017434995)));
};
thi.ng.geom.types.Cuboid = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7764, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7764, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7764, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Cuboid{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Cuboid(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Cuboid(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7763) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7766 = cljs.core.keyword_identical_QMARK_;
  var expr__7767 = k__4075__auto__;
  if (cljs.core.truth_(pred__7766.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7767))) {
    return new thi.ng.geom.types.Cuboid(G__7763, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Cuboid(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7763), null);
  }
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7763) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Cuboid(self__.points, G__7763, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Cuboid.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Cuboid.cljs$lang$type = true;
thi.ng.geom.types.Cuboid.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Cuboid");
};
thi.ng.geom.types.Cuboid.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Cuboid");
};
thi.ng.geom.types.__GT_Cuboid = function __GT_Cuboid(points) {
  return new thi.ng.geom.types.Cuboid(points);
};
thi.ng.geom.types.map__GT_Cuboid = function map__GT_Cuboid(G__7765) {
  return new thi.ng.geom.types.Cuboid((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7765), null, cljs.core.dissoc.call(null, G__7765, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Bezier3 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7770, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7770, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7770, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Bezier3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Bezier3(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Bezier3(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7769) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7772 = cljs.core.keyword_identical_QMARK_;
  var expr__7773 = k__4075__auto__;
  if (cljs.core.truth_(pred__7772.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7773))) {
    return new thi.ng.geom.types.Bezier3(G__7769, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Bezier3(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7769), null);
  }
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7769) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Bezier3(self__.points, G__7769, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Bezier3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Bezier3.cljs$lang$type = true;
thi.ng.geom.types.Bezier3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Bezier3");
};
thi.ng.geom.types.Bezier3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Bezier3");
};
thi.ng.geom.types.__GT_Bezier3 = function __GT_Bezier3(points) {
  return new thi.ng.geom.types.Bezier3(points);
};
thi.ng.geom.types.map__GT_Bezier3 = function map__GT_Bezier3(G__7771) {
  return new thi.ng.geom.types.Bezier3((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7771), null, cljs.core.dissoc.call(null, G__7771, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.GMesh = function(vertices, normals, fnormals, vnormals, edges, faces, attribs, __meta, __extmap) {
  this.vertices = vertices;
  this.normals = normals;
  this.fnormals = fnormals;
  this.vnormals = vnormals;
  this.edges = edges;
  this.faces = faces;
  this.attribs = attribs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7776, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219))) {
    return self__.vertices;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "normals", "normals", 3141522398))) {
      return self__.normals;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136))) {
        return self__.fnormals;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720))) {
          return self__.vnormals;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "edges", "edges", 1110261192))) {
            return self__.edges;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "faces", "faces", 1111091496))) {
              return self__.faces;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, k7776, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563))) {
                return self__.attribs;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k7776, else__4070__auto__);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.GMesh{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), null, new cljs.core.Keyword(null, "edges", 
  "edges", 1110261192), null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7775) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7778 = cljs.core.keyword_identical_QMARK_;
  var expr__7779 = k__4075__auto__;
  if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), expr__7779))) {
    return new thi.ng.geom.types.GMesh(G__7775, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), expr__7779))) {
      return new thi.ng.geom.types.GMesh(self__.vertices, G__7775, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), expr__7779))) {
        return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, G__7775, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), expr__7779))) {
          return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, G__7775, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "edges", "edges", 1110261192), expr__7779))) {
            return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, G__7775, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), expr__7779))) {
              return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, G__7775, self__.attribs, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__7778.call(null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), expr__7779))) {
                return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, G__7775, self__.__meta, self__.__extmap, null);
              } else {
                return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7775), null);
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.GMesh.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7775) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.GMesh(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, G__7775, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.GMesh.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.GMesh.cljs$lang$type = true;
thi.ng.geom.types.GMesh.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/GMesh");
};
thi.ng.geom.types.GMesh.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/GMesh");
};
thi.ng.geom.types.__GT_GMesh = function __GT_GMesh(vertices, normals, fnormals, vnormals, edges, faces, attribs) {
  return new thi.ng.geom.types.GMesh(vertices, normals, fnormals, vnormals, edges, faces, attribs);
};
thi.ng.geom.types.map__GT_GMesh = function map__GT_GMesh(G__7777) {
  return new thi.ng.geom.types.GMesh((new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "normals", "normals", 3141522398)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "edges", "edges", 
  1110261192)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(G__7777), (new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)).cljs$core$IFn$_invoke$arity$1(G__7777), null, cljs.core.dissoc.call(null, G__7777, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), new cljs.core.Keyword(null, "normals", "normals", 3141522398), new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), new cljs.core.Keyword(null, 
  "vnormals", "vnormals", 2634711720), new cljs.core.Keyword(null, "edges", "edges", 1110261192), new cljs.core.Keyword(null, "faces", "faces", 1111091496), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)));
};
thi.ng.geom.types.Line3 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Line3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7782, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7782, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7782, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Line3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Line3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Line3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Line3(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Line3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Line3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Line3(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7781) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7784 = cljs.core.keyword_identical_QMARK_;
  var expr__7785 = k__4075__auto__;
  if (cljs.core.truth_(pred__7784.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7785))) {
    return new thi.ng.geom.types.Line3(G__7781, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Line3(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7781), null);
  }
};
thi.ng.geom.types.Line3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Line3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7781) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Line3(self__.points, G__7781, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Line3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Line3.cljs$lang$type = true;
thi.ng.geom.types.Line3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Line3");
};
thi.ng.geom.types.Line3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Line3");
};
thi.ng.geom.types.__GT_Line3 = function __GT_Line3(points) {
  return new thi.ng.geom.types.Line3(points);
};
thi.ng.geom.types.map__GT_Line3 = function map__GT_Line3(G__7783) {
  return new thi.ng.geom.types.Line3((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7783), null, cljs.core.dissoc.call(null, G__7783, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.LineStrip3 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7788, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7788, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7788, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.LineStrip3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.LineStrip3(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.LineStrip3(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7787) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7790 = cljs.core.keyword_identical_QMARK_;
  var expr__7791 = k__4075__auto__;
  if (cljs.core.truth_(pred__7790.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7791))) {
    return new thi.ng.geom.types.LineStrip3(G__7787, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.LineStrip3(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7787), null);
  }
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7787) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.LineStrip3(self__.points, G__7787, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.LineStrip3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.LineStrip3.cljs$lang$type = true;
thi.ng.geom.types.LineStrip3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/LineStrip3");
};
thi.ng.geom.types.LineStrip3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/LineStrip3");
};
thi.ng.geom.types.__GT_LineStrip3 = function __GT_LineStrip3(points) {
  return new thi.ng.geom.types.LineStrip3(points);
};
thi.ng.geom.types.map__GT_LineStrip3 = function map__GT_LineStrip3(G__7789) {
  return new thi.ng.geom.types.LineStrip3((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7789), null, cljs.core.dissoc.call(null, G__7789, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Mesh3 = function(vertices, normals, fnormals, vnormals, edges, faces, attribs, __meta, __extmap) {
  this.vertices = vertices;
  this.normals = normals;
  this.fnormals = fnormals;
  this.vnormals = vnormals;
  this.edges = edges;
  this.faces = faces;
  this.attribs = attribs;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7794, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219))) {
    return self__.vertices;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "normals", "normals", 3141522398))) {
      return self__.normals;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136))) {
        return self__.fnormals;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720))) {
          return self__.vnormals;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "edges", "edges", 1110261192))) {
            return self__.edges;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "faces", "faces", 1111091496))) {
              return self__.faces;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, k7794, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563))) {
                return self__.attribs;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k7794, else__4070__auto__);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Mesh3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), null, new cljs.core.Keyword(null, "edges", 
  "edges", 1110261192), null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7793) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7796 = cljs.core.keyword_identical_QMARK_;
  var expr__7797 = k__4075__auto__;
  if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), expr__7797))) {
    return new thi.ng.geom.types.Mesh3(G__7793, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "normals", "normals", 3141522398), expr__7797))) {
      return new thi.ng.geom.types.Mesh3(self__.vertices, G__7793, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), expr__7797))) {
        return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, G__7793, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), expr__7797))) {
          return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, G__7793, self__.edges, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "edges", "edges", 1110261192), expr__7797))) {
            return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, G__7793, self__.faces, self__.attribs, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "faces", "faces", 1111091496), expr__7797))) {
              return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, G__7793, self__.attribs, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__7796.call(null, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), expr__7797))) {
                return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, G__7793, self__.__meta, self__.__extmap, null);
              } else {
                return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7793), null);
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), self__.vertices], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "normals", "normals", 3141522398), self__.normals], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), self__.fnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), self__.vnormals], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "edges", "edges", 1110261192), self__.edges], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "faces", "faces", 1111091496), self__.faces], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), self__.attribs], null)], null), self__.__extmap));
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7793) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Mesh3(self__.vertices, self__.normals, self__.fnormals, self__.vnormals, self__.edges, self__.faces, self__.attribs, G__7793, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Mesh3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Mesh3.cljs$lang$type = true;
thi.ng.geom.types.Mesh3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Mesh3");
};
thi.ng.geom.types.Mesh3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Mesh3");
};
thi.ng.geom.types.__GT_Mesh3 = function __GT_Mesh3(vertices, normals, fnormals, vnormals, edges, faces, attribs) {
  return new thi.ng.geom.types.Mesh3(vertices, normals, fnormals, vnormals, edges, faces, attribs);
};
thi.ng.geom.types.map__GT_Mesh3 = function map__GT_Mesh3(G__7795) {
  return new thi.ng.geom.types.Mesh3((new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "normals", "normals", 3141522398)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "edges", "edges", 
  1110261192)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(G__7795), (new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)).cljs$core$IFn$_invoke$arity$1(G__7795), null, cljs.core.dissoc.call(null, G__7795, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), new cljs.core.Keyword(null, "normals", "normals", 3141522398), new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), new cljs.core.Keyword(null, 
  "vnormals", "vnormals", 2634711720), new cljs.core.Keyword(null, "edges", "edges", 1110261192), new cljs.core.Keyword(null, "faces", "faces", 1111091496), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)));
};
thi.ng.geom.types.Plane = function(n, w, __meta, __extmap) {
  this.n = n;
  this.w = w;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Plane.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7800, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7800, new cljs.core.Keyword(null, "n", "n", 1013904352))) {
    return self__.n;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7800, new cljs.core.Keyword(null, "w", "w", 1013904361))) {
      return self__.w;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7800, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Plane{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "n", "n", 1013904352), self__.n], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "w", "w", 1013904361), self__.w], null)], null), self__.__extmap));
};
thi.ng.geom.types.Plane.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Plane.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Plane(self__.n, self__.w, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Plane.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Plane.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "n", "n", 1013904352), null, new cljs.core.Keyword(null, "w", "w", 1013904361), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Plane(self__.n, self__.w, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7799) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7802 = cljs.core.keyword_identical_QMARK_;
  var expr__7803 = k__4075__auto__;
  if (cljs.core.truth_(pred__7802.call(null, new cljs.core.Keyword(null, "n", "n", 1013904352), expr__7803))) {
    return new thi.ng.geom.types.Plane(G__7799, self__.w, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7802.call(null, new cljs.core.Keyword(null, "w", "w", 1013904361), expr__7803))) {
      return new thi.ng.geom.types.Plane(self__.n, G__7799, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.Plane(self__.n, self__.w, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7799), null);
    }
  }
};
thi.ng.geom.types.Plane.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "n", "n", 1013904352), self__.n], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "w", "w", 1013904361), self__.w], null)], null), self__.__extmap));
};
thi.ng.geom.types.Plane.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7799) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Plane(self__.n, self__.w, G__7799, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Plane.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Plane.cljs$lang$type = true;
thi.ng.geom.types.Plane.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Plane");
};
thi.ng.geom.types.Plane.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Plane");
};
thi.ng.geom.types.__GT_Plane = function __GT_Plane(n, w) {
  return new thi.ng.geom.types.Plane(n, w);
};
thi.ng.geom.types.map__GT_Plane = function map__GT_Plane(G__7801) {
  return new thi.ng.geom.types.Plane((new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(G__7801), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(G__7801), null, cljs.core.dissoc.call(null, G__7801, new cljs.core.Keyword(null, "n", "n", 1013904352), new cljs.core.Keyword(null, "w", "w", 1013904361)));
};
thi.ng.geom.types.Quad3 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7806, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7806, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7806, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Quad3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Quad3(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Quad3(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7805) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7808 = cljs.core.keyword_identical_QMARK_;
  var expr__7809 = k__4075__auto__;
  if (cljs.core.truth_(pred__7808.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7809))) {
    return new thi.ng.geom.types.Quad3(G__7805, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Quad3(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7805), null);
  }
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Quad3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7805) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Quad3(self__.points, G__7805, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Quad3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Quad3.cljs$lang$type = true;
thi.ng.geom.types.Quad3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Quad3");
};
thi.ng.geom.types.Quad3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Quad3");
};
thi.ng.geom.types.__GT_Quad3 = function __GT_Quad3(points) {
  return new thi.ng.geom.types.Quad3(points);
};
thi.ng.geom.types.map__GT_Quad3 = function map__GT_Quad3(G__7807) {
  return new thi.ng.geom.types.Quad3((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7807), null, cljs.core.dissoc.call(null, G__7807, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Sphere = function(p, r, __meta, __extmap) {
  this.p = p;
  this.r = r;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7812, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7812, new cljs.core.Keyword(null, "p", "p", 1013904354))) {
    return self__.p;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k7812, new cljs.core.Keyword(null, "r", "r", 1013904356))) {
      return self__.r;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k7812, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Sphere{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "r", "r", 1013904356), self__.r], null)], null), self__.__extmap));
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Sphere(self__.p, self__.r, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "r", "r", 1013904356), null, new cljs.core.Keyword(null, "p", "p", 1013904354), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Sphere(self__.p, self__.r, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7811) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7814 = cljs.core.keyword_identical_QMARK_;
  var expr__7815 = k__4075__auto__;
  if (cljs.core.truth_(pred__7814.call(null, new cljs.core.Keyword(null, "p", "p", 1013904354), expr__7815))) {
    return new thi.ng.geom.types.Sphere(G__7811, self__.r, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7814.call(null, new cljs.core.Keyword(null, "r", "r", 1013904356), expr__7815))) {
      return new thi.ng.geom.types.Sphere(self__.p, G__7811, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.types.Sphere(self__.p, self__.r, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7811), null);
    }
  }
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "p", "p", 1013904354), self__.p], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "r", "r", 1013904356), self__.r], null)], null), self__.__extmap));
};
thi.ng.geom.types.Sphere.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7811) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Sphere(self__.p, self__.r, G__7811, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Sphere.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Sphere.cljs$lang$type = true;
thi.ng.geom.types.Sphere.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Sphere");
};
thi.ng.geom.types.Sphere.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Sphere");
};
thi.ng.geom.types.__GT_Sphere = function __GT_Sphere(p, r) {
  return new thi.ng.geom.types.Sphere(p, r);
};
thi.ng.geom.types.map__GT_Sphere = function map__GT_Sphere(G__7813) {
  return new thi.ng.geom.types.Sphere((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(G__7813), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(G__7813), null, cljs.core.dissoc.call(null, G__7813, new cljs.core.Keyword(null, "p", "p", 1013904354), new cljs.core.Keyword(null, "r", "r", 1013904356)));
};
thi.ng.geom.types.Tetrahedron = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7818, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7818, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7818, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Tetrahedron{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Tetrahedron(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Tetrahedron(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7817) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7820 = cljs.core.keyword_identical_QMARK_;
  var expr__7821 = k__4075__auto__;
  if (cljs.core.truth_(pred__7820.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7821))) {
    return new thi.ng.geom.types.Tetrahedron(G__7817, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Tetrahedron(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7817), null);
  }
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7817) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Tetrahedron(self__.points, G__7817, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Tetrahedron.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Tetrahedron.cljs$lang$type = true;
thi.ng.geom.types.Tetrahedron.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Tetrahedron");
};
thi.ng.geom.types.Tetrahedron.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Tetrahedron");
};
thi.ng.geom.types.__GT_Tetrahedron = function __GT_Tetrahedron(points) {
  return new thi.ng.geom.types.Tetrahedron(points);
};
thi.ng.geom.types.map__GT_Tetrahedron = function map__GT_Tetrahedron(G__7819) {
  return new thi.ng.geom.types.Tetrahedron((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7819), null, cljs.core.dissoc.call(null, G__7819, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
thi.ng.geom.types.Triangle3 = function(points, __meta, __extmap) {
  this.points = points;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 1) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k7824, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k7824, new cljs.core.Keyword(null, "points", "points", 4326117461))) {
    return self__.points;
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.get.call(null, self__.__extmap, k7824, else__4070__auto__);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.types.Triangle3{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.types.Triangle3(self__.points, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "points", "points", 4326117461), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.types.Triangle3(self__.points, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__7823) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__7826 = cljs.core.keyword_identical_QMARK_;
  var expr__7827 = k__4075__auto__;
  if (cljs.core.truth_(pred__7826.call(null, new cljs.core.Keyword(null, "points", "points", 4326117461), expr__7827))) {
    return new thi.ng.geom.types.Triangle3(G__7823, self__.__meta, self__.__extmap, null);
  } else {
    return new thi.ng.geom.types.Triangle3(self__.points, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__7823), null);
  }
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "points", "points", 4326117461), self__.points], null)], null), self__.__extmap));
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__7823) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.types.Triangle3(self__.points, G__7823, self__.__extmap, self__.__hash);
};
thi.ng.geom.types.Triangle3.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.types.Triangle3.cljs$lang$type = true;
thi.ng.geom.types.Triangle3.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.types/Triangle3");
};
thi.ng.geom.types.Triangle3.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.types/Triangle3");
};
thi.ng.geom.types.__GT_Triangle3 = function __GT_Triangle3(points) {
  return new thi.ng.geom.types.Triangle3(points);
};
thi.ng.geom.types.map__GT_Triangle3 = function map__GT_Triangle3(G__7825) {
  return new thi.ng.geom.types.Triangle3((new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(G__7825), null, cljs.core.dissoc.call(null, G__7825, new cljs.core.Keyword(null, "points", "points", 4326117461)));
};
goog.provide("thi.ng.geom.types.utils");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.utils");
thi.ng.geom.types.utils.bounding_rect = function bounding_rect(points) {
  var vec__7957 = thi.ng.geom.core.utils.bounding_rect.call(null, points);
  var p = cljs.core.nth.call(null, vec__7957, 0, null);
  var size = cljs.core.nth.call(null, vec__7957, 1, null);
  if (cljs.core.truth_(p)) {
    return new thi.ng.geom.types.Rect2(p, size);
  } else {
    return null;
  }
};
thi.ng.geom.types.utils.bounding_box = function bounding_box(points) {
  var vec__7959 = thi.ng.geom.core.utils.bounding_box.call(null, points);
  var p = cljs.core.nth.call(null, vec__7959, 0, null);
  var size = cljs.core.nth.call(null, vec__7959, 1, null);
  if (cljs.core.truth_(p)) {
    return new thi.ng.geom.types.AABB(p, size);
  } else {
    return null;
  }
};
thi.ng.geom.types.utils.bounding_circle = function() {
  var bounding_circle = null;
  var bounding_circle__1 = function(points) {
    return bounding_circle.call(null, thi.ng.geom.core.utils.centroid.call(null, points), points);
  };
  var bounding_circle__2 = function(c, r_or_points) {
    var vec__7961 = thi.ng.geom.core.utils.radial_bounds.call(null, thi.ng.geom.core.vector.vec2, c, r_or_points);
    var c__$1 = cljs.core.nth.call(null, vec__7961, 0, null);
    var r = cljs.core.nth.call(null, vec__7961, 1, null);
    return new thi.ng.geom.types.Circle2(c__$1, r);
  };
  bounding_circle = function(c, r_or_points) {
    switch(arguments.length) {
      case 1:
        return bounding_circle__1.call(this, c);
      case 2:
        return bounding_circle__2.call(this, c, r_or_points);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bounding_circle.cljs$core$IFn$_invoke$arity$1 = bounding_circle__1;
  bounding_circle.cljs$core$IFn$_invoke$arity$2 = bounding_circle__2;
  return bounding_circle;
}();
thi.ng.geom.types.utils.bounding_sphere = function() {
  var bounding_sphere = null;
  var bounding_sphere__1 = function(points) {
    return bounding_sphere.call(null, thi.ng.geom.core.utils.centroid.call(null, points), points);
  };
  var bounding_sphere__2 = function(c, r_or_points) {
    var vec__7963 = thi.ng.geom.core.utils.radial_bounds.call(null, thi.ng.geom.core.vector.vec3, c, r_or_points);
    var c__$1 = cljs.core.nth.call(null, vec__7963, 0, null);
    var r = cljs.core.nth.call(null, vec__7963, 1, null);
    return new thi.ng.geom.types.Sphere(c__$1, r);
  };
  bounding_sphere = function(c, r_or_points) {
    switch(arguments.length) {
      case 1:
        return bounding_sphere__1.call(this, c);
      case 2:
        return bounding_sphere__2.call(this, c, r_or_points);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bounding_sphere.cljs$core$IFn$_invoke$arity$1 = bounding_sphere__1;
  bounding_sphere.cljs$core$IFn$_invoke$arity$2 = bounding_sphere__2;
  return bounding_sphere;
}();
goog.provide("clojure.core.reducers");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("cljs.core");
clojure.core.reducers.fjtask = function fjtask(f) {
  return f;
};
clojure.core.reducers.fjinvoke = function fjinvoke(f) {
  return f.call(null);
};
clojure.core.reducers.fjfork = function fjfork(task) {
  return task;
};
clojure.core.reducers.fjjoin = function fjjoin(task) {
  return task.call(null);
};
clojure.core.reducers.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    return reduce.call(null, f, f.call(null), coll);
  };
  var reduce__3 = function(f, init, coll) {
    if (cljs.core.map_QMARK_.call(null, coll)) {
      return cljs.core._kv_reduce.call(null, coll, f, init);
    } else {
      if (coll == null) {
        return init;
      } else {
        if (coll instanceof Array) {
          return cljs.core.array_reduce.call(null, coll, f, init);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core._reduce.call(null, coll, f, init);
          } else {
            return null;
          }
        }
      }
    }
  };
  reduce = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, init);
      case 3:
        return reduce__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
clojure.core.reducers.CollFold = function() {
  var obj7933 = {};
  return obj7933;
}();
clojure.core.reducers.coll_fold = function coll_fold(coll, n, combinef, reducef) {
  if (function() {
    var and__3469__auto__ = coll;
    if (and__3469__auto__) {
      return coll.clojure$core$reducers$CollFold$coll_fold$arity$4;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return coll.clojure$core$reducers$CollFold$coll_fold$arity$4(coll, n, combinef, reducef);
  } else {
    var x__4108__auto__ = coll == null ? null : coll;
    return function() {
      var or__3481__auto__ = clojure.core.reducers.coll_fold[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = clojure.core.reducers.coll_fold["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "CollFold.coll-fold", coll);
        }
      }
    }().call(null, coll, n, combinef, reducef);
  }
};
clojure.core.reducers.fold = function() {
  var fold = null;
  var fold__2 = function(reducef, coll) {
    return fold.call(null, reducef, reducef, coll);
  };
  var fold__3 = function(combinef, reducef, coll) {
    return fold.call(null, 512, combinef, reducef, coll);
  };
  var fold__4 = function(n, combinef, reducef, coll) {
    return clojure.core.reducers.coll_fold.call(null, coll, n, combinef, reducef);
  };
  fold = function(n, combinef, reducef, coll) {
    switch(arguments.length) {
      case 2:
        return fold__2.call(this, n, combinef);
      case 3:
        return fold__3.call(this, n, combinef, reducef);
      case 4:
        return fold__4.call(this, n, combinef, reducef, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fold.cljs$core$IFn$_invoke$arity$2 = fold__2;
  fold.cljs$core$IFn$_invoke$arity$3 = fold__3;
  fold.cljs$core$IFn$_invoke$arity$4 = fold__4;
  return fold;
}();
clojure.core.reducers.reducer = function reducer(coll, xf) {
  if (typeof clojure.core.reducers.t7937 !== "undefined") {
  } else {
    clojure.core.reducers.t7937 = function(xf, coll, reducer, meta7938) {
      this.xf = xf;
      this.coll = coll;
      this.reducer = reducer;
      this.meta7938 = meta7938;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 917504;
    };
    clojure.core.reducers.t7937.cljs$lang$type = true;
    clojure.core.reducers.t7937.cljs$lang$ctorStr = "clojure.core.reducers/t7937";
    clojure.core.reducers.t7937.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
      return cljs.core._write.call(null, writer__4049__auto__, "clojure.core.reducers/t7937");
    };
    clojure.core.reducers.t7937.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f1) {
      var self__ = this;
      var this$__$1 = this;
      return cljs.core._reduce.call(null, this$__$1, f1, f1.call(null));
    };
    clojure.core.reducers.t7937.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), init);
    };
    clojure.core.reducers.t7937.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7939) {
      var self__ = this;
      var _7939__$1 = this;
      return self__.meta7938;
    };
    clojure.core.reducers.t7937.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7939, meta7938__$1) {
      var self__ = this;
      var _7939__$1 = this;
      return new clojure.core.reducers.t7937(self__.xf, self__.coll, self__.reducer, meta7938__$1);
    };
    clojure.core.reducers.__GT_t7937 = function __GT_t7937(xf__$1, coll__$1, reducer__$1, meta7938) {
      return new clojure.core.reducers.t7937(xf__$1, coll__$1, reducer__$1, meta7938);
    };
  }
  return new clojure.core.reducers.t7937(xf, coll, reducer, null);
};
clojure.core.reducers.folder = function folder(coll, xf) {
  if (typeof clojure.core.reducers.t7943 !== "undefined") {
  } else {
    clojure.core.reducers.t7943 = function(xf, coll, folder, meta7944) {
      this.xf = xf;
      this.coll = coll;
      this.folder = folder;
      this.meta7944 = meta7944;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 917504;
    };
    clojure.core.reducers.t7943.cljs$lang$type = true;
    clojure.core.reducers.t7943.cljs$lang$ctorStr = "clojure.core.reducers/t7943";
    clojure.core.reducers.t7943.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
      return cljs.core._write.call(null, writer__4049__auto__, "clojure.core.reducers/t7943");
    };
    clojure.core.reducers.t7943.prototype.clojure$core$reducers$CollFold$ = true;
    clojure.core.reducers.t7943.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(_, n, combinef, reducef) {
      var self__ = this;
      var ___$1 = this;
      return clojure.core.reducers.coll_fold.call(null, self__.coll, n, combinef, self__.xf.call(null, reducef));
    };
    clojure.core.reducers.t7943.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), f1.call(null));
    };
    clojure.core.reducers.t7943.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._reduce.call(null, self__.coll, self__.xf.call(null, f1), init);
    };
    clojure.core.reducers.t7943.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7945) {
      var self__ = this;
      var _7945__$1 = this;
      return self__.meta7944;
    };
    clojure.core.reducers.t7943.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7945, meta7944__$1) {
      var self__ = this;
      var _7945__$1 = this;
      return new clojure.core.reducers.t7943(self__.xf, self__.coll, self__.folder, meta7944__$1);
    };
    clojure.core.reducers.__GT_t7943 = function __GT_t7943(xf__$1, coll__$1, folder__$1, meta7944) {
      return new clojure.core.reducers.t7943(xf__$1, coll__$1, folder__$1, meta7944);
    };
  }
  return new clojure.core.reducers.t7943(xf, coll, folder, null);
};
clojure.core.reducers.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(x__3898__auto__) {
      return map.call(null, f, x__3898__auto__);
    };
  };
  var map__2 = function(f, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__7946 = null;
        var G__7946__0 = function() {
          return f1.call(null);
        };
        var G__7946__2 = function(ret, v) {
          return f1.call(null, ret, f.call(null, v));
        };
        var G__7946__3 = function(ret, k, v) {
          return f1.call(null, ret, f.call(null, k, v));
        };
        G__7946 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__7946__0.call(this);
            case 2:
              return G__7946__2.call(this, ret, k);
            case 3:
              return G__7946__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__7946;
      }();
    });
  };
  map = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  return map;
}();
clojure.core.reducers.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return function(x__3898__auto__) {
      return mapcat.call(null, f, x__3898__auto__);
    };
  };
  var mapcat__2 = function(f, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__7947 = null;
        var G__7947__0 = function() {
          return f1.call(null);
        };
        var G__7947__2 = function(ret, v) {
          return clojure.core.reducers.reduce.call(null, f1, ret, f.call(null, v));
        };
        var G__7947__3 = function(ret, k, v) {
          return clojure.core.reducers.reduce.call(null, f1, ret, f.call(null, k, v));
        };
        G__7947 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__7947__0.call(this);
            case 2:
              return G__7947__2.call(this, ret, k);
            case 3:
              return G__7947__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__7947;
      }();
    });
  };
  mapcat = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      case 2:
        return mapcat__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  return mapcat;
}();
clojure.core.reducers.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(x__3898__auto__) {
      return filter.call(null, pred, x__3898__auto__);
    };
  };
  var filter__2 = function(pred, coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__7948 = null;
        var G__7948__0 = function() {
          return f1.call(null);
        };
        var G__7948__2 = function(ret, v) {
          if (cljs.core.truth_(pred.call(null, v))) {
            return f1.call(null, ret, v);
          } else {
            return ret;
          }
        };
        var G__7948__3 = function(ret, k, v) {
          if (cljs.core.truth_(pred.call(null, k, v))) {
            return f1.call(null, ret, k, v);
          } else {
            return ret;
          }
        };
        G__7948 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__7948__0.call(this);
            case 2:
              return G__7948__2.call(this, ret, k);
            case 3:
              return G__7948__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__7948;
      }();
    });
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
clojure.core.reducers.flatten = function() {
  var flatten = null;
  var flatten__0 = function() {
    return function(x__3898__auto__) {
      return flatten.call(null, x__3898__auto__);
    };
  };
  var flatten__1 = function(coll) {
    return clojure.core.reducers.folder.call(null, coll, function(f1) {
      return function() {
        var G__7949 = null;
        var G__7949__0 = function() {
          return f1.call(null);
        };
        var G__7949__2 = function(ret, v) {
          if (cljs.core.sequential_QMARK_.call(null, v)) {
            return cljs.core._reduce.call(null, flatten.call(null, v), f1, ret);
          } else {
            return f1.call(null, ret, v);
          }
        };
        G__7949 = function(ret, v) {
          switch(arguments.length) {
            case 0:
              return G__7949__0.call(this);
            case 2:
              return G__7949__2.call(this, ret, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__7949;
      }();
    });
  };
  flatten = function(coll) {
    switch(arguments.length) {
      case 0:
        return flatten__0.call(this);
      case 1:
        return flatten__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  flatten.cljs$core$IFn$_invoke$arity$0 = flatten__0;
  flatten.cljs$core$IFn$_invoke$arity$1 = flatten__1;
  return flatten;
}();
clojure.core.reducers.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return function(x__3898__auto__) {
      return remove.call(null, pred, x__3898__auto__);
    };
  };
  var remove__2 = function(pred, coll) {
    return clojure.core.reducers.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
clojure.core.reducers.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(x__3898__auto__) {
      return take_while.call(null, pred, x__3898__auto__);
    };
  };
  var take_while__2 = function(pred, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      return function() {
        var G__7950 = null;
        var G__7950__0 = function() {
          return f1.call(null);
        };
        var G__7950__2 = function(ret, v) {
          if (cljs.core.truth_(pred.call(null, v))) {
            return f1.call(null, ret, v);
          } else {
            return cljs.core.reduced.call(null, ret);
          }
        };
        var G__7950__3 = function(ret, k, v) {
          if (cljs.core.truth_(pred.call(null, k, v))) {
            return f1.call(null, ret, k, v);
          } else {
            return cljs.core.reduced.call(null, ret);
          }
        };
        G__7950 = function(ret, k, v) {
          switch(arguments.length) {
            case 0:
              return G__7950__0.call(this);
            case 2:
              return G__7950__2.call(this, ret, k);
            case 3:
              return G__7950__3.call(this, ret, k, v);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        return G__7950;
      }();
    });
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
clojure.core.reducers.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(x__3898__auto__) {
      return take.call(null, n, x__3898__auto__);
    };
  };
  var take__2 = function(n, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      var cnt = cljs.core.atom.call(null, n);
      return function(cnt) {
        return function() {
          var G__7951 = null;
          var G__7951__0 = function() {
            return f1.call(null);
          };
          var G__7951__2 = function(ret, v) {
            cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
            if (cljs.core.deref.call(null, cnt) < 0) {
              return cljs.core.reduced.call(null, ret);
            } else {
              return f1.call(null, ret, v);
            }
          };
          var G__7951__3 = function(ret, k, v) {
            cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
            if (cljs.core.deref.call(null, cnt) < 0) {
              return cljs.core.reduced.call(null, ret);
            } else {
              return f1.call(null, ret, k, v);
            }
          };
          G__7951 = function(ret, k, v) {
            switch(arguments.length) {
              case 0:
                return G__7951__0.call(this);
              case 2:
                return G__7951__2.call(this, ret, k);
              case 3:
                return G__7951__3.call(this, ret, k, v);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          return G__7951;
        }();
      }(cnt);
    });
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
clojure.core.reducers.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(x__3898__auto__) {
      return drop.call(null, n, x__3898__auto__);
    };
  };
  var drop__2 = function(n, coll) {
    return clojure.core.reducers.reducer.call(null, coll, function(f1) {
      var cnt = cljs.core.atom.call(null, n);
      return function(cnt) {
        return function() {
          var G__7952 = null;
          var G__7952__0 = function() {
            return f1.call(null);
          };
          var G__7952__2 = function(ret, v) {
            cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
            if (cljs.core.deref.call(null, cnt) < 0) {
              return f1.call(null, ret, v);
            } else {
              return ret;
            }
          };
          var G__7952__3 = function(ret, k, v) {
            cljs.core.swap_BANG_.call(null, cnt, cljs.core.dec);
            if (cljs.core.deref.call(null, cnt) < 0) {
              return f1.call(null, ret, k, v);
            } else {
              return ret;
            }
          };
          G__7952 = function(ret, k, v) {
            switch(arguments.length) {
              case 0:
                return G__7952__0.call(this);
              case 2:
                return G__7952__2.call(this, ret, k);
              case 3:
                return G__7952__3.call(this, ret, k, v);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          return G__7952;
        }();
      }(cnt);
    });
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
clojure.core.reducers.Cat = function(cnt, left, right) {
  this.cnt = cnt;
  this.left = left;
  this.right = right;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8912898;
};
clojure.core.reducers.Cat.cljs$lang$type = true;
clojure.core.reducers.Cat.cljs$lang$ctorStr = "clojure.core.reducers/Cat";
clojure.core.reducers.Cat.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "clojure.core.reducers/Cat");
};
clojure.core.reducers.Cat.prototype.clojure$core$reducers$CollFold$ = true;
clojure.core.reducers.Cat.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(this$, n, combinef, reducef) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reduce.call(null, this$__$1, reducef);
};
clojure.core.reducers.Cat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f1) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._reduce.call(null, this$__$1, f1, f1.call(null));
};
clojure.core.reducers.Cat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f1, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._reduce.call(null, self__.right, f1, cljs.core._reduce.call(null, self__.left, f1, init));
};
clojure.core.reducers.Cat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.concat.call(null, cljs.core.seq.call(null, self__.left), cljs.core.seq.call(null, self__.right));
};
clojure.core.reducers.Cat.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
clojure.core.reducers.__GT_Cat = function __GT_Cat(cnt, left, right) {
  return new clojure.core.reducers.Cat(cnt, left, right);
};
clojure.core.reducers.cat = function() {
  var cat = null;
  var cat__0 = function() {
    return[];
  };
  var cat__1 = function(ctor) {
    return function() {
      var G__7953 = null;
      var G__7953__0 = function() {
        return ctor.call(null);
      };
      var G__7953__2 = function(left, right) {
        return cat.call(null, left, right);
      };
      G__7953 = function(left, right) {
        switch(arguments.length) {
          case 0:
            return G__7953__0.call(this);
          case 2:
            return G__7953__2.call(this, left, right);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      return G__7953;
    }();
  };
  var cat__2 = function(left, right) {
    if (cljs.core.count.call(null, left) === 0) {
      return right;
    } else {
      if (cljs.core.count.call(null, right) === 0) {
        return left;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new clojure.core.reducers.Cat(cljs.core.count.call(null, left) + cljs.core.count.call(null, right), left, right);
        } else {
          return null;
        }
      }
    }
  };
  cat = function(left, right) {
    switch(arguments.length) {
      case 0:
        return cat__0.call(this);
      case 1:
        return cat__1.call(this, left);
      case 2:
        return cat__2.call(this, left, right);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cat.cljs$core$IFn$_invoke$arity$0 = cat__0;
  cat.cljs$core$IFn$_invoke$arity$1 = cat__1;
  cat.cljs$core$IFn$_invoke$arity$2 = cat__2;
  return cat;
}();
clojure.core.reducers.append_BANG_ = function append_BANG_(acc, x) {
  var G__7955 = acc;
  G__7955.push(x);
  return G__7955;
};
clojure.core.reducers.foldcat = function foldcat(coll) {
  return clojure.core.reducers.fold.call(null, clojure.core.reducers.cat, clojure.core.reducers.append_BANG_, coll);
};
clojure.core.reducers.monoid = function monoid(op, ctor) {
  return function() {
    var m = null;
    var m__0 = function() {
      return ctor.call(null);
    };
    var m__2 = function(a, b) {
      return op.call(null, a, b);
    };
    m = function(a, b) {
      switch(arguments.length) {
        case 0:
          return m__0.call(this);
        case 2:
          return m__2.call(this, a, b);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    m.cljs$core$IFn$_invoke$arity$0 = m__0;
    m.cljs$core$IFn$_invoke$arity$2 = m__2;
    return m;
  }();
};
clojure.core.reducers.foldvec = function foldvec(v, n, combinef, reducef) {
  if (cljs.core.empty_QMARK_.call(null, v)) {
    return combinef.call(null);
  } else {
    if (cljs.core.count.call(null, v) <= n) {
      return clojure.core.reducers.reduce.call(null, reducef, combinef.call(null), v);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var split = cljs.core.quot.call(null, cljs.core.count.call(null, v), 2);
        var v1 = cljs.core.subvec.call(null, v, 0, split);
        var v2 = cljs.core.subvec.call(null, v, split, cljs.core.count.call(null, v));
        var fc = function(split, v1, v2) {
          return function(child) {
            return function(split, v1, v2) {
              return function() {
                return foldvec.call(null, child, n, combinef, reducef);
              };
            }(split, v1, v2);
          };
        }(split, v1, v2);
        return clojure.core.reducers.fjinvoke.call(null, function(split, v1, v2, fc) {
          return function() {
            var f1 = fc.call(null, v1);
            var t2 = clojure.core.reducers.fjtask.call(null, fc.call(null, v2));
            clojure.core.reducers.fjfork.call(null, t2);
            return combinef.call(null, f1.call(null), clojure.core.reducers.fjjoin.call(null, t2));
          };
        }(split, v1, v2, fc));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.clojure$core$reducers$CollFold$ = true;
cljs.core.PersistentVector.prototype.clojure$core$reducers$CollFold$coll_fold$arity$4 = function(v, n, combinef, reducef) {
  var v__$1 = this;
  return clojure.core.reducers.foldvec.call(null, v__$1, n, combinef, reducef);
};
clojure.core.reducers.CollFold["object"] = true;
clojure.core.reducers.coll_fold["object"] = function(coll, n, combinef, reducef) {
  return clojure.core.reducers.reduce.call(null, reducef, combinef.call(null), coll);
};
clojure.core.reducers.CollFold["null"] = true;
clojure.core.reducers.coll_fold["null"] = function(coll, n, combinef, reducef) {
  return combinef.call(null);
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__7902_SHARP_) {
      return max === p1__7902_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__7903__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__7903 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__7903__delegate.call(this, s1, s2, sets);
    };
    G__7903.cljs$lang$maxFixedArity = 2;
    G__7903.cljs$lang$applyTo = function(arglist__7904) {
      var s1 = cljs.core.first(arglist__7904);
      arglist__7904 = cljs.core.next(arglist__7904);
      var s2 = cljs.core.first(arglist__7904);
      var sets = cljs.core.rest(arglist__7904);
      return G__7903__delegate(s1, s2, sets);
    };
    G__7903.cljs$core$IFn$_invoke$arity$variadic = G__7903__delegate;
    return G__7903;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__7906 = s2;
        var G__7907 = s1;
        s1 = G__7906;
        s2 = G__7907;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__7908__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__7905_SHARP_) {
        return-cljs.core.count.call(null, p1__7905_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__7908 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__7908__delegate.call(this, s1, s2, sets);
    };
    G__7908.cljs$lang$maxFixedArity = 2;
    G__7908.cljs$lang$applyTo = function(arglist__7909) {
      var s1 = cljs.core.first(arglist__7909);
      arglist__7909 = cljs.core.next(arglist__7909);
      var s2 = cljs.core.first(arglist__7909);
      var sets = cljs.core.rest(arglist__7909);
      return G__7908__delegate(s1, s2, sets);
    };
    G__7908.cljs$core$IFn$_invoke$arity$variadic = G__7908__delegate;
    return G__7908;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__7910__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__7910 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__7910__delegate.call(this, s1, s2, sets);
    };
    G__7910.cljs$lang$maxFixedArity = 2;
    G__7910.cljs$lang$applyTo = function(arglist__7911) {
      var s1 = cljs.core.first(arglist__7911);
      arglist__7911 = cljs.core.next(arglist__7911);
      var s2 = cljs.core.first(arglist__7911);
      var sets = cljs.core.rest(arglist__7911);
      return G__7910__delegate(s1, s2, sets);
    };
    G__7910.cljs$core$IFn$_invoke$arity$variadic = G__7910__delegate;
    return G__7910;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7912_SHARP_) {
    return cljs.core.select_keys.call(null, p1__7912_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__7915) {
    var vec__7916 = p__7915;
    var old = cljs.core.nth.call(null, vec__7916, 0, null);
    var new$ = cljs.core.nth.call(null, vec__7916, 1, null);
    if (cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old);
    } else {
      return m;
    }
  }, map, kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7917_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__7917_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__7920) {
    var vec__7921 = p__7920;
    var k = cljs.core.nth.call(null, vec__7921, 0, null);
    var v = cljs.core.nth.call(null, vec__7921, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__7928 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__7928, 0, null);
      var s = cljs.core.nth.call(null, vec__7928, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ks, vec__7928, r, s, idx) {
        return function(ret, x) {
          var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
          if (cljs.core.truth_(found)) {
            return cljs.core.reduce.call(null, function(found, ks, vec__7928, r, s, idx) {
              return function(p1__7922_SHARP_, p2__7923_SHARP_) {
                return cljs.core.conj.call(null, p1__7922_SHARP_, cljs.core.merge.call(null, p2__7923_SHARP_, x));
              };
            }(found, ks, vec__7928, r, s, idx), ret, found);
          } else {
            return ret;
          }
        };
      }(ks, vec__7928, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__7929 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__7929, 0, null);
    var s = cljs.core.nth.call(null, vec__7929, 1, null);
    var k = cljs.core.nth.call(null, vec__7929, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(vec__7929, r, s, k, idx) {
      return function(ret, x) {
        var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, vec__7929, r, s, k, idx) {
            return function(p1__7924_SHARP_, p2__7925_SHARP_) {
              return cljs.core.conj.call(null, p1__7924_SHARP_, cljs.core.merge.call(null, p2__7925_SHARP_, x));
            };
          }(found, vec__7929, r, s, k, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(vec__7929, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__7930_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__7930_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__7931_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__7931_SHARP_);
  }, set2);
};
goog.provide("thi.ng.geom.core.matrix");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.error");
thi.ng.geom.core.matrix.hash_matrix = function hash_matrix(coll) {
  var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
  var s = cljs.core.next.call(null, coll);
  while (true) {
    if (s == null) {
      return res;
    } else {
      var G__8136 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
      var G__8137 = cljs.core.next.call(null, s);
      res = G__8136;
      s = G__8137;
      continue;
    }
    break;
  }
};
thi.ng.geom.core.matrix.Matrix32 = function(m00, m01, m02, m10, m11, m12) {
  this.m00 = m00;
  this.m01 = m01;
  this.m02 = m02;
  this.m10 = m10;
  this.m11 = m11;
  this.m12 = m12;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31457498;
};
thi.ng.geom.core.matrix.Matrix32.cljs$lang$type = true;
thi.ng.geom.core.matrix.Matrix32.cljs$lang$ctorStr = "thi.ng.geom.core.matrix/Matrix32";
thi.ng.geom.core.matrix.Matrix32.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.core.matrix/Matrix32");
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PVectorTransform$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PVectorTransform$transform_vector$arity$2 = function(_, p__8139) {
  var self__ = this;
  var vec__8140 = p__8139;
  var x = cljs.core.nth.call(null, vec__8140, 0, null);
  var y = cljs.core.nth.call(null, vec__8140, 1, null);
  var v = vec__8140;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec2(x * self__.m00 + y * self__.m01 + self__.m02, x * self__.m10 + y * self__.m11 + self__.m12);
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, matrix) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, matrix);
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(c, -s, 0, s, c, 0));
};
thi.ng.geom.core.matrix.Matrix32.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, "[", cljs.core.interpose.call(null, " ", _), "]"));
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 5, k)) {
    var G__8141 = k | 0;
    if (cljs.core._EQ_.call(null, 5, G__8141)) {
      return self__.m12;
    } else {
      if (cljs.core._EQ_.call(null, 4, G__8141)) {
        return self__.m11;
      } else {
        if (cljs.core._EQ_.call(null, 3, G__8141)) {
          return self__.m10;
        } else {
          if (cljs.core._EQ_.call(null, 2, G__8141)) {
            return self__.m02;
          } else {
            if (cljs.core._EQ_.call(null, 1, G__8141)) {
              return self__.m01;
            } else {
              if (cljs.core._EQ_.call(null, 0, G__8141)) {
                return self__.m00;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(k | 0)].join(""));
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, k);
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 15, k)) {
    var G__8142 = k | 0;
    if (cljs.core._EQ_.call(null, 5, G__8142)) {
      return self__.m12;
    } else {
      if (cljs.core._EQ_.call(null, 4, G__8142)) {
        return self__.m11;
      } else {
        if (cljs.core._EQ_.call(null, 3, G__8142)) {
          return self__.m10;
        } else {
          if (cljs.core._EQ_.call(null, 2, G__8142)) {
            return self__.m02;
          } else {
            if (cljs.core._EQ_.call(null, 1, G__8142)) {
              return self__.m01;
            } else {
              if (cljs.core._EQ_.call(null, 0, G__8142)) {
                return self__.m00;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(k | 0)].join(""));
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  } else {
    return nf;
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.m01, self__.m02, self__.m10, self__.m11, self__.m12], null));
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 6;
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PDeterminant$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PDeterminant$determinant$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.m00 * self__.m11 - self__.m01 * self__.m10;
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.matrix.hash_matrix.call(null, ___$1);
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.sequential_QMARK_.call(null, o) && cljs.core._EQ_.call(null, 6, cljs.core.count.call(null, o))) {
    return cljs.core.every_QMARK_.call(null, function(___$1) {
      return function(p1__8138_SHARP_) {
        return cljs.core._EQ_.call(null, p1__8138_SHARP_.call(null, 0), p1__8138_SHARP_.call(null, 1));
      };
    }(___$1), cljs.core.map.call(null, cljs.core.vector, ___$1, o));
  } else {
    return false;
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PInvert$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PInvert$invert$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var d = thi.ng.geom.core.determinant.call(null, ___$1);
  if (d === 0) {
    return null;
  } else {
    return new thi.ng.geom.core.matrix.Matrix32(self__.m11 / d, -(self__.m01 / d), (self__.m01 * self__.m12 - self__.m11 * self__.m02) / d, -(self__.m10 / d), self__.m00 / d, (self__.m10 * self__.m02 - self__.m00 * self__.m12) / d);
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PMathOps$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$2 = function(_, m) {
  var self__ = this;
  var ___$1 = this;
  var m__$1 = m;
  return new thi.ng.geom.core.matrix.Matrix32(self__.m00 * m__$1.m00 + self__.m01 * m__$1.m10, self__.m00 * m__$1.m01 + self__.m01 * m__$1.m11, self__.m00 * m__$1.m02 + self__.m01 * m__$1.m12 + self__.m02, self__.m10 * m__$1.m00 + self__.m11 * m__$1.m10, self__.m10 * m__$1.m01 + self__.m11 * m__$1.m11, self__.m10 * m__$1.m02 + self__.m11 * m__$1.m12 + self__.m12);
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.next.call(null, ___$1);
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.m00;
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, 0, typeof t === "number" ? t : t.call(null, 0), 0, 1, typeof t === "number" ? t : t.call(null, 1)));
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PTranslate$translate$arity$3 = function(_, tx, ty) {
  var self__ = this;
  var ___$1 = this;
  if (typeof tx === "number") {
    if (typeof ty === "number") {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, 0, tx, 0, 1, ty));
    } else {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, 0, tx * ty.call(null, 0), 0, 1, tx * ty.call(null, 1)));
    }
  } else {
    if (typeof ty === "number") {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, 0, ty * tx.call(null, 0), 0, 1, ty * tx.call(null, 1)));
    } else {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, 0, tx.call(null, 0) * ty.call(null, 0), 0, 1, tx.call(null, 1) * ty.call(null, 1)));
    }
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(typeof s === "number" ? s : s.call(null, 0), 0, 0, 0, typeof s === "number" ? s : s.call(null, 1), 0));
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, sx, sy) {
  var self__ = this;
  var ___$1 = this;
  if (typeof sx === "number") {
    if (typeof sy === "number") {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(sx, 0, 0, 0, sy, 0));
    } else {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(sx * sy.call(null, 0), 0, 0, 0, sx * sy.call(null, 1), 0));
    }
  } else {
    if (typeof sy === "number") {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(sy * sx.call(null, 0), 0, 0, 0, sy * sx.call(null, 1), 0));
    } else {
      return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(sx.call(null, 0) * sy.call(null, 0), 0, 0, 0, sx.call(null, 1) * sy.call(null, 1), 0));
    }
  }
};
thi.ng.geom.core.matrix.Matrix32.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.m00, self__.m01, self__.m02, self__.m10, self__.m11, self__.m12, x], null);
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PShear$ = true;
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PShear$shear$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, typeof s === "number" ? s : s.call(null, 0), 0, typeof s === "number" ? s : s.call(null, 1), 1, 0));
};
thi.ng.geom.core.matrix.Matrix32.prototype.thi$ng$geom$core$PShear$shear$arity$3 = function(_, sx, sy) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, new thi.ng.geom.core.matrix.Matrix32(1, sx, 0, sy, 1, 0));
};
thi.ng.geom.core.matrix.__GT_Matrix32 = function __GT_Matrix32(m00, m01, m02, m10, m11, m12) {
  return new thi.ng.geom.core.matrix.Matrix32(m00, m01, m02, m10, m11, m12);
};
thi.ng.geom.core.matrix.Matrix44 = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  this.m00 = m00;
  this.m01 = m01;
  this.m02 = m02;
  this.m03 = m03;
  this.m10 = m10;
  this.m11 = m11;
  this.m12 = m12;
  this.m13 = m13;
  this.m20 = m20;
  this.m21 = m21;
  this.m22 = m22;
  this.m23 = m23;
  this.m30 = m30;
  this.m31 = m31;
  this.m32 = m32;
  this.m33 = m33;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31457498;
};
thi.ng.geom.core.matrix.Matrix44.cljs$lang$type = true;
thi.ng.geom.core.matrix.Matrix44.cljs$lang$ctorStr = "thi.ng.geom.core.matrix/Matrix44";
thi.ng.geom.core.matrix.Matrix44.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.core.matrix/Matrix44");
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PVectorTransform$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PVectorTransform$transform_vector$arity$2 = function(_, p__8144) {
  var self__ = this;
  var vec__8145 = p__8144;
  var x = cljs.core.nth.call(null, vec__8145, 0, null);
  var y = cljs.core.nth.call(null, vec__8145, 1, null);
  var z = cljs.core.nth.call(null, vec__8145, 2, null);
  var w = cljs.core.nth.call(null, vec__8145, 3, null);
  var ___$1 = this;
  if (cljs.core.truth_(w)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [x * self__.m00 + y * self__.m10 + z * self__.m20 + w * self__.m30, x * self__.m01 + y * self__.m11 + z * self__.m21 + w * self__.m31, x * self__.m02 + y * self__.m12 + z * self__.m22 + w * self__.m32, x * self__.m03 + y * self__.m13 + z * self__.m23 + w * self__.m33], null);
  } else {
    return new thi.ng.geom.core.vector.Vec3(x * self__.m00 + y * self__.m10 + z * self__.m20 + self__.m30, x * self__.m01 + y * self__.m11 + z * self__.m21 + self__.m31, x * self__.m02 + y * self__.m12 + z * self__.m22 + self__.m32);
  }
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, matrix) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, ___$1, matrix);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.rotate_z.call(null, ___$1, theta);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTranspose$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTranspose$transpose$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00, self__.m10, self__.m20, self__.m30, self__.m01, self__.m11, self__.m21, self__.m31, self__.m02, self__.m12, self__.m22, self__.m32, self__.m03, self__.m13, self__.m23, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, "[", cljs.core.interpose.call(null, " ", _), "]"));
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00, self__.m01, self__.m02, self__.m03, self__.m10 * c + self__.m20 * s, self__.m11 * c + self__.m21 * s, self__.m12 * c + self__.m22 * s, self__.m13 * c + self__.m23 * s, self__.m20 * c - self__.m10 * s, self__.m21 * c - self__.m11 * s, self__.m22 * c - self__.m12 * s, self__.m23 * c - self__.m13 * s, self__.m30, self__.m31, self__.m32, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00 * c - self__.m20 * s, self__.m01 * c - self__.m21 * s, self__.m02 * c - self__.m22 * s, self__.m03 * c - self__.m23 * s, self__.m10, self__.m11, self__.m12, self__.m13, self__.m00 * s + self__.m20 * c, self__.m01 * s + self__.m21 * c, self__.m02 * s + self__.m22 * c, self__.m03 * s + self__.m23 * c, self__.m30, self__.m31, self__.m32, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00 * c + self__.m10 * s, self__.m01 * c + self__.m11 * s, self__.m02 * c + self__.m12 * s, self__.m03 * c + self__.m13 * s, self__.m10 * c - self__.m00 * s, self__.m11 * c - self__.m01 * s, self__.m12 * c - self__.m02 * s, self__.m13 * c - self__.m03 * s, self__.m20, self__.m21, self__.m22, self__.m23, self__.m30, self__.m31, self__.m32, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, p__8146, theta) {
  var self__ = this;
  var vec__8147 = p__8146;
  var x = cljs.core.nth.call(null, vec__8147, 0, null);
  var y = cljs.core.nth.call(null, vec__8147, 1, null);
  var z = cljs.core.nth.call(null, vec__8147, 2, null);
  var ___$1 = this;
  var s = Math.sin.call(null, theta);
  var c = Math.cos.call(null, theta);
  var sx = s * x;
  var sy = s * y;
  var sz = s * z;
  var t = 1 - c;
  var tx = t * x;
  var ty = t * y;
  var b00 = tx * x + c;
  var b01 = tx * y + sz;
  var b02 = tx * z - sy;
  var b10 = ty * x - sz;
  var b11 = ty * y + c;
  var b12 = ty * z + sx;
  var b20 = tx * z + sy;
  var b21 = ty * z - sx;
  var b22 = t * z * z + c;
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00 * b00 + self__.m10 * b01 + self__.m20 * b02, self__.m01 * b00 + self__.m11 * b01 + self__.m21 * b02, self__.m02 * b00 + self__.m12 * b01 + self__.m22 * b02, self__.m03 * b00 + self__.m13 * b01 + self__.m23 * b02, self__.m00 * b10 + self__.m10 * b11 + self__.m20 * b12, self__.m01 * b10 + self__.m11 * b11 + self__.m21 * b12, self__.m02 * b10 + self__.m12 * b11 + self__.m22 * b12, self__.m03 * b10 + self__.m13 * b11 + self__.m23 * b12, self__.m00 * 
  b20 + self__.m10 * b21 + self__.m20 * b22, self__.m01 * b20 + self__.m11 * b21 + self__.m21 * b22, self__.m02 * b20 + self__.m12 * b21 + self__.m22 * b22, self__.m03 * b20 + self__.m13 * b21 + self__.m23 * b22, self__.m30, self__.m31, self__.m32, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 15, k)) {
    var G__8148 = k | 0;
    if (cljs.core._EQ_.call(null, 0, G__8148)) {
      return self__.m00;
    } else {
      if (cljs.core._EQ_.call(null, 7, G__8148)) {
        return self__.m13;
      } else {
        if (cljs.core._EQ_.call(null, 1, G__8148)) {
          return self__.m01;
        } else {
          if (cljs.core._EQ_.call(null, 4, G__8148)) {
            return self__.m10;
          } else {
            if (cljs.core._EQ_.call(null, 15, G__8148)) {
              return self__.m33;
            } else {
              if (cljs.core._EQ_.call(null, 13, G__8148)) {
                return self__.m31;
              } else {
                if (cljs.core._EQ_.call(null, 6, G__8148)) {
                  return self__.m12;
                } else {
                  if (cljs.core._EQ_.call(null, 3, G__8148)) {
                    return self__.m03;
                  } else {
                    if (cljs.core._EQ_.call(null, 12, G__8148)) {
                      return self__.m30;
                    } else {
                      if (cljs.core._EQ_.call(null, 2, G__8148)) {
                        return self__.m02;
                      } else {
                        if (cljs.core._EQ_.call(null, 11, G__8148)) {
                          return self__.m23;
                        } else {
                          if (cljs.core._EQ_.call(null, 9, G__8148)) {
                            return self__.m21;
                          } else {
                            if (cljs.core._EQ_.call(null, 5, G__8148)) {
                              return self__.m11;
                            } else {
                              if (cljs.core._EQ_.call(null, 14, G__8148)) {
                                return self__.m32;
                              } else {
                                if (cljs.core._EQ_.call(null, 10, G__8148)) {
                                  return self__.m22;
                                } else {
                                  if (cljs.core._EQ_.call(null, 8, G__8148)) {
                                    return self__.m20;
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(k | 0)].join(""));
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, k);
  }
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 15, k)) {
    var G__8149 = k | 0;
    if (cljs.core._EQ_.call(null, 0, G__8149)) {
      return self__.m00;
    } else {
      if (cljs.core._EQ_.call(null, 7, G__8149)) {
        return self__.m13;
      } else {
        if (cljs.core._EQ_.call(null, 1, G__8149)) {
          return self__.m01;
        } else {
          if (cljs.core._EQ_.call(null, 4, G__8149)) {
            return self__.m10;
          } else {
            if (cljs.core._EQ_.call(null, 15, G__8149)) {
              return self__.m33;
            } else {
              if (cljs.core._EQ_.call(null, 13, G__8149)) {
                return self__.m31;
              } else {
                if (cljs.core._EQ_.call(null, 6, G__8149)) {
                  return self__.m12;
                } else {
                  if (cljs.core._EQ_.call(null, 3, G__8149)) {
                    return self__.m03;
                  } else {
                    if (cljs.core._EQ_.call(null, 12, G__8149)) {
                      return self__.m30;
                    } else {
                      if (cljs.core._EQ_.call(null, 2, G__8149)) {
                        return self__.m02;
                      } else {
                        if (cljs.core._EQ_.call(null, 11, G__8149)) {
                          return self__.m23;
                        } else {
                          if (cljs.core._EQ_.call(null, 9, G__8149)) {
                            return self__.m21;
                          } else {
                            if (cljs.core._EQ_.call(null, 5, G__8149)) {
                              return self__.m11;
                            } else {
                              if (cljs.core._EQ_.call(null, 14, G__8149)) {
                                return self__.m32;
                              } else {
                                if (cljs.core._EQ_.call(null, 10, G__8149)) {
                                  return self__.m22;
                                } else {
                                  if (cljs.core._EQ_.call(null, 8, G__8149)) {
                                    return self__.m20;
                                  } else {
                                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(k | 0)].join(""));
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return nf;
  }
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.m01, self__.m02, self__.m03, self__.m10, self__.m11, self__.m12, self__.m13, self__.m20, self__.m21, self__.m22, self__.m23, self__.m30, self__.m31, self__.m32, self__.m33], null));
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 16;
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PDeterminant$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PDeterminant$determinant$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var b00 = self__.m00 * self__.m11 - self__.m01 * self__.m10;
  var b01 = self__.m00 * self__.m12 - self__.m02 * self__.m10;
  var b02 = self__.m00 * self__.m13 - self__.m03 * self__.m10;
  var b03 = self__.m01 * self__.m12 - self__.m02 * self__.m11;
  var b04 = self__.m01 * self__.m13 - self__.m03 * self__.m11;
  var b05 = self__.m02 * self__.m13 - self__.m03 * self__.m12;
  var b06 = self__.m20 * self__.m31 - self__.m21 * self__.m30;
  var b07 = self__.m20 * self__.m32 - self__.m22 * self__.m30;
  var b08 = self__.m20 * self__.m33 - self__.m23 * self__.m30;
  var b09 = self__.m21 * self__.m32 - self__.m22 * self__.m31;
  var b10 = self__.m21 * self__.m33 - self__.m23 * self__.m31;
  var b11 = self__.m22 * self__.m33 - self__.m23 * self__.m32;
  return b00 * b11 - b01 * b10 - b04 * b07 + (b02 * b09 + b03 * b08 + b05 * b06);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.matrix.hash_matrix.call(null, ___$1);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.sequential_QMARK_.call(null, o) && cljs.core._EQ_.call(null, 16, cljs.core.count.call(null, o))) {
    return cljs.core.every_QMARK_.call(null, function(___$1) {
      return function(p1__8143_SHARP_) {
        return cljs.core._EQ_.call(null, p1__8143_SHARP_.call(null, 0), p1__8143_SHARP_.call(null, 1));
      };
    }(___$1), cljs.core.map.call(null, cljs.core.vector, ___$1, o));
  } else {
    return false;
  }
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PInvert$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PInvert$invert$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var n00 = self__.m00 * self__.m11 - self__.m01 * self__.m10;
  var n01 = self__.m00 * self__.m12 - self__.m02 * self__.m10;
  var n02 = self__.m00 * self__.m13 - self__.m03 * self__.m10;
  var n03 = self__.m01 * self__.m12 - self__.m02 * self__.m11;
  var n04 = self__.m01 * self__.m13 - self__.m03 * self__.m11;
  var n05 = self__.m02 * self__.m13 - self__.m03 * self__.m12;
  var n06 = self__.m20 * self__.m31 - self__.m21 * self__.m30;
  var n07 = self__.m20 * self__.m32 - self__.m22 * self__.m30;
  var n08 = self__.m20 * self__.m33 - self__.m23 * self__.m30;
  var n09 = self__.m21 * self__.m32 - self__.m22 * self__.m31;
  var n10 = self__.m21 * self__.m33 - self__.m23 * self__.m31;
  var n11 = self__.m22 * self__.m33 - self__.m23 * self__.m32;
  var d = n00 * n11 - n01 * n10 - n04 * n07 + (n02 * n09 + n03 * n08 + n05 * n06);
  if (d === 0) {
    return null;
  } else {
    var invd = 1 / d;
    return new thi.ng.geom.core.matrix.Matrix44((self__.m11 * n11 - self__.m12 * n10 + self__.m13 * n09) * invd, (self__.m02 * n10 - self__.m03 * n09 + -self__.m01 * n11) * invd, (self__.m31 * n05 - self__.m32 * n04 + self__.m33 * n03) * invd, (self__.m22 * n04 - self__.m23 * n03 + -self__.m21 * n05) * invd, (self__.m12 * n08 - self__.m13 * n07 + -self__.m10 * n11) * invd, (self__.m00 * n11 - self__.m02 * n08 + self__.m03 * n07) * invd, (self__.m32 * n02 - self__.m33 * n01 + -self__.m30 * n05) * 
    invd, (self__.m20 * n05 - self__.m22 * n02 + self__.m23 * n01) * invd, (self__.m10 * n10 - self__.m11 * n08 + self__.m13 * n06) * invd, (self__.m01 * n08 - self__.m03 * n06 + -self__.m00 * n10) * invd, (self__.m30 * n04 - self__.m31 * n02 + self__.m33 * n00) * invd, (self__.m21 * n02 - self__.m23 * n00 + -self__.m20 * n04) * invd, (self__.m11 * n07 - self__.m12 * n06 + -self__.m10 * n09) * invd, (self__.m00 * n09 - self__.m01 * n07 + self__.m02 * n06) * invd, (self__.m31 * n01 - self__.m32 * 
    n00 + -self__.m30 * n03) * invd, (self__.m20 * n03 - self__.m21 * n01 + self__.m22 * n00) * invd);
  }
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PMathOps$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$2 = function(_, m) {
  var self__ = this;
  var ___$1 = this;
  var m__$1 = m;
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00 * m__$1.m00 + self__.m10 * m__$1.m01 + self__.m20 * m__$1.m02 + self__.m30 * m__$1.m03, self__.m01 * m__$1.m00 + self__.m11 * m__$1.m01 + self__.m21 * m__$1.m02 + self__.m31 * m__$1.m03, self__.m02 * m__$1.m00 + self__.m12 * m__$1.m01 + self__.m22 * m__$1.m02 + self__.m32 * m__$1.m03, self__.m03 * m__$1.m00 + self__.m13 * m__$1.m01 + self__.m23 * m__$1.m02 + self__.m33 * m__$1.m03, self__.m00 * m__$1.m10 + self__.m10 * m__$1.m11 + self__.m20 * 
  m__$1.m12 + self__.m30 * m__$1.m13, self__.m01 * m__$1.m10 + self__.m11 * m__$1.m11 + self__.m21 * m__$1.m12 + self__.m31 * m__$1.m13, self__.m02 * m__$1.m10 + self__.m12 * m__$1.m11 + self__.m22 * m__$1.m12 + self__.m32 * m__$1.m13, self__.m03 * m__$1.m10 + self__.m13 * m__$1.m11 + self__.m23 * m__$1.m12 + self__.m33 * m__$1.m13, self__.m00 * m__$1.m20 + self__.m10 * m__$1.m21 + self__.m20 * m__$1.m22 + self__.m30 * m__$1.m23, self__.m01 * m__$1.m20 + self__.m11 * m__$1.m21 + self__.m21 * m__$1.m22 + 
  self__.m31 * m__$1.m23, self__.m02 * m__$1.m20 + self__.m12 * m__$1.m21 + self__.m22 * m__$1.m22 + self__.m32 * m__$1.m23, self__.m03 * m__$1.m20 + self__.m13 * m__$1.m21 + self__.m23 * m__$1.m22 + self__.m33 * m__$1.m23, self__.m00 * m__$1.m30 + self__.m10 * m__$1.m31 + self__.m20 * m__$1.m32 + self__.m30 * m__$1.m33, self__.m01 * m__$1.m30 + self__.m11 * m__$1.m31 + self__.m21 * m__$1.m32 + self__.m31 * m__$1.m33, self__.m02 * m__$1.m30 + self__.m12 * m__$1.m31 + self__.m22 * m__$1.m32 + self__.m32 * 
  m__$1.m33, self__.m03 * m__$1.m30 + self__.m13 * m__$1.m31 + self__.m23 * m__$1.m32 + self__.m33 * m__$1.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.next.call(null, ___$1);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.m00;
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var self__ = this;
  var ___$1 = this;
  var vec__8150 = typeof t === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [t, t, t], null) : t;
  var x = cljs.core.nth.call(null, vec__8150, 0, null);
  var y = cljs.core.nth.call(null, vec__8150, 1, null);
  var z = cljs.core.nth.call(null, vec__8150, 2, null);
  return thi.ng.geom.core.translate.call(null, ___$1, x, y, z);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PTranslate$translate$arity$4 = function(_, x, y, z) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00, self__.m01, self__.m02, self__.m03, self__.m10, self__.m11, self__.m12, self__.m13, self__.m20, self__.m21, self__.m22, self__.m23, self__.m00 * x + self__.m10 * y + self__.m20 * z + self__.m30, self__.m01 * x + self__.m11 * y + self__.m21 * z + self__.m31, self__.m02 * x + self__.m12 * y + self__.m22 * z + self__.m32, self__.m03 * x + self__.m13 * y + self__.m23 * z + self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  var vec__8151 = typeof s === "number" ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, s, s], null) : s;
  var x = cljs.core.nth.call(null, vec__8151, 0, null);
  var y = cljs.core.nth.call(null, vec__8151, 1, null);
  var z = cljs.core.nth.call(null, vec__8151, 2, null);
  return thi.ng.geom.core.scale.call(null, ___$1, x, y, z);
};
thi.ng.geom.core.matrix.Matrix44.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, x, y, z) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.matrix.Matrix44(self__.m00 * x, self__.m01 * x, self__.m02 * x, self__.m03 * x, self__.m10 * y, self__.m11 * y, self__.m12 * y, self__.m13 * y, self__.m20 * z, self__.m21 * z, self__.m22 * z, self__.m23 * z, self__.m30, self__.m31, self__.m32, self__.m33);
};
thi.ng.geom.core.matrix.Matrix44.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, x) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.m00, self__.m01, self__.m02, self__.m03, self__.m10, self__.m11, self__.m12, self__.m13, self__.m20, self__.m21, self__.m22, self__.m23, self__.m30, self__.m31, self__.m32, self__.m33, x], null);
};
thi.ng.geom.core.matrix.__GT_Matrix44 = function __GT_Matrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  return new thi.ng.geom.core.matrix.Matrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
};
thi.ng.geom.core.matrix.M32 = new thi.ng.geom.core.matrix.Matrix32(1, 0, 0, 0, 1, 0);
thi.ng.geom.core.matrix.M44 = new thi.ng.geom.core.matrix.Matrix44(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
thi.ng.geom.core.matrix.matrix32 = function() {
  var matrix32 = null;
  var matrix32__0 = function() {
    return thi.ng.geom.core.matrix.M32;
  };
  var matrix32__1 = function(p__8152) {
    var vec__8154 = p__8152;
    var m00 = cljs.core.nth.call(null, vec__8154, 0, null);
    var m01 = cljs.core.nth.call(null, vec__8154, 1, null);
    var m02 = cljs.core.nth.call(null, vec__8154, 2, null);
    var m10 = cljs.core.nth.call(null, vec__8154, 3, null);
    var m11 = cljs.core.nth.call(null, vec__8154, 4, null);
    var m12 = cljs.core.nth.call(null, vec__8154, 5, null);
    return new thi.ng.geom.core.matrix.Matrix32(m00, m01, m02, m10, m11, m12);
  };
  var matrix32__6 = function(m00, m01, m02, m10, m11, m12) {
    return new thi.ng.geom.core.matrix.Matrix32(m00, m01, m02, m10, m11, m12);
  };
  matrix32 = function(m00, m01, m02, m10, m11, m12) {
    switch(arguments.length) {
      case 0:
        return matrix32__0.call(this);
      case 1:
        return matrix32__1.call(this, m00);
      case 6:
        return matrix32__6.call(this, m00, m01, m02, m10, m11, m12);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matrix32.cljs$core$IFn$_invoke$arity$0 = matrix32__0;
  matrix32.cljs$core$IFn$_invoke$arity$1 = matrix32__1;
  matrix32.cljs$core$IFn$_invoke$arity$6 = matrix32__6;
  return matrix32;
}();
thi.ng.geom.core.matrix.matrix44 = function() {
  var matrix44 = null;
  var matrix44__0 = function() {
    return thi.ng.geom.core.matrix.M44;
  };
  var matrix44__1 = function(p__8155) {
    var vec__8157 = p__8155;
    var m00 = cljs.core.nth.call(null, vec__8157, 0, null);
    var m01 = cljs.core.nth.call(null, vec__8157, 1, null);
    var m02 = cljs.core.nth.call(null, vec__8157, 2, null);
    var m03 = cljs.core.nth.call(null, vec__8157, 3, null);
    var m10 = cljs.core.nth.call(null, vec__8157, 4, null);
    var m11 = cljs.core.nth.call(null, vec__8157, 5, null);
    var m12 = cljs.core.nth.call(null, vec__8157, 6, null);
    var m13 = cljs.core.nth.call(null, vec__8157, 7, null);
    var m20 = cljs.core.nth.call(null, vec__8157, 8, null);
    var m21 = cljs.core.nth.call(null, vec__8157, 9, null);
    var m22 = cljs.core.nth.call(null, vec__8157, 10, null);
    var m23 = cljs.core.nth.call(null, vec__8157, 11, null);
    var m30 = cljs.core.nth.call(null, vec__8157, 12, null);
    var m31 = cljs.core.nth.call(null, vec__8157, 13, null);
    var m32 = cljs.core.nth.call(null, vec__8157, 14, null);
    var m33 = cljs.core.nth.call(null, vec__8157, 15, null);
    return new thi.ng.geom.core.matrix.Matrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
  };
  var matrix44__16 = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    return new thi.ng.geom.core.matrix.Matrix44(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
  };
  matrix44 = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
    switch(arguments.length) {
      case 0:
        return matrix44__0.call(this);
      case 1:
        return matrix44__1.call(this, m00);
      case 16:
        return matrix44__16.call(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matrix44.cljs$core$IFn$_invoke$arity$0 = matrix44__0;
  matrix44.cljs$core$IFn$_invoke$arity$1 = matrix44__1;
  matrix44.cljs$core$IFn$_invoke$arity$16 = matrix44__16;
  return matrix44;
}();
thi.ng.geom.core.matrix.matrix44__GT_matrix33 = function matrix44__GT_matrix33(p__8158) {
  var vec__8160 = p__8158;
  var m00 = cljs.core.nth.call(null, vec__8160, 0, null);
  var m01 = cljs.core.nth.call(null, vec__8160, 1, null);
  var m02 = cljs.core.nth.call(null, vec__8160, 2, null);
  var _ = cljs.core.nth.call(null, vec__8160, 3, null);
  var m10 = cljs.core.nth.call(null, vec__8160, 4, null);
  var m11 = cljs.core.nth.call(null, vec__8160, 5, null);
  var m12 = cljs.core.nth.call(null, vec__8160, 6, null);
  var ___$1 = cljs.core.nth.call(null, vec__8160, 7, null);
  var m20 = cljs.core.nth.call(null, vec__8160, 8, null);
  var m21 = cljs.core.nth.call(null, vec__8160, 9, null);
  var m22 = cljs.core.nth.call(null, vec__8160, 10, null);
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [m00, m01, m02, m10, m11, m12, m20, m21, m22], null);
};
thi.ng.geom.core.matrix.matrix44__GT_matrix33_rot = function matrix44__GT_matrix33_rot(p__8161) {
  var vec__8163 = p__8161;
  var m00 = cljs.core.nth.call(null, vec__8163, 0, null);
  var m01 = cljs.core.nth.call(null, vec__8163, 1, null);
  var m02 = cljs.core.nth.call(null, vec__8163, 2, null);
  var _ = cljs.core.nth.call(null, vec__8163, 3, null);
  var m10 = cljs.core.nth.call(null, vec__8163, 4, null);
  var m11 = cljs.core.nth.call(null, vec__8163, 5, null);
  var m12 = cljs.core.nth.call(null, vec__8163, 6, null);
  var ___$1 = cljs.core.nth.call(null, vec__8163, 7, null);
  var m20 = cljs.core.nth.call(null, vec__8163, 8, null);
  var m21 = cljs.core.nth.call(null, vec__8163, 9, null);
  var m22 = cljs.core.nth.call(null, vec__8163, 10, null);
  var b01 = m22 * m11 - m12 * m21;
  var b11 = m12 * m20 - m22 * m10;
  var b21 = m21 * m10 - m11 * m20;
  var invd = 1 / (m00 * b01 + m01 * b11 + m02 * b21);
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [b01 * invd, b11 * invd, b21 * invd, (m02 * m21 - m22 * m01) * invd, (m22 * m00 - m02 * m20) * invd, (m01 * m20 - m21 * m00) * invd, (m12 * m01 - m02 * m11) * invd, (m02 * m10 - m12 * m00) * invd, (m11 * m00 - m01 * m10) * invd], null);
};
thi.ng.geom.core.matrix.frustum = function frustum(l, t, r, b, n, f) {
  var dx = 1 / (r - l);
  var dy = 1 / (t - b);
  var dz = 1 / (n - f);
  var n2 = 2 * n;
  return new thi.ng.geom.core.matrix.Matrix44(n2 * dx, 0, 0, 0, 0, n2 * dy, 0, 0, (l + r) * dx, (t + b) * dy, (n + f) * dz, -1, 0, 0, n2 * f * dz, 0);
};
thi.ng.geom.core.matrix.frustum_bounds = function frustum_bounds(fovy, aspect, near) {
  var top = near * Math.tan.call(null, 0.5 * thi.ng.common.math.core.radians.call(null, fovy));
  var right = top * aspect;
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "left", "left", 1017222009), -right, new cljs.core.Keyword(null, "right", "right", 1122416014), right, new cljs.core.Keyword(null, "top", "top", 1014019271), top, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), -top], null);
};
thi.ng.geom.core.matrix.ortho = function ortho(l, t, r, b, n, f) {
  var dx = 1 / (l - r);
  var dy = 1 / (b - t);
  var dz = 1 / (n - f);
  return new thi.ng.geom.core.matrix.Matrix44(-2 * dx, 0, 0, 0, 0, -2 * dy, 0, 0, 0, 0, 2 * dz, 0, (l + r) * dx, (t + b) * dy, (n + f) * dz, 1);
};
thi.ng.geom.core.matrix.perspective = function perspective(fovy, aspect, near, far) {
  var f = 1 / Math.tan.call(null, 0.5 * thi.ng.common.math.core.radians.call(null, fovy));
  var nf = 1 / (near - far);
  return new thi.ng.geom.core.matrix.Matrix44(f / aspect, 0, 0, 0, 0, f, 0, 0, 0, 0, (near + far) * nf, -1, 0, 0, 2 * near * far * nf, 0);
};
thi.ng.geom.core.matrix.perspective_frustum = function perspective_frustum(fov, aspect, near, far) {
  var map__8165 = thi.ng.geom.core.matrix.frustum_bounds.call(null, fov, aspect, near);
  var map__8165__$1 = cljs.core.seq_QMARK_.call(null, map__8165) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8165) : map__8165;
  var bottom = cljs.core.get.call(null, map__8165__$1, new cljs.core.Keyword(null, "bottom", "bottom", 3925642653));
  var top = cljs.core.get.call(null, map__8165__$1, new cljs.core.Keyword(null, "top", "top", 1014019271));
  var right = cljs.core.get.call(null, map__8165__$1, new cljs.core.Keyword(null, "right", "right", 1122416014));
  var left = cljs.core.get.call(null, map__8165__$1, new cljs.core.Keyword(null, "left", "left", 1017222009));
  return thi.ng.geom.core.matrix.frustum.call(null, left, top, right, bottom, near, far);
};
thi.ng.geom.core.matrix.look_at = function look_at(eye, target, up) {
  var dir = thi.ng.geom.core._.call(null, eye, target);
  if (thi.ng.common.math.core.delta_EQ_.call(null, thi.ng.geom.core.vector.V3, dir)) {
    return thi.ng.geom.core.matrix.M44;
  } else {
    var vec__8169 = thi.ng.geom.core.normalize.call(null, dir);
    var zx = cljs.core.nth.call(null, vec__8169, 0, null);
    var zy = cljs.core.nth.call(null, vec__8169, 1, null);
    var zz = cljs.core.nth.call(null, vec__8169, 2, null);
    var z = vec__8169;
    var vec__8170 = thi.ng.geom.core.utils.ortho_normal.call(null, up, z);
    var xx = cljs.core.nth.call(null, vec__8170, 0, null);
    var xy = cljs.core.nth.call(null, vec__8170, 1, null);
    var xz = cljs.core.nth.call(null, vec__8170, 2, null);
    var x = vec__8170;
    var vec__8171 = thi.ng.geom.core.utils.ortho_normal.call(null, z, x);
    var yx = cljs.core.nth.call(null, vec__8171, 0, null);
    var yy = cljs.core.nth.call(null, vec__8171, 1, null);
    var yz = cljs.core.nth.call(null, vec__8171, 2, null);
    var y = vec__8171;
    return new thi.ng.geom.core.matrix.Matrix44(xx, yx, zx, 0, xy, yy, zy, 0, xz, yz, zz, 0, -thi.ng.geom.core.dot.call(null, x, eye), -thi.ng.geom.core.dot.call(null, y, eye), -thi.ng.geom.core.dot.call(null, z, eye), 1);
  }
};
thi.ng.geom.core.matrix.unproject = function unproject(v, vmat, pmat, p__8172) {
  var map__8174 = p__8172;
  var map__8174__$1 = cljs.core.seq_QMARK_.call(null, map__8174) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8174) : map__8174;
  var height = cljs.core.get.call(null, map__8174__$1, new cljs.core.Keyword(null, "height", "height", 4087841945));
  var width = cljs.core.get.call(null, map__8174__$1, new cljs.core.Keyword(null, "width", "width", 1127031096));
  var p = cljs.core.get.call(null, map__8174__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var x = (v.call(null, 0) - p.call(null, 0)) * (2 / width) - 1;
  var y = (v.call(null, 1) - p.call(null, 1)) * (2 / height) - 1;
  var z = v.call(null, 2) * 2 - 1;
  var vpm = thi.ng.geom.core._STAR_.call(null, pmat, vmat);
  if (cljs.core.truth_(thi.ng.geom.core.invert.call(null, vpm))) {
    var v_SINGLEQUOTE_ = thi.ng.geom.core.transform_vector.call(null, vpm, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y, z, 1], null));
    if (!(v_SINGLEQUOTE_.call(null, 3) === 0)) {
      return thi.ng.geom.core.div.call(null, thi.ng.geom.core.vector.vec3.call(null, v_SINGLEQUOTE_), v_SINGLEQUOTE_.call(null, 3));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
goog.provide("thi.ng.geom.gmesh");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.core.utils");
goog.require("clojure.set");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("clojure.core.reducers");
goog.require("clojure.core.reducers");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("clojure.set");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.common.data.core");
thi.ng.geom.gmesh.add_face = function add_face(p__7830, verts) {
  var map__7834 = p__7830;
  var map__7834__$1 = cljs.core.seq_QMARK_.call(null, map__7834) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7834) : map__7834;
  var mesh = map__7834__$1;
  var faces = cljs.core.get.call(null, map__7834__$1, new cljs.core.Keyword(null, "faces", "faces", 1111091496));
  var edges = cljs.core.get.call(null, map__7834__$1, new cljs.core.Keyword(null, "edges", "edges", 1110261192));
  var vertices = cljs.core.get.call(null, map__7834__$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219));
  var f = cljs.core.mapv.call(null, function(map__7834, map__7834__$1, mesh, faces, edges, vertices) {
    return function(p1__7829_SHARP_) {
      return cljs.core.get.call(null, cljs.core.find.call(null, vertices, p1__7829_SHARP_), 0, p1__7829_SHARP_);
    };
  }(map__7834, map__7834__$1, mesh, faces, edges, vertices), verts);
  if (cljs.core.get.call(null, faces, f) == null && cljs.core._EQ_.call(null, cljs.core.count.call(null, f), cljs.core.count.call(null, cljs.core.set.call(null, f)))) {
    var vertices__$1 = cljs.core.reduce.call(null, function(f, map__7834, map__7834__$1, mesh, faces, edges, vertices) {
      return function(acc, p__7835) {
        var vec__7836 = p__7835;
        var p = cljs.core.nth.call(null, vec__7836, 0, null);
        var c = cljs.core.nth.call(null, vec__7836, 1, null);
        var n = cljs.core.nth.call(null, vec__7836, 2, null);
        return thi.ng.common.data.core.index_kv.call(null, acc, c, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "next", "next", 1017282149), n, new cljs.core.Keyword(null, "prev", "prev", 1017353637), p, new cljs.core.Keyword(null, "f", "f", 1013904344), f], null));
      };
    }(f, map__7834, map__7834__$1, mesh, faces, edges, vertices), vertices, thi.ng.common.data.core.successive_nth.call(null, 3, thi.ng.common.data.core.wrap_seq.call(null, f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null, f)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, f)], null))));
    var edges__$1 = cljs.core.reduce.call(null, function(vertices__$1, f, map__7834, map__7834__$1, mesh, faces, edges, vertices) {
      return function(acc, pair) {
        return thi.ng.common.data.core.index_kv.call(null, acc, cljs.core.set.call(null, pair), f);
      };
    }(vertices__$1, f, map__7834, map__7834__$1, mesh, faces, edges, vertices), edges, thi.ng.common.data.core.successive_nth.call(null, 2, cljs.core.conj.call(null, f, cljs.core.first.call(null, f))));
    return cljs.core.assoc.call(null, mesh, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), vertices__$1, new cljs.core.Keyword(null, "edges", "edges", 1110261192), edges__$1, new cljs.core.Keyword(null, "faces", "faces", 1111091496), cljs.core.conj.call(null, faces, f));
  } else {
    return mesh;
  }
};
thi.ng.geom.gmesh.vertices_planar_QMARK_ = function vertices_planar_QMARK_(p__7838) {
  var vec__7840 = p__7838;
  var a = cljs.core.nth.call(null, vec__7840, 0, null);
  var b = cljs.core.nth.call(null, vec__7840, 1, null);
  var c = cljs.core.nth.call(null, vec__7840, 2, null);
  var verts = vec__7840;
  var or__3481__auto__ = cljs.core.count.call(null, verts) < 4;
  if (or__3481__auto__) {
    return or__3481__auto__;
  } else {
    var n = thi.ng.geom.core.utils.ortho_normal.call(null, a, b, c);
    return cljs.core.every_QMARK_.call(null, function(n, or__3481__auto__, vec__7840, a, b, c, verts) {
      return function(p1__7837_SHARP_) {
        return thi.ng.common.math.core.delta_EQ_.call(null, n, thi.ng.geom.core.utils.ortho_normal.call(null, p1__7837_SHARP_));
      };
    }(n, or__3481__auto__, vec__7840, a, b, c, verts), thi.ng.common.data.core.successive_nth.call(null, 3, cljs.core.conj.call(null, cljs.core.rest.call(null, verts), a)));
  }
};
thi.ng.geom.gmesh.face_neighbors_shared_edges = function face_neighbors_shared_edges(p__7841, f) {
  var map__7843 = p__7841;
  var map__7843__$1 = cljs.core.seq_QMARK_.call(null, map__7843) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7843) : map__7843;
  var edges = cljs.core.get.call(null, map__7843__$1, new cljs.core.Keyword(null, "edges", "edges", 1110261192));
  return cljs.core.reduce.call(null, function(map__7843, map__7843__$1, edges) {
    return function(acc, pair) {
      return cljs.core.into.call(null, acc, cljs.core.disj.call(null, edges.call(null, cljs.core.set.call(null, pair)), f));
    };
  }(map__7843, map__7843__$1, edges), cljs.core.PersistentVector.EMPTY, thi.ng.common.data.core.successive_nth.call(null, 2, cljs.core.conj.call(null, f, cljs.core.first.call(null, f))));
};
thi.ng.geom.gmesh.vertex_neighbors_STAR_ = function vertex_neighbors_STAR_(p__7844, v) {
  var map__7846 = p__7844;
  var map__7846__$1 = cljs.core.seq_QMARK_.call(null, map__7846) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7846) : map__7846;
  var vertices = cljs.core.get.call(null, map__7846__$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219));
  return clojure.set.union.call(null, thi.ng.common.data.core.value_set.call(null, new cljs.core.Keyword(null, "next", "next", 1017282149), vertices, v), thi.ng.common.data.core.value_set.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), vertices, v));
};
thi.ng.geom.gmesh.vertex_valence_STAR_ = function vertex_valence_STAR_(mesh, v) {
  return cljs.core.count.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(mesh), v)) + 1;
};
thi.ng.geom.gmesh.vertex_faces_STAR_ = function vertex_faces_STAR_(mesh, v) {
  return thi.ng.common.data.core.value_set.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(mesh), v);
};
thi.ng.geom.gmesh.remove_vertex_STAR_ = function remove_vertex_STAR_(mesh, v) {
  if (cljs.core.truth_(cljs.core.find.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(mesh), v))) {
    return cljs.core.reduce.call(null, thi.ng.geom.core.remove_face, mesh, thi.ng.geom.gmesh.vertex_faces_STAR_.call(null, mesh, v));
  } else {
    return mesh;
  }
};
thi.ng.geom.gmesh.replace_vertex_STAR_ = function() {
  var replace_vertex_STAR_ = null;
  var replace_vertex_STAR___3 = function(mesh, v, v2) {
    var vfaces = thi.ng.geom.gmesh.vertex_faces_STAR_.call(null, mesh, v);
    return replace_vertex_STAR_.call(null, cljs.core.reduce.call(null, thi.ng.geom.core.remove_face, mesh, vfaces), v, v2, vfaces);
  };
  var replace_vertex_STAR___4 = function(mesh, v, v2, faces) {
    return cljs.core.reduce.call(null, function(p1__7847_SHARP_, p2__7848_SHARP_) {
      return thi.ng.geom.gmesh.add_face.call(null, p1__7847_SHARP_, cljs.core.replace.call(null, new cljs.core.PersistentArrayMap.fromArray([v, v2], true, false), p2__7848_SHARP_));
    }, mesh, faces);
  };
  replace_vertex_STAR_ = function(mesh, v, v2, faces) {
    switch(arguments.length) {
      case 3:
        return replace_vertex_STAR___3.call(this, mesh, v, v2);
      case 4:
        return replace_vertex_STAR___4.call(this, mesh, v, v2, faces);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace_vertex_STAR_.cljs$core$IFn$_invoke$arity$3 = replace_vertex_STAR___3;
  replace_vertex_STAR_.cljs$core$IFn$_invoke$arity$4 = replace_vertex_STAR___4;
  return replace_vertex_STAR_;
}();
thi.ng.geom.gmesh.merge_vertices_STAR_ = function merge_vertices_STAR_(mesh, a, b) {
  if (cljs.core.truth_(thi.ng.geom.gmesh.vertex_neighbors_STAR_.call(null, mesh, a).call(null, b))) {
    var fa = thi.ng.geom.gmesh.vertex_faces_STAR_.call(null, mesh, a);
    var fb = thi.ng.geom.gmesh.vertex_faces_STAR_.call(null, mesh, b);
    var ab_isec = clojure.set.intersection.call(null, fa, fb);
    var a_xor = clojure.set.difference.call(null, fa, ab_isec);
    var b_xor = clojure.set.difference.call(null, fb, ab_isec);
    var mp = thi.ng.geom.core.mix.call(null, a, b);
    return thi.ng.geom.gmesh.replace_vertex_STAR_.call(null, thi.ng.geom.gmesh.replace_vertex_STAR_.call(null, cljs.core.reduce.call(null, thi.ng.geom.core.remove_face, mesh, clojure.set.union.call(null, ab_isec, a_xor, b_xor)), a, mp, a_xor), b, mp, b_xor);
  } else {
    return mesh;
  }
};
thi.ng.geom.gmesh.gmesh = function gmesh() {
  return thi.ng.geom.types.map__GT_GMesh.call(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "edges", "edges", 1110261192), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
  "normals", "normals", 3141522398), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "faces", "faces", 1111091496), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), cljs.core.PersistentArrayMap.EMPTY], null));
};
thi.ng.geom.gmesh.into_mesh = function() {
  var into_mesh = null;
  var into_mesh__1 = function(mesh_or_faces) {
    return into_mesh.call(null, thi.ng.geom.gmesh.gmesh.call(null), mesh_or_faces);
  };
  var into_mesh__2 = function(mesh, mesh_or_faces) {
    return cljs.core.reduce.call(null, thi.ng.geom.gmesh.add_face, mesh, function() {
      var G__7850 = mesh_or_faces;
      if (G__7850) {
        var bit__4131__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3481__auto__ = bit__4131__auto__;
          if (cljs.core.truth_(or__3481__auto__)) {
            return or__3481__auto__;
          } else {
            return G__7850.thi$ng$geom$core$PFaceAccess$;
          }
        }())) {
          return true;
        } else {
          if (!G__7850.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, thi.ng.geom.core.PFaceAccess, G__7850);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, thi.ng.geom.core.PFaceAccess, G__7850);
      }
    }() ? thi.ng.geom.core.faces.call(null, mesh_or_faces) : mesh_or_faces);
  };
  into_mesh = function(mesh, mesh_or_faces) {
    switch(arguments.length) {
      case 1:
        return into_mesh__1.call(this, mesh);
      case 2:
        return into_mesh__2.call(this, mesh, mesh_or_faces);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_mesh.cljs$core$IFn$_invoke$arity$1 = into_mesh__1;
  into_mesh.cljs$core$IFn$_invoke$arity$2 = into_mesh__2;
  return into_mesh;
}();
thi.ng.geom.gmesh.lathe_mesh = function() {
  var lathe_mesh__delegate = function(points, res, phi, rot_fn, p__7852) {
    var vec__7860 = p__7852;
    var face_fn = cljs.core.nth.call(null, vec__7860, 0, null);
    var strips = cljs.core.mapv.call(null, function(vec__7860, face_fn) {
      return function(i) {
        var theta = i * phi;
        return cljs.core.mapv.call(null, function(theta, vec__7860, face_fn) {
          return function(p1__7851_SHARP_) {
            var p = rot_fn.call(null, p1__7851_SHARP_, theta);
            if (thi.ng.common.math.core.delta_EQ_.call(null, p, p1__7851_SHARP_, thi.ng.common.math.core._STAR_eps_STAR_)) {
              return p1__7851_SHARP_;
            } else {
              return p;
            }
          };
        }(theta, vec__7860, face_fn), points);
      };
    }(vec__7860, face_fn), cljs.core.butlast.call(null, thi.ng.common.math.core.norm_range.call(null, res)));
    var strips__$1 = thi.ng.common.math.core.delta_EQ_.call(null, phi, thi.ng.common.math.core.TWO_PI) ? cljs.core.conj.call(null, strips, cljs.core.first.call(null, strips)) : strips;
    var make_face = function(strips, strips__$1, vec__7860, face_fn) {
      return function(p__7861, p__7862) {
        var vec__7863 = p__7861;
        var a1 = cljs.core.nth.call(null, vec__7863, 0, null);
        var a2 = cljs.core.nth.call(null, vec__7863, 1, null);
        var vec__7864 = p__7862;
        var b1 = cljs.core.nth.call(null, vec__7864, 0, null);
        var b2 = cljs.core.nth.call(null, vec__7864, 1, null);
        var f = cljs.core.count.call(null, cljs.core.PersistentHashSet.fromArray.call(null, [a1, a2, b1, b2], true)) < 3 ? null : cljs.core._EQ_.call(null, a1, b1) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b1, b2, a2], null) : cljs.core._EQ_.call(null, a2, b2) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [b1, a2, a1], null) : new cljs.core.Keyword(null, "default", "default", 2558708147) ? new cljs.core.PersistentVector(null, 
        4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b1, b2, a2, a1], null) : null;
        if (cljs.core.truth_(function() {
          var and__3469__auto__ = f;
          if (cljs.core.truth_(and__3469__auto__)) {
            return face_fn;
          } else {
            return and__3469__auto__;
          }
        }())) {
          return face_fn.call(null, f);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null);
        }
      };
    }(strips, strips__$1, vec__7860, face_fn);
    return thi.ng.geom.gmesh.into_mesh.call(null, thi.ng.geom.gmesh.gmesh.call(null), cljs.core.mapcat.call(null, function(strips, strips__$1, make_face, vec__7860, face_fn) {
      return function(p__7865) {
        var vec__7866 = p__7865;
        var sa = cljs.core.nth.call(null, vec__7866, 0, null);
        var sb = cljs.core.nth.call(null, vec__7866, 1, null);
        return cljs.core.mapcat.call(null, make_face, thi.ng.common.data.core.successive_nth.call(null, 2, sa), thi.ng.common.data.core.successive_nth.call(null, 2, sb));
      };
    }(strips, strips__$1, make_face, vec__7860, face_fn), thi.ng.common.data.core.successive_nth.call(null, 2, strips__$1)));
  };
  var lathe_mesh = function(points, res, phi, rot_fn, var_args) {
    var p__7852 = null;
    if (arguments.length > 4) {
      p__7852 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
    }
    return lathe_mesh__delegate.call(this, points, res, phi, rot_fn, p__7852);
  };
  lathe_mesh.cljs$lang$maxFixedArity = 4;
  lathe_mesh.cljs$lang$applyTo = function(arglist__7867) {
    var points = cljs.core.first(arglist__7867);
    arglist__7867 = cljs.core.next(arglist__7867);
    var res = cljs.core.first(arglist__7867);
    arglist__7867 = cljs.core.next(arglist__7867);
    var phi = cljs.core.first(arglist__7867);
    arglist__7867 = cljs.core.next(arglist__7867);
    var rot_fn = cljs.core.first(arglist__7867);
    var p__7852 = cljs.core.rest(arglist__7867);
    return lathe_mesh__delegate(points, res, phi, rot_fn, p__7852);
  };
  lathe_mesh.cljs$core$IFn$_invoke$arity$variadic = lathe_mesh__delegate;
  return lathe_mesh;
}();
thi.ng.geom.gmesh.saddle = function saddle(s) {
  var sv = thi.ng.geom.core.vector.vec3.call(null, s);
  return cljs.core.reduce.call(null, function(sv) {
    return function(m, p__7870) {
      var vec__7871 = p__7870;
      var p = cljs.core.nth.call(null, vec__7871, 0, null);
      var flags = cljs.core.nth.call(null, vec__7871, 1, null);
      return thi.ng.geom.gmesh.into_mesh.call(null, m, thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.types.AABB.call(null, p, s), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "flags", "flags", 1111417337), flags], null)));
    };
  }(sv), thi.ng.geom.gmesh.gmesh.call(null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.vec3.call(null), new cljs.core.Keyword(null, "ewsfb", "ewsfb", 1110838767)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.vec3.call(null, 0, s, 0), new cljs.core.Keyword(null, "wfb", "wfb", 1014021861)], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.vec3.call(null, s, s, 0), new cljs.core.Keyword(null, "ensfb", "ensfb", 1110570648)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.vec3.call(null, 0, s * 2, 0), new cljs.core.Keyword(null, "ewnfb", "ewnfb", 1110833962)], null)], null));
};
thi.ng.geom.gmesh.map_faces = function map_faces(f, mesh) {
  return thi.ng.geom.gmesh.into_mesh.call(null, thi.ng.geom.gmesh.gmesh.call(null), cljs.core.mapcat.call(null, f, (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(mesh)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var ___$1 = this;
  return cljs.core.reduce.call(null, function(___$1) {
    return function(mesh, f) {
      return thi.ng.geom.gmesh.add_face.call(null, mesh, cljs.core.mapv.call(null, function(___$1) {
        return function(p1__7875_SHARP_) {
          return thi.ng.geom.core.transform_vector.call(null, m, p1__7875_SHARP_);
        };
      }(___$1), f));
    };
  }(___$1), thi.ng.geom.gmesh.gmesh.call(null), (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.center.call(null, ___$1, thi.ng.geom.core.vector.vec3.call(null));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(_, o) {
  var ___$1 = this;
  return thi.ng.geom.core.transform.call(null, ___$1, thi.ng.geom.core.translate.call(null, thi.ng.geom.core.matrix.M44, thi.ng.geom.core._.call(null, o, thi.ng.geom.core.centroid.call(null, ___$1))));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.centroid.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFlip$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFlip$flip$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.map_faces.call(null, function(___$1) {
    return function(f) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vec.call(null, cljs.core.rseq.call(null, f))], null);
    };
  }(___$1), ___$1);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PEdgeAccess$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PEdgeAccess$edges$arity$1 = function(_) {
  var ___$1 = this;
  return cljs.core.keys.call(null, (new cljs.core.Keyword(null, "edges", "edges", 1110261192)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PNormalAccess$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PNormalAccess$face_normals$arity$1 = function(_) {
  var ___$1 = this;
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(___$1))) {
    return(new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(___$1);
  } else {
    return(new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(thi.ng.geom.core.compute_face_normals.call(null, ___$1));
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PNormalAccess$vertex_normals$arity$1 = function(_) {
  var ___$1 = this;
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(___$1))) {
    return(new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(___$1);
  } else {
    return(new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(thi.ng.geom.core.compute_vertex_normals.call(null, ___$1));
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PNormalAccess$compute_face_normals$arity$1 = function(_) {
  var ___$1 = this;
  var norms = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  var fnorms = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var faces = (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1);
  while (true) {
    if (cljs.core.truth_(faces)) {
      var vec__7876 = cljs.core.first.call(null, faces);
      var a = cljs.core.nth.call(null, vec__7876, 0, null);
      var b = cljs.core.nth.call(null, vec__7876, 1, null);
      var c = cljs.core.nth.call(null, vec__7876, 2, null);
      var f = vec__7876;
      var vec__7877 = thi.ng.common.data.core.index_BANG_.call(null, norms, thi.ng.geom.core.utils.ortho_normal.call(null, a, b, c));
      var norms__$1 = cljs.core.nth.call(null, vec__7877, 0, null);
      var n = cljs.core.nth.call(null, vec__7877, 1, null);
      var G__7888 = norms__$1;
      var G__7889 = cljs.core.assoc_BANG_.call(null, fnorms, f, n);
      var G__7890 = cljs.core.next.call(null, faces);
      norms = G__7888;
      fnorms = G__7889;
      faces = G__7890;
      continue;
    } else {
      return cljs.core.assoc.call(null, ___$1, new cljs.core.Keyword(null, "normals", "normals", 3141522398), cljs.core.persistent_BANG_.call(null, norms), new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), cljs.core.persistent_BANG_.call(null, fnorms));
    }
    break;
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PNormalAccess$compute_vertex_normals$arity$1 = function(_) {
  var ___$1 = this;
  var ___$2 = cljs.core.seq.call(null, (new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(___$1)) ? ___$1 : thi.ng.geom.core.compute_face_normals.call(null, ___$1);
  var map__7878 = ___$2;
  var map__7878__$1 = cljs.core.seq_QMARK_.call(null, map__7878) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7878) : map__7878;
  var fnormals = cljs.core.get.call(null, map__7878__$1, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136));
  var normals = cljs.core.get.call(null, map__7878__$1, new cljs.core.Keyword(null, "normals", "normals", 3141522398));
  var vertices = cljs.core.get.call(null, map__7878__$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219));
  var norms = cljs.core.transient$.call(null, normals);
  var vnorms = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var verts = cljs.core.keys.call(null, vertices);
  while (true) {
    if (cljs.core.truth_(verts)) {
      var v = cljs.core.first.call(null, verts);
      var n = thi.ng.geom.core.normalize.call(null, cljs.core.reduce.call(null, thi.ng.geom.core._PLUS_, cljs.core.map.call(null, function(norms, vnorms, verts, v, ___$2, map__7878, map__7878__$1, fnormals, normals, vertices, ___$1) {
        return function(p1__7874_SHARP_) {
          return cljs.core.get.call(null, fnormals, p1__7874_SHARP_);
        };
      }(norms, vnorms, verts, v, ___$2, map__7878, map__7878__$1, fnormals, normals, vertices, ___$1), thi.ng.geom.core.vertex_faces.call(null, ___$2, v))));
      var vec__7879 = thi.ng.common.data.core.index_BANG_.call(null, norms, n);
      var norms__$1 = cljs.core.nth.call(null, vec__7879, 0, null);
      var n__$1 = cljs.core.nth.call(null, vec__7879, 1, null);
      var G__7891 = norms__$1;
      var G__7892 = cljs.core.assoc_BANG_.call(null, vnorms, v, n__$1);
      var G__7893 = cljs.core.next.call(null, verts);
      norms = G__7891;
      vnorms = G__7892;
      verts = G__7893;
      continue;
    } else {
      return cljs.core.assoc.call(null, ___$2, new cljs.core.Keyword(null, "normals", "normals", 3141522398), cljs.core.persistent_BANG_.call(null, norms), new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), cljs.core.persistent_BANG_.call(null, vnorms));
    }
    break;
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(_) {
  var ___$1 = this;
  return 1 / 6 * clojure.core.reducers.fold.call(null, cljs.core._PLUS_, clojure.core.reducers.map.call(null, function(___$1) {
    return function(p__7880) {
      var vec__7881 = p__7880;
      var a = cljs.core.nth.call(null, vec__7881, 0, null);
      var b = cljs.core.nth.call(null, vec__7881, 1, null);
      var c = cljs.core.nth.call(null, vec__7881, 2, null);
      return thi.ng.geom.core.dot.call(null, a, thi.ng.geom.core.cross.call(null, b, c));
    };
  }(___$1), clojure.core.reducers.mapcat.call(null, thi.ng.geom.core.utils.tessellate_with_first, (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1))));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFaceAccess$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFaceAccess$faces$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFaceAccess$add_face$arity$2 = function(_, f) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.add_face.call(null, ___$1, f);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFaceAccess$vertex_faces$arity$2 = function(_, v) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.vertex_faces_STAR_.call(null, ___$1, v);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PFaceAccess$remove_face$arity$2 = function(p__7882, f) {
  var map__7883 = p__7882;
  var map__7883__$1 = cljs.core.seq_QMARK_.call(null, map__7883) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7883) : map__7883;
  var _ = map__7883__$1;
  var vnormals = cljs.core.get.call(null, map__7883__$1, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720));
  var fnormals = cljs.core.get.call(null, map__7883__$1, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136));
  var faces = cljs.core.get.call(null, map__7883__$1, new cljs.core.Keyword(null, "faces", "faces", 1111091496));
  var edges = cljs.core.get.call(null, map__7883__$1, new cljs.core.Keyword(null, "edges", "edges", 1110261192));
  var vertices = cljs.core.get.call(null, map__7883__$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219));
  var map__7884 = this;
  var map__7884__$1 = cljs.core.seq_QMARK_.call(null, map__7884) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7884) : map__7884;
  var ___$1 = map__7884__$1;
  var vnormals__$1 = cljs.core.get.call(null, map__7884__$1, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720));
  var fnormals__$1 = cljs.core.get.call(null, map__7884__$1, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136));
  var faces__$1 = cljs.core.get.call(null, map__7884__$1, new cljs.core.Keyword(null, "faces", "faces", 1111091496));
  var edges__$1 = cljs.core.get.call(null, map__7884__$1, new cljs.core.Keyword(null, "edges", "edges", 1110261192));
  var vertices__$1 = cljs.core.get.call(null, map__7884__$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219));
  if (cljs.core.truth_(cljs.core.get.call(null, faces__$1, f))) {
    var verts = vertices__$1;
    var vnorms = vnormals__$1;
    var edges__$2 = edges__$1;
    var fedges = thi.ng.common.data.core.successive_nth.call(null, 2, cljs.core.conj.call(null, f, cljs.core.first.call(null, f)));
    while (true) {
      if (cljs.core.truth_(fedges)) {
        var vec__7885 = cljs.core.first.call(null, fedges);
        var a = cljs.core.nth.call(null, vec__7885, 0, null);
        var b = cljs.core.nth.call(null, vec__7885, 1, null);
        var e = cljs.core.PersistentHashSet.fromArray([a, b], true);
        var efaces = cljs.core.disj.call(null, cljs.core.get.call(null, edges__$2, e), f);
        var edges__$3 = cljs.core.seq.call(null, efaces) ? cljs.core.assoc.call(null, edges__$2, e, efaces) : cljs.core.dissoc.call(null, edges__$2, e);
        var ve = cljs.core.filter.call(null, function(verts, vnorms, edges__$2, fedges, vec__7885, a, b, e, efaces, edges__$3, map__7884, map__7884__$1, ___$1, vnormals__$1, fnormals__$1, faces__$1, edges__$1, vertices__$1, map__7883, map__7883__$1, _, vnormals, fnormals, faces, edges, vertices) {
          return function(p1__7873_SHARP_) {
            return cljs.core.not_EQ_.call(null, (new cljs.core.Keyword(null, "f", "f", 1013904344)).cljs$core$IFn$_invoke$arity$1(p1__7873_SHARP_), f);
          };
        }(verts, vnorms, edges__$2, fedges, vec__7885, a, b, e, efaces, edges__$3, map__7884, map__7884__$1, ___$1, vnormals__$1, fnormals__$1, faces__$1, edges__$1, vertices__$1, map__7883, map__7883__$1, _, vnormals, fnormals, faces, edges, vertices), cljs.core.get.call(null, verts, a));
        if (cljs.core.seq.call(null, ve)) {
          var G__7894 = cljs.core.assoc.call(null, verts, a, cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, ve));
          var G__7895 = vnorms;
          var G__7896 = edges__$3;
          var G__7897 = cljs.core.next.call(null, fedges);
          verts = G__7894;
          vnorms = G__7895;
          edges__$2 = G__7896;
          fedges = G__7897;
          continue;
        } else {
          var G__7898 = cljs.core.dissoc.call(null, verts, a);
          var G__7899 = cljs.core.dissoc.call(null, vnorms, a);
          var G__7900 = edges__$3;
          var G__7901 = cljs.core.next.call(null, fedges);
          verts = G__7898;
          vnorms = G__7899;
          edges__$2 = G__7900;
          fedges = G__7901;
          continue;
        }
      } else {
        return cljs.core.assoc.call(null, ___$1, new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), verts, new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720), vnorms, new cljs.core.Keyword(null, "edges", "edges", 1110261192), edges__$2, new cljs.core.Keyword(null, "faces", "faces", 1111091496), cljs.core.disj.call(null, faces__$1, f), new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), cljs.core.dissoc.call(null, fnormals__$1, f));
      }
      break;
    }
  } else {
    return ___$1;
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.types.utils.bounding_sphere.call(null, thi.ng.geom.core.centroid.call(null, ___$1), thi.ng.geom.core.vertices.call(null, ___$1));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PTessellate$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.tessellate.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$2 = function(_, p__7886) {
  var map__7887 = p__7886;
  var map__7887__$1 = cljs.core.seq_QMARK_.call(null, map__7887) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7887) : map__7887;
  var fn = cljs.core.get.call(null, map__7887__$1, new cljs.core.Keyword(null, "fn", "fn", 1013907514), thi.ng.geom.core.utils.tessellate_with_first);
  var ___$1 = this;
  return thi.ng.geom.gmesh.map_faces.call(null, fn, ___$1);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGeomContainer$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGeomContainer$into$arity$2 = function(_, faces) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.into_mesh.call(null, ___$1, faces);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.types.utils.bounding_box.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 0, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 1, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 2, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PVertexAccess$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PVertexAccess$vertices$arity$1 = function(_) {
  var ___$1 = this;
  return cljs.core.keys.call(null, (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(_, opts) {
  var ___$1 = this;
  return thi.ng.geom.core.into.call(null, (new cljs.core.Keyword(null, "mesh", "mesh", 1017252191)).cljs$core$IFn$_invoke$arity$1(opts), (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$connected_components$arity$1 = function(_) {
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [___$1], null);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$vertex_neighbors$arity$2 = function(_, v) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.vertex_neighbors_STAR_.call(null, ___$1, v);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$vertex_valence$arity$2 = function(_, v) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.vertex_valence_STAR_.call(null, ___$1, v);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$remove_vertex$arity$2 = function(_, v) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.remove_vertex_STAR_.call(null, ___$1, v);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$replace_vertex$arity$3 = function(_, v, v2) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.replace_vertex_STAR_.call(null, ___$1, v, v2);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PGraph$merge_vertices$arity$3 = function(_, a, b) {
  var ___$1 = this;
  return thi.ng.geom.gmesh.merge_vertices_STAR_.call(null, ___$1, a, b);
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(_) {
  var ___$1 = this;
  return clojure.core.reducers.fold.call(null, cljs.core._PLUS_, clojure.core.reducers.map.call(null, function(___$1) {
    return function(p1__7872_SHARP_) {
      return thi.ng.common.math.core.abs.call(null, cljs.core.apply.call(null, thi.ng.geom.core.utils.tri_area3, p1__7872_SHARP_));
    };
  }(___$1), clojure.core.reducers.mapcat.call(null, thi.ng.geom.core.utils.tessellate_with_first, (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(___$1))));
};
goog.provide("thi.ng.geom.cuboid");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
thi.ng.geom.cuboid.cuboid = function() {
  var cuboid = null;
  var cuboid__0 = function() {
    return cuboid.call(null, 1);
  };
  var cuboid__1 = function(x) {
    if (typeof x === "number") {
      return cuboid.call(null, thi.ng.geom.core.vector.vec3.call(null), x);
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(x), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(x));
      } else {
        if (cljs.core.sequential_QMARK_.call(null, x)) {
          if (8 === cljs.core.count.call(null, x)) {
            return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, thi.ng.geom.core.vector.vec3, x));
          } else {
            return thi.ng.common.error.illegal_arg_BANG_.call(null, "Wrong number of points, expected 8 but got", cljs.core.count.call(null, x));
          }
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            return thi.ng.common.error.illegal_arg_BANG_.call(null, x);
          } else {
            return null;
          }
        }
      }
    }
  };
  var cuboid__2 = function(o, size) {
    var vec__8399 = thi.ng.geom.core.vector.vec3.call(null, o);
    var x1 = cljs.core.nth.call(null, vec__8399, 0, null);
    var y1 = cljs.core.nth.call(null, vec__8399, 1, null);
    var z1 = cljs.core.nth.call(null, vec__8399, 2, null);
    var a = vec__8399;
    var vec__8400 = thi.ng.geom.core._PLUS_.call(null, a, size);
    var x2 = cljs.core.nth.call(null, vec__8400, 0, null);
    var y2 = cljs.core.nth.call(null, vec__8400, 1, null);
    var z2 = cljs.core.nth.call(null, vec__8400, 2, null);
    var g = vec__8400;
    var b = thi.ng.geom.core.vector.vec3.call(null, x1, y1, z2);
    var c = thi.ng.geom.core.vector.vec3.call(null, x2, y1, z2);
    var d = thi.ng.geom.core.vector.vec3.call(null, x2, y1, z1);
    var e = thi.ng.geom.core.vector.vec3.call(null, x1, y2, z1);
    var f = thi.ng.geom.core.vector.vec3.call(null, x1, y2, z2);
    var h = thi.ng.geom.core.vector.vec3.call(null, x2, y2, z1);
    return new thi.ng.geom.types.Cuboid(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, d, e, f, g, h], null));
  };
  var cuboid__8 = function(a, b, c, d, e, f, g, h) {
    return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, thi.ng.geom.core.vector.vec3, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, d, e, f, g, h], null)));
  };
  cuboid = function(a, b, c, d, e, f, g, h) {
    switch(arguments.length) {
      case 0:
        return cuboid__0.call(this);
      case 1:
        return cuboid__1.call(this, a);
      case 2:
        return cuboid__2.call(this, a, b);
      case 8:
        return cuboid__8.call(this, a, b, c, d, e, f, g, h);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cuboid.cljs$core$IFn$_invoke$arity$0 = cuboid__0;
  cuboid.cljs$core$IFn$_invoke$arity$1 = cuboid__1;
  cuboid.cljs$core$IFn$_invoke$arity$2 = cuboid__2;
  cuboid.cljs$core$IFn$_invoke$arity$8 = cuboid__8;
  return cuboid;
}();
thi.ng.geom.cuboid.unmap_uvw = function unmap_uvw(p__8401, p__8402) {
  var vec__8405 = p__8401;
  var a = cljs.core.nth.call(null, vec__8405, 0, null);
  var b = cljs.core.nth.call(null, vec__8405, 1, null);
  var c = cljs.core.nth.call(null, vec__8405, 2, null);
  var d = cljs.core.nth.call(null, vec__8405, 3, null);
  var e = cljs.core.nth.call(null, vec__8405, 4, null);
  var f = cljs.core.nth.call(null, vec__8405, 5, null);
  var g = cljs.core.nth.call(null, vec__8405, 6, null);
  var h = cljs.core.nth.call(null, vec__8405, 7, null);
  var vec__8406 = p__8402;
  var u = cljs.core.nth.call(null, vec__8406, 0, null);
  var v = cljs.core.nth.call(null, vec__8406, 1, null);
  var w = cljs.core.nth.call(null, vec__8406, 2, null);
  return thi.ng.geom.core.mix.call(null, thi.ng.geom.core.mix.call(null, a, d, e, h, u, v), thi.ng.geom.core.mix.call(null, b, c, f, g, u, v), w);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8417_SHARP_) {
      return thi.ng.geom.core.transform_vector.call(null, m, p1__8417_SHARP_);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_z.call(null, ___$1, theta);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8409_SHARP_) {
      return thi.ng.geom.core.rotate_x.call(null, p1__8409_SHARP_, theta);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8410_SHARP_) {
      return thi.ng.geom.core.rotate_y.call(null, p1__8410_SHARP_, theta);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8411_SHARP_) {
      return thi.ng.geom.core.rotate_z.call(null, p1__8411_SHARP_, theta);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, axis, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8412_SHARP_) {
      return thi.ng.geom.core.rotate_around_axis.call(null, p1__8412_SHARP_, axis, theta);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(thi.ng.geom.core.utils.center.call(null, thi.ng.geom.core.vector.vec3.call(null), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(_, o) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(thi.ng.geom.core.utils.center.call(null, thi.ng.geom.core.centroid.call(null, ___$1), thi.ng.geom.core.vector.vec3.call(null, o), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.centroid.call(null, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSample$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSample$random_point_inside$arity$1 = function(p__8418) {
  var map__8419 = p__8418;
  var map__8419__$1 = cljs.core.seq_QMARK_.call(null, map__8419) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8419) : map__8419;
  var p = cljs.core.get.call(null, map__8419__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8419__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8420 = this;
  var map__8420__$1 = cljs.core.seq_QMARK_.call(null, map__8420) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8420) : map__8420;
  var p__$1 = cljs.core.get.call(null, map__8420__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8420__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8421 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8421, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8421, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8421, 2, null);
  var vec__8422 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8422, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8422, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8422, 2, null);
  return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), thi.ng.common.math.core.random.call(null, y1, y2), thi.ng.common.math.core.random.call(null, z1, z2));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSample$random_point$arity$1 = function(p__8423) {
  var map__8424 = p__8423;
  var map__8424__$1 = cljs.core.seq_QMARK_.call(null, map__8424) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8424) : map__8424;
  var p = cljs.core.get.call(null, map__8424__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8424__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8425 = this;
  var map__8425__$1 = cljs.core.seq_QMARK_.call(null, map__8425) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8425) : map__8425;
  var p__$1 = cljs.core.get.call(null, map__8425__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8425__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8426 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8426, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8426, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8426, 2, null);
  var vec__8427 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8427, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8427, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8427, 2, null);
  var id = thi.ng.common.math.core.random.call(null, 6) | 0;
  if (id < 2) {
    return thi.ng.geom.core.vector.vec3.call(null, id === 0 ? x1 : x2, thi.ng.common.math.core.random.call(null, y1, y2), thi.ng.common.math.core.random.call(null, z1, z2));
  } else {
    if (id < 4) {
      return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), cljs.core._EQ_.call(null, 2, id) ? y1 : y2, thi.ng.common.math.core.random.call(null, z1, z2));
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), thi.ng.common.math.core.random.call(null, y1, y2), cljs.core._EQ_.call(null, 4, id) ? z1 : z2);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSubdivide$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.subdivide.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$2 = function(p__8428, p__8429) {
  var map__8430 = p__8428;
  var map__8430__$1 = cljs.core.seq_QMARK_.call(null, map__8430) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8430) : map__8430;
  var points = cljs.core.get.call(null, map__8430__$1, new cljs.core.Keyword(null, "points", "points", 4326117461));
  var map__8431 = p__8429;
  var map__8431__$1 = cljs.core.seq_QMARK_.call(null, map__8431) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8431) : map__8431;
  var slices = cljs.core.get.call(null, map__8431__$1, new cljs.core.Keyword(null, "slices", "slices", 4409223315));
  var rows = cljs.core.get.call(null, map__8431__$1, new cljs.core.Keyword(null, "rows", "rows", 1017410891));
  var cols = cljs.core.get.call(null, map__8431__$1, new cljs.core.Keyword(null, "cols", "cols", 1016963685));
  var num = cljs.core.get.call(null, map__8431__$1, new cljs.core.Keyword(null, "num", "num", 1014013688), 1);
  var map__8432 = this;
  var map__8432__$1 = cljs.core.seq_QMARK_.call(null, map__8432) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8432) : map__8432;
  var points__$1 = cljs.core.get.call(null, map__8432__$1, new cljs.core.Keyword(null, "points", "points", 4326117461));
  var ru = thi.ng.common.data.core.successive_nth.call(null, 2, thi.ng.common.math.core.norm_range.call(null, function() {
    var or__3481__auto__ = cols;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }()));
  var rv = thi.ng.common.data.core.successive_nth.call(null, 2, thi.ng.common.math.core.norm_range.call(null, function() {
    var or__3481__auto__ = rows;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }()));
  var rw = thi.ng.common.data.core.successive_nth.call(null, 2, thi.ng.common.math.core.norm_range.call(null, function() {
    var or__3481__auto__ = slices;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }()));
  var map_p = function(ru, rv, rw, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
    return function(p) {
      return thi.ng.geom.core.vector.vec3.call(null, cljs.core.map.call(null, function(ru, rv, rw, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
        return function(p1__8408_SHARP_) {
          return thi.ng.common.math.core.roundto.call(null, p1__8408_SHARP_, thi.ng.common.math.core._STAR_eps_STAR_);
        };
      }(ru, rv, rw, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num), thi.ng.geom.cuboid.unmap_uvw.call(null, points__$1, p)));
    };
  }(ru, rv, rw, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num);
  var iter__4198__auto__ = function(ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
    return function iter__8433(s__8434) {
      return new cljs.core.LazySeq(null, function(ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
        return function() {
          var s__8434__$1 = s__8434;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__8434__$1);
            if (temp__4126__auto__) {
              var xs__4624__auto__ = temp__4126__auto__;
              var vec__8452 = cljs.core.first.call(null, xs__4624__auto__);
              var w1 = cljs.core.nth.call(null, vec__8452, 0, null);
              var w2 = cljs.core.nth.call(null, vec__8452, 1, null);
              var iterys__4194__auto__ = function(s__8434__$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
                return function iter__8435(s__8436) {
                  return new cljs.core.LazySeq(null, function(s__8434__$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
                    return function() {
                      var s__8436__$1 = s__8436;
                      while (true) {
                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__8436__$1);
                        if (temp__4126__auto____$1) {
                          var xs__4624__auto____$1 = temp__4126__auto____$1;
                          var vec__8458 = cljs.core.first.call(null, xs__4624__auto____$1);
                          var v1 = cljs.core.nth.call(null, vec__8458, 0, null);
                          var v2 = cljs.core.nth.call(null, vec__8458, 1, null);
                          var iterys__4194__auto__ = function(s__8436__$1, s__8434__$1, vec__8458, v1, v2, xs__4624__auto____$1, temp__4126__auto____$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
                            return function iter__8437(s__8438) {
                              return new cljs.core.LazySeq(null, function(s__8436__$1, s__8434__$1, vec__8458, v1, v2, xs__4624__auto____$1, temp__4126__auto____$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num) {
                                return function() {
                                  var s__8438__$1 = s__8438;
                                  while (true) {
                                    var temp__4126__auto____$2 = cljs.core.seq.call(null, s__8438__$1);
                                    if (temp__4126__auto____$2) {
                                      var s__8438__$2 = temp__4126__auto____$2;
                                      if (cljs.core.chunked_seq_QMARK_.call(null, s__8438__$2)) {
                                        var c__4196__auto__ = cljs.core.chunk_first.call(null, s__8438__$2);
                                        var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                                        var b__8440 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                                        if (function() {
                                          var i__8439 = 0;
                                          while (true) {
                                            if (i__8439 < size__4197__auto__) {
                                              var vec__8461 = cljs.core._nth.call(null, c__4196__auto__, i__8439);
                                              var u1 = cljs.core.nth.call(null, vec__8461, 0, null);
                                              var u2 = cljs.core.nth.call(null, vec__8461, 1, null);
                                              cljs.core.chunk_append.call(null, b__8440, new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, map_p, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                                              [u2, v1, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v1, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v2, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v2, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v2, w2], null), new cljs.core.PersistentVector(null, 
                                              3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v2, w1], null)], null))));
                                              var G__8471 = i__8439 + 1;
                                              i__8439 = G__8471;
                                              continue;
                                            } else {
                                              return true;
                                            }
                                            break;
                                          }
                                        }()) {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8440), iter__8437.call(null, cljs.core.chunk_rest.call(null, s__8438__$2)));
                                        } else {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8440), null);
                                        }
                                      } else {
                                        var vec__8462 = cljs.core.first.call(null, s__8438__$2);
                                        var u1 = cljs.core.nth.call(null, vec__8462, 0, null);
                                        var u2 = cljs.core.nth.call(null, vec__8462, 1, null);
                                        return cljs.core.cons.call(null, new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, map_p, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                                        [u2, v1, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v1, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v2, w1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v2, w2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v2, w2], null), new cljs.core.PersistentVector(null, 
                                        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [u2, v2, w1], null)], null))), iter__8437.call(null, cljs.core.rest.call(null, s__8438__$2)));
                                      }
                                    } else {
                                      return null;
                                    }
                                    break;
                                  }
                                };
                              }(s__8436__$1, s__8434__$1, vec__8458, v1, v2, xs__4624__auto____$1, temp__4126__auto____$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num), null, null);
                            };
                          }(s__8436__$1, s__8434__$1, vec__8458, v1, v2, xs__4624__auto____$1, temp__4126__auto____$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num);
                          var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, ru));
                          if (fs__4195__auto__) {
                            return cljs.core.concat.call(null, fs__4195__auto__, iter__8435.call(null, cljs.core.rest.call(null, s__8436__$1)));
                          } else {
                            var G__8472 = cljs.core.rest.call(null, s__8436__$1);
                            s__8436__$1 = G__8472;
                            continue;
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(s__8434__$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num), null, null);
                };
              }(s__8434__$1, vec__8452, w1, w2, xs__4624__auto__, temp__4126__auto__, ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num);
              var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, rv));
              if (fs__4195__auto__) {
                return cljs.core.concat.call(null, fs__4195__auto__, iter__8433.call(null, cljs.core.rest.call(null, s__8434__$1)));
              } else {
                var G__8473 = cljs.core.rest.call(null, s__8434__$1);
                s__8434__$1 = G__8473;
                continue;
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num), null, null);
    };
  }(ru, rv, rw, map_p, map__8432, map__8432__$1, points__$1, map__8430, map__8430__$1, points, map__8431, map__8431__$1, slices, rows, cols, num);
  return iter__4198__auto__.call(null, rw);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PClassify$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PClassify$classify_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PEdgeAccess$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PEdgeAccess$edges$arity$1 = function(_) {
  var ___$1 = this;
  var vec__8463 = (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1);
  var a = cljs.core.nth.call(null, vec__8463, 0, null);
  var b = cljs.core.nth.call(null, vec__8463, 1, null);
  var c = cljs.core.nth.call(null, vec__8463, 2, null);
  var d = cljs.core.nth.call(null, vec__8463, 3, null);
  var e = cljs.core.nth.call(null, vec__8463, 4, null);
  var f = cljs.core.nth.call(null, vec__8463, 5, null);
  var g = cljs.core.nth.call(null, vec__8463, 6, null);
  var h = cljs.core.nth.call(null, vec__8463, 7, null);
  return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, g], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [b, f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, g], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, h], null)], null);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(_) {
  var ___$1 = this;
  return 0;
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBoundary$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2 = function(_, p) {
  var ___$1 = this;
  return thi.ng.geom.core.classify_point.call(null, ___$1, p) >= 0;
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PIntersect$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PIntersect$intersect_shape$arity$2 = function(_, s) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PFaceAccess$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PFaceAccess$faces$arity$1 = function(_) {
  var ___$1 = this;
  var vec__8464 = (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1);
  var a = cljs.core.nth.call(null, vec__8464, 0, null);
  var b = cljs.core.nth.call(null, vec__8464, 1, null);
  var c = cljs.core.nth.call(null, vec__8464, 2, null);
  var d = cljs.core.nth.call(null, vec__8464, 3, null);
  var e = cljs.core.nth.call(null, vec__8464, 4, null);
  var f = cljs.core.nth.call(null, vec__8464, 5, null);
  var g = cljs.core.nth.call(null, vec__8464, 6, null);
  var h = cljs.core.nth.call(null, vec__8464, 7, null);
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, h, g], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, f, e], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f, g, h], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d, c, b], null), 
  new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, g, f], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e, h, d], null)], null);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8416_SHARP_) {
      return thi.ng.geom.core._PLUS_.call(null, p1__8416_SHARP_, t);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.types.utils.bounding_sphere.call(null, thi.ng.geom.core.centroid.call(null, ___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8413_SHARP_) {
      return thi.ng.geom.core._STAR_.call(null, p1__8413_SHARP_, s);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, sx, sy) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8414_SHARP_) {
      return thi.ng.geom.core._STAR_.call(null, p1__8414_SHARP_, sx, sy);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, sx, sy, sz) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(cljs.core.mapv.call(null, function(___$1) {
    return function(p1__8415_SHARP_) {
      return thi.ng.geom.core._STAR_.call(null, p1__8415_SHARP_, sx, sy, sz);
    };
  }(___$1), (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PScale$scale_size$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.Cuboid(thi.ng.geom.core.utils.scale_size.call(null, s, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTessellate$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.tessellate.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$2 = function(_, p__8465) {
  var map__8466 = p__8465;
  var map__8466__$1 = cljs.core.seq_QMARK_.call(null, map__8466) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8466) : map__8466;
  var opts = map__8466__$1;
  var f = cljs.core.get.call(null, map__8466__$1, new cljs.core.Keyword(null, "fn", "fn", 1013907514), thi.ng.geom.core.utils.tessellate_3);
  var ___$1 = this;
  return cljs.core.mapcat.call(null, f, cljs.core.mapcat.call(null, thi.ng.geom.core.faces, cljs.core.truth_(cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "num", "num", 1014013688), null, new cljs.core.Keyword(null, "slices", "slices", 4409223315), null, new cljs.core.Keyword(null, "rows", "rows", 1017410891), null, new cljs.core.Keyword(null, "cols", "cols", 1016963685), null], null), null), cljs.core.keys.call(null, 
  opts))) ? thi.ng.geom.core.subdivide.call(null, ___$1, opts) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [___$1], null)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.types.utils.bounding_box.call(null, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 0, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 1, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.axis_range.call(null, 2, (new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PVertexAccess$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PVertexAccess$vertices$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "points", "points", 4326117461)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.as_mesh.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(_, p__8467) {
  var map__8468 = p__8467;
  var map__8468__$1 = cljs.core.seq_QMARK_.call(null, map__8468) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8468) : map__8468;
  var flags = cljs.core.get.call(null, map__8468__$1, new cljs.core.Keyword(null, "flags", "flags", 1111417337), "nsewfb");
  var mesh = cljs.core.get.call(null, map__8468__$1, new cljs.core.Keyword(null, "mesh", "mesh", 1017252191));
  var ___$1 = this;
  var vec__8469 = thi.ng.geom.core.vertices.call(null, ___$1);
  var a = cljs.core.nth.call(null, vec__8469, 0, null);
  var b = cljs.core.nth.call(null, vec__8469, 1, null);
  var c = cljs.core.nth.call(null, vec__8469, 2, null);
  var d = cljs.core.nth.call(null, vec__8469, 3, null);
  var e = cljs.core.nth.call(null, vec__8469, 4, null);
  var f = cljs.core.nth.call(null, vec__8469, 5, null);
  var g = cljs.core.nth.call(null, vec__8469, 6, null);
  var h = cljs.core.nth.call(null, vec__8469, 7, null);
  var vec__8470 = thi.ng.common.data.core.demunge_flags_seq.call(null, flags, "nsewfb");
  var tp = cljs.core.nth.call(null, vec__8470, 0, null);
  var bt = cljs.core.nth.call(null, vec__8470, 1, null);
  var rt = cljs.core.nth.call(null, vec__8470, 2, null);
  var lf = cljs.core.nth.call(null, vec__8470, 3, null);
  var fr = cljs.core.nth.call(null, vec__8470, 4, null);
  var bk = cljs.core.nth.call(null, vec__8470, 5, null);
  return thi.ng.geom.core.into.call(null, function() {
    var or__3481__auto__ = mesh;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.gmesh.gmesh.call(null);
    }
  }(), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(fr) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, g, f], null) : null, cljs.core.truth_(bk) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e, h, d], null) : null, cljs.core.truth_(lf) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [a, b, f, e], null) : null, cljs.core.truth_(rt) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, h, g], null) : null, cljs.core.truth_(tp) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f, g, h], null) : null, cljs.core.truth_(bt) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d, c, b], null) : null], null)));
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PProximity$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PProximity$closest_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.Cuboid.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(_) {
  var ___$1 = this;
  return cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(___$1) {
    return function(p1__8407_SHARP_) {
      return cljs.core.apply.call(null, thi.ng.geom.core.utils.tri_area3, p1__8407_SHARP_);
    };
  }(___$1), thi.ng.geom.core.tessellate.call(null, ___$1)));
};
goog.provide("thi.ng.geom.core.intersect");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core");
thi.ng.geom.core.intersect.intersect_circle_circle_QMARK_ = function() {
  var intersect_circle_circle_QMARK_ = null;
  var intersect_circle_circle_QMARK___2 = function(p__8027, p__8028) {
    var map__8031 = p__8027;
    var map__8031__$1 = cljs.core.seq_QMARK_.call(null, map__8031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8031) : map__8031;
    var p = cljs.core.get.call(null, map__8031__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r1 = cljs.core.get.call(null, map__8031__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    var map__8032 = p__8028;
    var map__8032__$1 = cljs.core.seq_QMARK_.call(null, map__8032) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8032) : map__8032;
    var q = cljs.core.get.call(null, map__8032__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r2 = cljs.core.get.call(null, map__8032__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    return intersect_circle_circle_QMARK_.call(null, p, r1, q, r2);
  };
  var intersect_circle_circle_QMARK___4 = function(p, r1, q, r2) {
    var delta = thi.ng.geom.core._.call(null, q, p);
    var d = thi.ng.geom.core.mag.call(null, delta);
    if (d <= r1 + r2 && d >= thi.ng.common.math.core.abs.call(null, r1 - r2)) {
      var a = (r1 * r1 - r2 * r2 + d * d) / (2 * d);
      var invd = 1 / d;
      var p__$1 = thi.ng.geom.core.madd.call(null, delta, a * invd, p);
      var h = Math.sqrt.call(null, r1 * r1 - a * a);
      var perp = thi.ng.geom.core._STAR_.call(null, thi.ng.geom.core.normal.call(null, delta), h * invd);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core._PLUS_.call(null, p__$1, perp), thi.ng.geom.core._.call(null, p__$1, perp)], null);
    } else {
      return null;
    }
  };
  intersect_circle_circle_QMARK_ = function(p, r1, q, r2) {
    switch(arguments.length) {
      case 2:
        return intersect_circle_circle_QMARK___2.call(this, p, r1);
      case 4:
        return intersect_circle_circle_QMARK___4.call(this, p, r1, q, r2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_circle_circle_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_circle_circle_QMARK___2;
  intersect_circle_circle_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_circle_circle_QMARK___4;
  return intersect_circle_circle_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_rect_rect_QMARK_ = function() {
  var intersect_rect_rect_QMARK_ = null;
  var intersect_rect_rect_QMARK___2 = function(p__8033, p__8034) {
    var map__8049 = p__8033;
    var map__8049__$1 = cljs.core.seq_QMARK_.call(null, map__8049) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8049) : map__8049;
    var vec__8050 = cljs.core.get.call(null, map__8049__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var px = cljs.core.nth.call(null, vec__8050, 0, null);
    var py = cljs.core.nth.call(null, vec__8050, 1, null);
    var vec__8051 = cljs.core.get.call(null, map__8049__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var w = cljs.core.nth.call(null, vec__8051, 0, null);
    var h = cljs.core.nth.call(null, vec__8051, 1, null);
    var map__8052 = p__8034;
    var map__8052__$1 = cljs.core.seq_QMARK_.call(null, map__8052) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8052) : map__8052;
    var vec__8053 = cljs.core.get.call(null, map__8052__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var qx = cljs.core.nth.call(null, vec__8053, 0, null);
    var qy = cljs.core.nth.call(null, vec__8053, 1, null);
    var vec__8054 = cljs.core.get.call(null, map__8052__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var qw = cljs.core.nth.call(null, vec__8054, 0, null);
    var qh = cljs.core.nth.call(null, vec__8054, 1, null);
    return!(px > qx + qw || (qx > px + w || (py > qy + qh || qy > py + h)));
  };
  var intersect_rect_rect_QMARK___4 = function(p__8035, p__8036, p__8037, p__8038) {
    var vec__8055 = p__8035;
    var px1 = cljs.core.nth.call(null, vec__8055, 0, null);
    var py1 = cljs.core.nth.call(null, vec__8055, 1, null);
    var vec__8056 = p__8036;
    var qx1 = cljs.core.nth.call(null, vec__8056, 0, null);
    var qy1 = cljs.core.nth.call(null, vec__8056, 1, null);
    var vec__8057 = p__8037;
    var px2 = cljs.core.nth.call(null, vec__8057, 0, null);
    var py2 = cljs.core.nth.call(null, vec__8057, 1, null);
    var vec__8058 = p__8038;
    var qx2 = cljs.core.nth.call(null, vec__8058, 0, null);
    var qy2 = cljs.core.nth.call(null, vec__8058, 1, null);
    return!(px1 > qx2 || (px2 > qx1 || (py1 > qy2 || py2 > qy1)));
  };
  intersect_rect_rect_QMARK_ = function(p__8035, p__8036, p__8037, p__8038) {
    switch(arguments.length) {
      case 2:
        return intersect_rect_rect_QMARK___2.call(this, p__8035, p__8036);
      case 4:
        return intersect_rect_rect_QMARK___4.call(this, p__8035, p__8036, p__8037, p__8038);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_rect_rect_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_rect_rect_QMARK___2;
  intersect_rect_rect_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_rect_rect_QMARK___4;
  return intersect_rect_rect_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_aabb_aabb_QMARK_ = function() {
  var intersect_aabb_aabb_QMARK_ = null;
  var intersect_aabb_aabb_QMARK___2 = function(p__8061, p__8062) {
    var map__8065 = p__8061;
    var map__8065__$1 = cljs.core.seq_QMARK_.call(null, map__8065) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8065) : map__8065;
    var pa = cljs.core.get.call(null, map__8065__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var sa = cljs.core.get.call(null, map__8065__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var map__8066 = p__8062;
    var map__8066__$1 = cljs.core.seq_QMARK_.call(null, map__8066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8066) : map__8066;
    var pb = cljs.core.get.call(null, map__8066__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var sb = cljs.core.get.call(null, map__8066__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    return cljs.core.every_QMARK_.call(null, function(map__8065, map__8065__$1, pa, sa, map__8066, map__8066__$1, pb, sb) {
      return function(p1__8059_SHARP_) {
        return pa.call(null, p1__8059_SHARP_) <= pb.call(null, p1__8059_SHARP_) + sb.call(null, p1__8059_SHARP_) && pb.call(null, p1__8059_SHARP_) <= pa.call(null, p1__8059_SHARP_) + sa.call(null, p1__8059_SHARP_);
      };
    }(map__8065, map__8065__$1, pa, sa, map__8066, map__8066__$1, pb, sb), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 2], null));
  };
  var intersect_aabb_aabb_QMARK___4 = function(pa, pb, qa, qb) {
    return cljs.core.every_QMARK_.call(null, function(p1__8060_SHARP_) {
      return pa.call(null, p1__8060_SHARP_) <= qb.call(null, p1__8060_SHARP_) && pb.call(null, p1__8060_SHARP_) <= qa.call(null, p1__8060_SHARP_);
    }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1, 2], null));
  };
  intersect_aabb_aabb_QMARK_ = function(pa, pb, qa, qb) {
    switch(arguments.length) {
      case 2:
        return intersect_aabb_aabb_QMARK___2.call(this, pa, pb);
      case 4:
        return intersect_aabb_aabb_QMARK___4.call(this, pa, pb, qa, qb);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_aabb_aabb_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_aabb_aabb_QMARK___2;
  intersect_aabb_aabb_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_aabb_aabb_QMARK___4;
  return intersect_aabb_aabb_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_aabb_sphere_QMARK_ = function() {
  var intersect_aabb_sphere_QMARK_ = null;
  var intersect_aabb_sphere_QMARK___2 = function(p__8068, p__8069) {
    var map__8072 = p__8068;
    var map__8072__$1 = cljs.core.seq_QMARK_.call(null, map__8072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8072) : map__8072;
    var p = cljs.core.get.call(null, map__8072__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var sz = cljs.core.get.call(null, map__8072__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var map__8073 = p__8069;
    var map__8073__$1 = cljs.core.seq_QMARK_.call(null, map__8073) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8073) : map__8073;
    var s = cljs.core.get.call(null, map__8073__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r = cljs.core.get.call(null, map__8073__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    return intersect_aabb_sphere_QMARK_.call(null, p, thi.ng.geom.core._PLUS_.call(null, p, sz), s, r);
  };
  var intersect_aabb_sphere_QMARK___4 = function(p, q, c, r) {
    var sq = function(p1__8067_SHARP_) {
      return p1__8067_SHARP_ * p1__8067_SHARP_;
    };
    var ds = cljs.core.mapv.call(null, function(sq) {
      return function(x1, x2, sx) {
        if (sx < x1) {
          return sq.call(null, sx - x1);
        } else {
          if (sx > x2) {
            return sq.call(null, sx - x2);
          } else {
            return 0;
          }
        }
      };
    }(sq), p, q, c);
    return cljs.core.apply.call(null, cljs.core._PLUS_, ds) <= r * r;
  };
  intersect_aabb_sphere_QMARK_ = function(p, q, c, r) {
    switch(arguments.length) {
      case 2:
        return intersect_aabb_sphere_QMARK___2.call(this, p, q);
      case 4:
        return intersect_aabb_sphere_QMARK___4.call(this, p, q, c, r);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_aabb_sphere_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_aabb_sphere_QMARK___2;
  intersect_aabb_sphere_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_aabb_sphere_QMARK___4;
  return intersect_aabb_sphere_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_sphere_sphere_QMARK_ = function() {
  var intersect_sphere_sphere_QMARK_ = null;
  var intersect_sphere_sphere_QMARK___2 = function(p__8074, p__8075) {
    var map__8078 = p__8074;
    var map__8078__$1 = cljs.core.seq_QMARK_.call(null, map__8078) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8078) : map__8078;
    var p1 = cljs.core.get.call(null, map__8078__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r1 = cljs.core.get.call(null, map__8078__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    var map__8079 = p__8075;
    var map__8079__$1 = cljs.core.seq_QMARK_.call(null, map__8079) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8079) : map__8079;
    var p2 = cljs.core.get.call(null, map__8079__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r2 = cljs.core.get.call(null, map__8079__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    return intersect_sphere_sphere_QMARK_.call(null, p1, r1, p2, r2);
  };
  var intersect_sphere_sphere_QMARK___4 = function(p1, r1, p2, r2) {
    return thi.ng.geom.core.dist_squared.call(null, p1, p2) <= (r1 + r2) * (r1 + r2);
  };
  intersect_sphere_sphere_QMARK_ = function(p1, r1, p2, r2) {
    switch(arguments.length) {
      case 2:
        return intersect_sphere_sphere_QMARK___2.call(this, p1, r1);
      case 4:
        return intersect_sphere_sphere_QMARK___4.call(this, p1, r1, p2, r2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_sphere_sphere_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_sphere_sphere_QMARK___2;
  intersect_sphere_sphere_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_sphere_sphere_QMARK___4;
  return intersect_sphere_sphere_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_ray_sphere_QMARK_ = function() {
  var intersect_ray_sphere_QMARK_ = null;
  var intersect_ray_sphere_QMARK___2 = function(p__8080, p__8081) {
    var map__8084 = p__8080;
    var map__8084__$1 = cljs.core.seq_QMARK_.call(null, map__8084) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8084) : map__8084;
    var rp = cljs.core.get.call(null, map__8084__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var dir = cljs.core.get.call(null, map__8084__$1, new cljs.core.Keyword(null, "dir", "dir", 1014003711));
    var map__8085 = p__8081;
    var map__8085__$1 = cljs.core.seq_QMARK_.call(null, map__8085) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8085) : map__8085;
    var p = cljs.core.get.call(null, map__8085__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var r = cljs.core.get.call(null, map__8085__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
    return intersect_ray_sphere_QMARK_.call(null, rp, dir, p, r);
  };
  var intersect_ray_sphere_QMARK___4 = function(rp, dir, p, r) {
    var q = thi.ng.geom.core._.call(null, p, rp);
    var ds = thi.ng.geom.core.mag_squared.call(null, q);
    var v = -thi.ng.geom.core.dot.call(null, q, dir);
    var d = r * r - (ds - v * v);
    if (d >= 0) {
      var d__$1 = Math.sqrt.call(null, d);
      var a = v + d__$1;
      var b = v - d__$1;
      if (!(a < 0 && b < 0)) {
        if (a > 0 && b > 0) {
          if (a > b) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
          }
        } else {
          if (b > 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, a], null);
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
          }
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
      }
    } else {
      return null;
    }
  };
  intersect_ray_sphere_QMARK_ = function(rp, dir, p, r) {
    switch(arguments.length) {
      case 2:
        return intersect_ray_sphere_QMARK___2.call(this, rp, dir);
      case 4:
        return intersect_ray_sphere_QMARK___4.call(this, rp, dir, p, r);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersect_ray_sphere_QMARK_.cljs$core$IFn$_invoke$arity$2 = intersect_ray_sphere_QMARK___2;
  intersect_ray_sphere_QMARK_.cljs$core$IFn$_invoke$arity$4 = intersect_ray_sphere_QMARK___4;
  return intersect_ray_sphere_QMARK_;
}();
thi.ng.geom.core.intersect.intersect_ray_triangle3_QMARK_ = function intersect_ray_triangle3_QMARK_(p, d, a, b, c) {
  var u = thi.ng.geom.core._.call(null, b, a);
  var v = thi.ng.geom.core._.call(null, c, a);
  var n = thi.ng.geom.core.cross.call(null, u, v);
  if (thi.ng.common.math.core.delta_EQ_.call(null, thi.ng.geom.core.vector.V3, n)) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "degenerate", "degenerate", 2483487848)], null);
  } else {
    var w0 = thi.ng.geom.core._.call(null, p, a);
    var a_SINGLEQUOTE_ = -thi.ng.geom.core.dot.call(null, n, w0);
    var b_SINGLEQUOTE_ = thi.ng.geom.core.dot.call(null, n, d);
    if (thi.ng.common.math.core.delta_EQ_.call(null, 0, b_SINGLEQUOTE_)) {
      if (thi.ng.common.math.core.delta_EQ_.call(null, 0, a_SINGLEQUOTE_)) {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "same-plane", "same-plane", 2486648231)], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "no-intersect", "no-intersect", 684837765)], null);
      }
    } else {
      var r = a_SINGLEQUOTE_ / b_SINGLEQUOTE_;
      if (r < 0) {
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "no-intersect", "no-intersect", 684837765)], null);
      } else {
        var i = thi.ng.geom.core.madd.call(null, d, r, p);
        var vec__8087 = thi.ng.geom.core.utils.triangle_barycentric_coords.call(null, a, b, c, i, u, v);
        var u__$1 = cljs.core.nth.call(null, vec__8087, 0, null);
        var v__$1 = cljs.core.nth.call(null, vec__8087, 1, null);
        var w = cljs.core.nth.call(null, vec__8087, 2, null);
        if (u__$1 >= 0 && (w >= 0 && thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 1, v__$1))) {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect", "intersect", 1516918929), new cljs.core.Keyword(null, "p", "p", 1013904354), i], null);
        } else {
          return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "no-intersect", "no-intersect", 684837765), new cljs.core.Keyword(null, "p", "p", 1013904354), i], null);
        }
      }
    }
  }
};
thi.ng.geom.core.intersect.intersect_line2_line2_QMARK_ = function intersect_line2_line2_QMARK_(p__8088, p__8089, p__8090, p__8091) {
  var vec__8096 = p__8088;
  var px1 = cljs.core.nth.call(null, vec__8096, 0, null);
  var py1 = cljs.core.nth.call(null, vec__8096, 1, null);
  var p = vec__8096;
  var vec__8097 = p__8089;
  var qx1 = cljs.core.nth.call(null, vec__8097, 0, null);
  var qy1 = cljs.core.nth.call(null, vec__8097, 1, null);
  var q = vec__8097;
  var vec__8098 = p__8090;
  var px2 = cljs.core.nth.call(null, vec__8098, 0, null);
  var py2 = cljs.core.nth.call(null, vec__8098, 1, null);
  var lp = vec__8098;
  var vec__8099 = p__8091;
  var qx2 = cljs.core.nth.call(null, vec__8099, 0, null);
  var qy2 = cljs.core.nth.call(null, vec__8099, 1, null);
  var lq = vec__8099;
  var dx1 = qx1 - px1;
  var dy1 = qy1 - py1;
  var dx2 = qx2 - px2;
  var dy2 = qy2 - py2;
  var dx12 = px1 - px2;
  var dy12 = py1 - py2;
  var denom = dy2 * dx1 - dx2 * dy1;
  var na = dx2 * dy12 - dy2 * dx12;
  var nb = dx1 * dy12 - dy1 * dx12;
  if (denom === 0) {
    if (na === 0 && nb === 0) {
      var ip = thi.ng.geom.core.utils.closest_point_on_segment.call(null, lp, p, q);
      var iq = thi.ng.geom.core.utils.closest_point_on_segment.call(null, lq, p, q);
      if (thi.ng.common.math.core.delta_EQ_.call(null, ip, lp) || thi.ng.common.math.core.delta_EQ_.call(null, iq, lq)) {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "coincident", "coincident", 4356905136), new cljs.core.Keyword(null, "p", "p", 1013904354), ip, new cljs.core.Keyword(null, "q", "q", 1013904355), iq], null);
      } else {
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "coincident-no-intersect", "coincident-no-intersect", 1806876596), new cljs.core.Keyword(null, "p", "p", 1013904354), ip, new cljs.core.Keyword(null, "q", "q", 1013904355), iq], null);
      }
    } else {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "parallel", "parallel", 2185306489)], null);
    }
  } else {
    var ua = na / denom;
    var ub = nb / denom;
    var i = thi.ng.geom.core.mix.call(null, p, q, ua);
    if (ua >= 0 && (ua <= 1 && (ub >= 0 && ub <= 1))) {
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect", "intersect", 1516918929), new cljs.core.Keyword(null, "p", "p", 1013904354), i, new cljs.core.Keyword(null, "ua", "ua", 1013907966), ua, new cljs.core.Keyword(null, "ub", "ub", 1013907967), ub], null);
    } else {
      return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect-outside", "intersect-outside", 606528105), new cljs.core.Keyword(null, "p", "p", 1013904354), i, new cljs.core.Keyword(null, "ua", "ua", 1013907966), ua, new cljs.core.Keyword(null, "ub", "ub", 1013907967), ub], null);
    }
  }
};
thi.ng.geom.core.intersect.intersect_plane_plane_QMARK_ = function intersect_plane_plane_QMARK_(an, aw, bn, bw) {
  if (thi.ng.common.math.core.delta_EQ_.call(null, aw, bw, thi.ng.common.math.core._STAR_eps_STAR_) || thi.ng.common.math.core.delta_EQ_.call(null, an, bn, thi.ng.common.math.core._STAR_eps_STAR_)) {
    return null;
  } else {
    var od = thi.ng.geom.core.dot.call(null, an, bn);
    var det = 1 / (od * od + -1);
    var u = (bw * od + -aw) * det;
    var v = (aw * od + -bw) * det;
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "p", "p", 1013904354), thi.ng.geom.core.madd.call(null, an, u, thi.ng.geom.core._STAR_.call(null, bn, v)), new cljs.core.Keyword(null, "dir", "dir", 1014003711), thi.ng.geom.core.utils.ortho_normal.call(null, an, bn)], null);
  }
};
thi.ng.geom.core.intersect.intersect_ray_plane_QMARK_ = function intersect_ray_plane_QMARK_(rp, dir, n, w) {
  var dp = thi.ng.geom.core.dot.call(null, n, dir);
  var dn = thi.ng.geom.core.dot.call(null, n, rp) - w;
  if (thi.ng.common.math.core.delta_EQ_.call(null, 0, dp, thi.ng.common.math.core._STAR_eps_STAR_)) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1017479852), dn === 0 ? new cljs.core.Keyword(null, "on-plane", "on-plane", 1428540512) : new cljs.core.Keyword(null, "parallel", "parallel", 2185306489)], null);
  } else {
    var du = -(dn / dp);
    var i = thi.ng.geom.core.madd.call(null, dir, du, rp);
    if (thi.ng.common.math.core.in_range_QMARK_.call(null, 0, 1, du)) {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect", "intersect", 1516918929), new cljs.core.Keyword(null, "p", "p", 1013904354), i], null);
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "intersect-outside", "intersect-outside", 606528105), new cljs.core.Keyword(null, "p", "p", 1013904354), i], null);
    }
  }
};
thi.ng.geom.core.intersect.subdot = function subdot(a, b, c) {
  var d = thi.ng.geom.core.subm.call(null, a, b, c);
  return d.call(null, 0) + d.call(null, 1) + d.call(null, 2);
};
thi.ng.geom.core.intersect.face_a = function face_a(f, deltas) {
  var aff = cljs.core.mapv.call(null, f, deltas);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(aff.call(null, 0) > 0 ? 1 : 0) | (aff.call(null, 1) > 0 ? 2 : 0) | (aff.call(null, 2) > 0 ? 4 : 0) | (aff.call(null, 3) > 0 ? 8 : 0), aff], null);
};
thi.ng.geom.core.intersect.face_b1_QMARK_ = function face_b1_QMARK_(deltas, n) {
  return cljs.core.every_QMARK_.call(null, function(p1__8100_SHARP_) {
    return thi.ng.geom.core.dot.call(null, p1__8100_SHARP_, n) > 0;
  }, deltas);
};
thi.ng.geom.core.intersect.face_b2_QMARK_ = function face_b2_QMARK_(verts, refv, n) {
  return cljs.core.every_QMARK_.call(null, function(p1__8101_SHARP_) {
    return thi.ng.geom.core.intersect.subdot.call(null, p1__8101_SHARP_, refv, n) > 0;
  }, verts);
};
thi.ng.geom.core.intersect.edge_a = function edge_a(ma, mb, ea, eb) {
  var xa = ma & (ma ^ mb);
  var xb = mb & (xa ^ mb);
  var edge = function(xa, xb) {
    return function(a, b, i, j) {
      var cp = ea.call(null, i) * eb.call(null, j) - ea.call(null, j) * eb.call(null, i);
      return cp > 0 && ((xa | a) > 0 && (xb | b) > 0) || cp < 0 && ((xa | b) > 0 && (xb | a) > 0);
    };
  }(xa, xb);
  return!(cljs.core.not_EQ_.call(null, 15, ma | mb) || (edge.call(null, 1, 2, 1, 0) || (edge.call(null, 1, 4, 2, 0) || (edge.call(null, 1, 8, 3, 0) || (edge.call(null, 2, 4, 2, 1) || (edge.call(null, 2, 8, 3, 1) || edge.call(null, 4, 8, 3, 2)))))));
};
thi.ng.geom.core.intersect.get_edge = function get_edge(edges, epoints, id) {
  var e = edges.call(null, id);
  if (cljs.core.truth_(e)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [edges, e], null);
  } else {
    var ep = epoints.call(null, id);
    var e__$1 = thi.ng.geom.core._.call(null, ep.call(null, 0), ep.call(null, 1));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.call(null, edges, id, e__$1), e__$1], null);
  }
};
thi.ng.geom.core.intersect.check_faces_a = function check_faces_a(deltas, epoints, verts, p, specs) {
  var masks = cljs.core.PersistentVector.EMPTY;
  var affine = cljs.core.PersistentVector.EMPTY;
  var edges = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null, null, null], null);
  var s = specs;
  while (true) {
    if (cljs.core.truth_(s)) {
      var vec__8108 = cljs.core.first.call(null, s);
      var f = cljs.core.nth.call(null, vec__8108, 0, null);
      var a = cljs.core.nth.call(null, vec__8108, 1, null);
      var b = cljs.core.nth.call(null, vec__8108, 2, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), f) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f*", "f*", 1013907446), f)) {
        var vec__8109 = thi.ng.geom.core.intersect.get_edge.call(null, edges, epoints, a);
        var edges__$1 = cljs.core.nth.call(null, vec__8109, 0, null);
        var ea = cljs.core.nth.call(null, vec__8109, 1, null);
        var vec__8110 = thi.ng.geom.core.intersect.get_edge.call(null, edges__$1, epoints, b);
        var edges__$2 = cljs.core.nth.call(null, vec__8110, 0, null);
        var eb = cljs.core.nth.call(null, vec__8110, 1, null);
        var n = thi.ng.geom.core.cross.call(null, ea, eb);
        var vec__8111 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), f) ? thi.ng.geom.core.intersect.face_a.call(null, function(masks, affine, edges, s, vec__8109, edges__$1, ea, vec__8110, edges__$2, eb, n, vec__8108, f, a, b) {
          return function(p1__8102_SHARP_) {
            return thi.ng.geom.core.dot.call(null, p1__8102_SHARP_, n);
          };
        }(masks, affine, edges, s, vec__8109, edges__$1, ea, vec__8110, edges__$2, eb, n, vec__8108, f, a, b), deltas) : thi.ng.geom.core.intersect.face_a.call(null, function(masks, affine, edges, s, vec__8109, edges__$1, ea, vec__8110, edges__$2, eb, n, vec__8108, f, a, b) {
          return function(p1__8103_SHARP_) {
            return thi.ng.geom.core.intersect.subdot.call(null, p1__8103_SHARP_, p, n);
          };
        }(masks, affine, edges, s, vec__8109, edges__$1, ea, vec__8110, edges__$2, eb, n, vec__8108, f, a, b), verts);
        var m = cljs.core.nth.call(null, vec__8111, 0, null);
        var a__$1 = cljs.core.nth.call(null, vec__8111, 1, null);
        if (m < 15) {
          var G__8112 = cljs.core.conj.call(null, masks, m);
          var G__8113 = cljs.core.conj.call(null, affine, a__$1);
          var G__8114 = edges__$2;
          var G__8115 = cljs.core.next.call(null, s);
          masks = G__8112;
          affine = G__8113;
          edges = G__8114;
          s = G__8115;
          continue;
        } else {
          return null;
        }
      } else {
        if (!thi.ng.geom.core.intersect.edge_a.call(null, masks.call(null, a), masks.call(null, b), affine.call(null, a), affine.call(null, b))) {
          var G__8116 = masks;
          var G__8117 = affine;
          var G__8118 = edges;
          var G__8119 = cljs.core.next.call(null, s);
          masks = G__8116;
          affine = G__8117;
          edges = G__8118;
          s = G__8119;
          continue;
        } else {
          return null;
        }
      }
    } else {
      return masks;
    }
    break;
  }
};
thi.ng.geom.core.intersect.check_faces_b = function check_faces_b(deltas, epoints, verts, p, specs) {
  var edges = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null, null, null], null);
  var s = specs;
  while (true) {
    if (cljs.core.truth_(s)) {
      var vec__8123 = cljs.core.first.call(null, s);
      var f = cljs.core.nth.call(null, vec__8123, 0, null);
      var a = cljs.core.nth.call(null, vec__8123, 1, null);
      var b = cljs.core.nth.call(null, vec__8123, 2, null);
      var vec__8124 = thi.ng.geom.core.intersect.get_edge.call(null, edges, epoints, a);
      var edges__$1 = cljs.core.nth.call(null, vec__8124, 0, null);
      var ea = cljs.core.nth.call(null, vec__8124, 1, null);
      var vec__8125 = thi.ng.geom.core.intersect.get_edge.call(null, edges__$1, epoints, b);
      var edges__$2 = cljs.core.nth.call(null, vec__8125, 0, null);
      var eb = cljs.core.nth.call(null, vec__8125, 1, null);
      if (!(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "f", "f", 1013904344), f) ? thi.ng.geom.core.intersect.face_b1_QMARK_.call(null, deltas, thi.ng.geom.core.cross.call(null, ea, eb)) : thi.ng.geom.core.intersect.face_b2_QMARK_.call(null, verts, p, thi.ng.geom.core.cross.call(null, ea, eb)))) {
        var G__8126 = edges__$2;
        var G__8127 = cljs.core.next.call(null, s);
        edges = G__8126;
        s = G__8127;
        continue;
      } else {
        return null;
      }
    } else {
      return true;
    }
    break;
  }
};
thi.ng.geom.core.intersect.intersect_tetrahedra_QMARK_ = function intersect_tetrahedra_QMARK_(p__8130, p__8131) {
  var vec__8134 = p__8130;
  var pa = cljs.core.nth.call(null, vec__8134, 0, null);
  var pb = cljs.core.nth.call(null, vec__8134, 1, null);
  var pc = cljs.core.nth.call(null, vec__8134, 2, null);
  var pd = cljs.core.nth.call(null, vec__8134, 3, null);
  var p = vec__8134;
  var vec__8135 = p__8131;
  var qa = cljs.core.nth.call(null, vec__8135, 0, null);
  var qb = cljs.core.nth.call(null, vec__8135, 1, null);
  var qc = cljs.core.nth.call(null, vec__8135, 2, null);
  var qd = cljs.core.nth.call(null, vec__8135, 3, null);
  var q = vec__8135;
  var masks = thi.ng.geom.core.intersect.check_faces_a.call(null, cljs.core.map.call(null, function(vec__8134, pa, pb, pc, pd, p, vec__8135, qa, qb, qc, qd, q) {
    return function(p1__8128_SHARP_) {
      return thi.ng.geom.core._.call(null, p1__8128_SHARP_, pa);
    };
  }(vec__8134, pa, pb, pc, pd, p, vec__8135, qa, qb, qc, qd, q), q), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pb, pa], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pc, pa], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pd, pa], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [pc, pb], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pd, pb], null)], null), q, pb, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), 0, 1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), 2, 
  0], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), 0, 1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), 1, 2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), 0, 2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "e", "e", 1013904343), 1, 2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f*", "f*", 1013907446), 4, 3], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), 0, 3], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), 1, 
  3], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "e", "e", 1013904343), 2, 3], null)], null));
  if (cljs.core.truth_(masks)) {
    var or__3481__auto__ = cljs.core.not_EQ_.call(null, 15, cljs.core.reduce.call(null, cljs.core.bit_or, masks));
    if (or__3481__auto__) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.core.intersect.check_faces_b.call(null, cljs.core.map.call(null, function(or__3481__auto__, masks, vec__8134, pa, pb, pc, pd, p, vec__8135, qa, qb, qc, qd, q) {
        return function(p1__8129_SHARP_) {
          return thi.ng.geom.core._.call(null, p1__8129_SHARP_, qa);
        };
      }(or__3481__auto__, masks, vec__8134, pa, pb, pc, pd, p, vec__8135, qa, qb, qc, qd, q), p), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [qb, qa], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [qc, qa], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [qd, qa], null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [qc, qb], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [qd, qb], null)], null), p, qb, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), 0, 1], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
      "f", "f", 1013904344), 2, 0], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f", "f", 1013904344), 1, 2], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "f*", "f*", 1013907446), 4, 3], null)], null));
    }
  } else {
    return null;
  }
};
goog.provide("thi.ng.geom.aabb");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.geom.cuboid");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.cuboid");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
thi.ng.geom.aabb.aabb = function() {
  var aabb = null;
  var aabb__0 = function() {
    return new thi.ng.geom.types.AABB(thi.ng.geom.core.vector.vec3.call(null, 0), thi.ng.geom.core.vector.vec3.call(null, 1));
  };
  var aabb__1 = function(size) {
    return new thi.ng.geom.types.AABB(thi.ng.geom.core.vector.vec3.call(null, 0), thi.ng.geom.core.vector.vec3.call(null, size));
  };
  var aabb__2 = function(o, size) {
    return new thi.ng.geom.types.AABB(thi.ng.geom.core.vector.vec3.call(null, o), thi.ng.geom.core.vector.vec3.call(null, size));
  };
  var aabb__3 = function(sx, sy, sz) {
    return new thi.ng.geom.types.AABB(thi.ng.geom.core.vector.vec3.call(null, 0), thi.ng.geom.core.vector.vec3.call(null, sx, sy, sz));
  };
  aabb = function(sx, sy, sz) {
    switch(arguments.length) {
      case 0:
        return aabb__0.call(this);
      case 1:
        return aabb__1.call(this, sx);
      case 2:
        return aabb__2.call(this, sx, sy);
      case 3:
        return aabb__3.call(this, sx, sy, sz);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aabb.cljs$core$IFn$_invoke$arity$0 = aabb__0;
  aabb.cljs$core$IFn$_invoke$arity$1 = aabb__1;
  aabb.cljs$core$IFn$_invoke$arity$2 = aabb__2;
  aabb.cljs$core$IFn$_invoke$arity$3 = aabb__3;
  return aabb;
}();
thi.ng.geom.aabb.aabb_from_minmax = function aabb_from_minmax(p, q) {
  var a = thi.ng.geom.core.min.call(null, p, q);
  return new thi.ng.geom.types.AABB(a, thi.ng.geom.core._.call(null, thi.ng.geom.core.max.call(null, p, q), a));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var ___$1 = this;
  return thi.ng.geom.core.transform.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), m);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_z.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), theta);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_x.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), theta);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_y.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), theta);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_z.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), theta);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, axis, theta) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate_around_axis.call(null, thi.ng.geom.cuboid.cuboid.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), axis, theta);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(p__8323) {
  var map__8324 = p__8323;
  var map__8324__$1 = cljs.core.seq_QMARK_.call(null, map__8324) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8324) : map__8324;
  var p = cljs.core.get.call(null, map__8324__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8324__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8325 = this;
  var map__8325__$1 = cljs.core.seq_QMARK_.call(null, map__8325) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8325) : map__8325;
  var p__$1 = cljs.core.get.call(null, map__8325__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8325__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._.call(null, p__$1, thi.ng.geom.core._STAR_.call(null, size__$1, 0.5)), size__$1);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(p__8326, q) {
  var map__8327 = p__8326;
  var map__8327__$1 = cljs.core.seq_QMARK_.call(null, map__8327) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8327) : map__8327;
  var size = cljs.core.get.call(null, map__8327__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8328 = this;
  var map__8328__$1 = cljs.core.seq_QMARK_.call(null, map__8328) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8328) : map__8328;
  var size__$1 = cljs.core.get.call(null, map__8328__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._.call(null, q, thi.ng.geom.core._STAR_.call(null, size__$1, 0.5)), size__$1);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.madd.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), 0.5, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSample$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSample$random_point_inside$arity$1 = function(p__8329) {
  var map__8330 = p__8329;
  var map__8330__$1 = cljs.core.seq_QMARK_.call(null, map__8330) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8330) : map__8330;
  var p = cljs.core.get.call(null, map__8330__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8330__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8331 = this;
  var map__8331__$1 = cljs.core.seq_QMARK_.call(null, map__8331) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8331) : map__8331;
  var p__$1 = cljs.core.get.call(null, map__8331__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8331__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8332 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8332, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8332, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8332, 2, null);
  var vec__8333 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8333, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8333, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8333, 2, null);
  return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), thi.ng.common.math.core.random.call(null, y1, y2), thi.ng.common.math.core.random.call(null, z1, z2));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSample$random_point$arity$1 = function(p__8334) {
  var map__8335 = p__8334;
  var map__8335__$1 = cljs.core.seq_QMARK_.call(null, map__8335) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8335) : map__8335;
  var p = cljs.core.get.call(null, map__8335__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8335__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8336 = this;
  var map__8336__$1 = cljs.core.seq_QMARK_.call(null, map__8336) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8336) : map__8336;
  var p__$1 = cljs.core.get.call(null, map__8336__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8336__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8337 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8337, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8337, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8337, 2, null);
  var vec__8338 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8338, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8338, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8338, 2, null);
  var id = thi.ng.common.math.core.random.call(null, 6) | 0;
  if (id < 2) {
    return thi.ng.geom.core.vector.vec3.call(null, id === 0 ? x1 : x2, thi.ng.common.math.core.random.call(null, y1, y2), thi.ng.common.math.core.random.call(null, z1, z2));
  } else {
    if (id < 4) {
      return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), cljs.core._EQ_.call(null, 2, id) ? y1 : y2, thi.ng.common.math.core.random.call(null, z1, z2));
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.geom.core.vector.vec3.call(null, thi.ng.common.math.core.random.call(null, x1, x2), thi.ng.common.math.core.random.call(null, y1, y2), cljs.core._EQ_.call(null, 4, id) ? z1 : z2);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSubdivide$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.subdivide.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$2 = function(p__8339, p__8340) {
  var map__8341 = p__8339;
  var map__8341__$1 = cljs.core.seq_QMARK_.call(null, map__8341) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8341) : map__8341;
  var p = cljs.core.get.call(null, map__8341__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8341__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8342 = p__8340;
  var map__8342__$1 = cljs.core.seq_QMARK_.call(null, map__8342) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8342) : map__8342;
  var slices = cljs.core.get.call(null, map__8342__$1, new cljs.core.Keyword(null, "slices", "slices", 4409223315));
  var rows = cljs.core.get.call(null, map__8342__$1, new cljs.core.Keyword(null, "rows", "rows", 1017410891));
  var cols = cljs.core.get.call(null, map__8342__$1, new cljs.core.Keyword(null, "cols", "cols", 1016963685));
  var num = cljs.core.get.call(null, map__8342__$1, new cljs.core.Keyword(null, "num", "num", 1014013688), 1);
  var map__8343 = this;
  var map__8343__$1 = cljs.core.seq_QMARK_.call(null, map__8343) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8343) : map__8343;
  var p__$1 = cljs.core.get.call(null, map__8343__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8343__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var sx = function() {
    var or__3481__auto__ = cols;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }();
  var sy = function() {
    var or__3481__auto__ = rows;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }();
  var sz = function() {
    var or__3481__auto__ = slices;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }();
  var s = thi.ng.geom.core.div.call(null, size__$1, sx, sy, sz);
  var iter__4198__auto__ = function(sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
    return function iter__8344(s__8345) {
      return new cljs.core.LazySeq(null, function(sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
        return function() {
          var s__8345__$1 = s__8345;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__8345__$1);
            if (temp__4126__auto__) {
              var xs__4624__auto__ = temp__4126__auto__;
              var z = cljs.core.first.call(null, xs__4624__auto__);
              var iterys__4194__auto__ = function(s__8345__$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
                return function iter__8346(s__8347) {
                  return new cljs.core.LazySeq(null, function(s__8345__$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
                    return function() {
                      var s__8347__$1 = s__8347;
                      while (true) {
                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__8347__$1);
                        if (temp__4126__auto____$1) {
                          var xs__4624__auto____$1 = temp__4126__auto____$1;
                          var y = cljs.core.first.call(null, xs__4624__auto____$1);
                          var iterys__4194__auto__ = function(s__8347__$1, s__8345__$1, y, xs__4624__auto____$1, temp__4126__auto____$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
                            return function iter__8348(s__8349) {
                              return new cljs.core.LazySeq(null, function(s__8347__$1, s__8345__$1, y, xs__4624__auto____$1, temp__4126__auto____$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num) {
                                return function() {
                                  var s__8349__$1 = s__8349;
                                  while (true) {
                                    var temp__4126__auto____$2 = cljs.core.seq.call(null, s__8349__$1);
                                    if (temp__4126__auto____$2) {
                                      var s__8349__$2 = temp__4126__auto____$2;
                                      if (cljs.core.chunked_seq_QMARK_.call(null, s__8349__$2)) {
                                        var c__4196__auto__ = cljs.core.chunk_first.call(null, s__8349__$2);
                                        var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                                        var b__8351 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                                        if (function() {
                                          var i__8350 = 0;
                                          while (true) {
                                            if (i__8350 < size__4197__auto__) {
                                              var x = cljs.core._nth.call(null, c__4196__auto__, i__8350);
                                              cljs.core.chunk_append.call(null, b__8351, new thi.ng.geom.types.AABB(thi.ng.geom.core.madd.call(null, thi.ng.geom.core.vector.vec3.call(null, x, y, z), size__$1, p__$1), s));
                                              var G__8394 = i__8350 + 1;
                                              i__8350 = G__8394;
                                              continue;
                                            } else {
                                              return true;
                                            }
                                            break;
                                          }
                                        }()) {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8351), iter__8348.call(null, cljs.core.chunk_rest.call(null, s__8349__$2)));
                                        } else {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8351), null);
                                        }
                                      } else {
                                        var x = cljs.core.first.call(null, s__8349__$2);
                                        return cljs.core.cons.call(null, new thi.ng.geom.types.AABB(thi.ng.geom.core.madd.call(null, thi.ng.geom.core.vector.vec3.call(null, x, y, z), size__$1, p__$1), s), iter__8348.call(null, cljs.core.rest.call(null, s__8349__$2)));
                                      }
                                    } else {
                                      return null;
                                    }
                                    break;
                                  }
                                };
                              }(s__8347__$1, s__8345__$1, y, xs__4624__auto____$1, temp__4126__auto____$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num), null, null);
                            };
                          }(s__8347__$1, s__8345__$1, y, xs__4624__auto____$1, temp__4126__auto____$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num);
                          var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, cljs.core.butlast.call(null, thi.ng.common.math.core.norm_range.call(null, sx))));
                          if (fs__4195__auto__) {
                            return cljs.core.concat.call(null, fs__4195__auto__, iter__8346.call(null, cljs.core.rest.call(null, s__8347__$1)));
                          } else {
                            var G__8395 = cljs.core.rest.call(null, s__8347__$1);
                            s__8347__$1 = G__8395;
                            continue;
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(s__8345__$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num), null, null);
                };
              }(s__8345__$1, z, xs__4624__auto__, temp__4126__auto__, sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num);
              var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, cljs.core.butlast.call(null, thi.ng.common.math.core.norm_range.call(null, sy))));
              if (fs__4195__auto__) {
                return cljs.core.concat.call(null, fs__4195__auto__, iter__8344.call(null, cljs.core.rest.call(null, s__8345__$1)));
              } else {
                var G__8396 = cljs.core.rest.call(null, s__8345__$1);
                s__8345__$1 = G__8396;
                continue;
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num), null, null);
    };
  }(sx, sy, sz, s, map__8343, map__8343__$1, p__$1, size__$1, map__8341, map__8341__$1, p, size, map__8342, map__8342__$1, slices, rows, cols, num);
  return iter__4198__auto__.call(null, cljs.core.butlast.call(null, thi.ng.common.math.core.norm_range.call(null, sz)));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PClassify$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PClassify$classify_point$arity$2 = function(p__8352, p__8353) {
  var map__8354 = p__8352;
  var map__8354__$1 = cljs.core.seq_QMARK_.call(null, map__8354) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8354) : map__8354;
  var p = cljs.core.get.call(null, map__8354__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8354__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8355 = p__8353;
  var x = cljs.core.nth.call(null, vec__8355, 0, null);
  var y = cljs.core.nth.call(null, vec__8355, 1, null);
  var z = cljs.core.nth.call(null, vec__8355, 2, null);
  var q = vec__8355;
  var map__8356 = this;
  var map__8356__$1 = cljs.core.seq_QMARK_.call(null, map__8356) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8356) : map__8356;
  var p__$1 = cljs.core.get.call(null, map__8356__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8356__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8357 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8357, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8357, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8357, 2, null);
  var vec__8358 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8358, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8358, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8358, 2, null);
  var on_plane_QMARK_ = function(vec__8357, x1, y1, z1, vec__8358, x2, y2, z2, map__8356, map__8356__$1, p__$1, size__$1, map__8354, map__8354__$1, p, size, vec__8355, x, y, z, q) {
    return function(p__8359) {
      var vec__8360 = p__8359;
      var minp = cljs.core.nth.call(null, vec__8360, 0, null);
      var maxp = cljs.core.nth.call(null, vec__8360, 1, null);
      var p__$2 = cljs.core.nth.call(null, vec__8360, 2, null);
      var min1 = cljs.core.nth.call(null, vec__8360, 3, null);
      var max1 = cljs.core.nth.call(null, vec__8360, 4, null);
      var min2 = cljs.core.nth.call(null, vec__8360, 5, null);
      var max2 = cljs.core.nth.call(null, vec__8360, 6, null);
      var c1 = cljs.core.nth.call(null, vec__8360, 7, null);
      var c2 = cljs.core.nth.call(null, vec__8360, 8, null);
      return(thi.ng.common.math.core.delta_EQ_.call(null, minp, p__$2, thi.ng.common.math.core._STAR_eps_STAR_) || thi.ng.common.math.core.delta_EQ_.call(null, maxp, p__$2, thi.ng.common.math.core._STAR_eps_STAR_)) && (thi.ng.common.math.core.in_range_QMARK_.call(null, min1, max1, c1) && thi.ng.common.math.core.in_range_QMARK_.call(null, min2, max2, c2));
    };
  }(vec__8357, x1, y1, z1, vec__8358, x2, y2, z2, map__8356, map__8356__$1, p__$1, size__$1, map__8354, map__8354__$1, p, size, vec__8355, x, y, z, q);
  if (cljs.core.truth_(cljs.core.some.call(null, on_plane_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [x1, x2, x, y1, y2, z1, z2, y, z], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [y1, y2, y, x1, x2, z1, z2, x, z], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [z1, z2, z, x1, x2, y1, 
  y2, x, y], null)], null)))) {
    return 0;
  } else {
    if (thi.ng.common.math.core.in_range_QMARK_.call(null, x1, x2, x) && (thi.ng.common.math.core.in_range_QMARK_.call(null, y1, y2, y) && thi.ng.common.math.core.in_range_QMARK_.call(null, z1, z2, z))) {
      return 1;
    } else {
      return-1;
    }
  }
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PEdgeAccess$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PEdgeAccess$edges$arity$1 = function(_) {
  var ___$1 = this;
  var vec__8361 = thi.ng.geom.core.vertices.call(null, ___$1);
  var a = cljs.core.nth.call(null, vec__8361, 0, null);
  var b = cljs.core.nth.call(null, vec__8361, 1, null);
  var c = cljs.core.nth.call(null, vec__8361, 2, null);
  var d = cljs.core.nth.call(null, vec__8361, 3, null);
  var e = cljs.core.nth.call(null, vec__8361, 4, null);
  var f = cljs.core.nth.call(null, vec__8361, 5, null);
  var g = cljs.core.nth.call(null, vec__8361, 6, null);
  var h = cljs.core.nth.call(null, vec__8361, 7, null);
  return new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, g], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [h, e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [b, f], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, g], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, h], null)], null);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(p__8362) {
  var map__8363 = p__8362;
  var map__8363__$1 = cljs.core.seq_QMARK_.call(null, map__8363) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8363) : map__8363;
  var vec__8364 = cljs.core.get.call(null, map__8363__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w = cljs.core.nth.call(null, vec__8364, 0, null);
  var h = cljs.core.nth.call(null, vec__8364, 1, null);
  var d = cljs.core.nth.call(null, vec__8364, 2, null);
  var map__8365 = this;
  var map__8365__$1 = cljs.core.seq_QMARK_.call(null, map__8365) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8365) : map__8365;
  var vec__8366 = cljs.core.get.call(null, map__8365__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w__$1 = cljs.core.nth.call(null, vec__8366, 0, null);
  var h__$1 = cljs.core.nth.call(null, vec__8366, 1, null);
  var d__$1 = cljs.core.nth.call(null, vec__8366, 2, null);
  return w__$1 * h__$1 * d__$1;
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBoundary$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2 = function(p__8367, p__8368) {
  var map__8369 = p__8367;
  var map__8369__$1 = cljs.core.seq_QMARK_.call(null, map__8369) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8369) : map__8369;
  var p = cljs.core.get.call(null, map__8369__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8369__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8370 = p__8368;
  var qx = cljs.core.nth.call(null, vec__8370, 0, null);
  var qy = cljs.core.nth.call(null, vec__8370, 1, null);
  var qz = cljs.core.nth.call(null, vec__8370, 2, null);
  var map__8371 = this;
  var map__8371__$1 = cljs.core.seq_QMARK_.call(null, map__8371) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8371) : map__8371;
  var p__$1 = cljs.core.get.call(null, map__8371__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8371__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8372 = p__$1;
  var x1 = cljs.core.nth.call(null, vec__8372, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8372, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8372, 2, null);
  var vec__8373 = thi.ng.geom.core._PLUS_.call(null, p__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8373, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8373, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8373, 2, null);
  return thi.ng.common.math.core.in_range_QMARK_.call(null, x1, x2, qx) && (thi.ng.common.math.core.in_range_QMARK_.call(null, y1, y2, qy) && thi.ng.common.math.core.in_range_QMARK_.call(null, z1, z2, qz));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PIntersect$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PIntersect$intersect_shape$arity$2 = function(_, s) {
  var ___$1 = this;
  if (s instanceof thi.ng.geom.types.AABB) {
    return thi.ng.geom.core.intersect.intersect_aabb_aabb_QMARK_.call(null, ___$1, s);
  } else {
    if (s instanceof thi.ng.geom.types.Sphere) {
      return thi.ng.geom.core.intersect.intersect_aabb_sphere_QMARK_.call(null, ___$1, s);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.common.error.type_error_BANG_.call(null, "AABB", s);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PFaceAccess$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PFaceAccess$faces$arity$1 = function(_) {
  var ___$1 = this;
  var vec__8374 = thi.ng.geom.core.vertices.call(null, ___$1);
  var a = cljs.core.nth.call(null, vec__8374, 0, null);
  var b = cljs.core.nth.call(null, vec__8374, 1, null);
  var c = cljs.core.nth.call(null, vec__8374, 2, null);
  var d = cljs.core.nth.call(null, vec__8374, 3, null);
  var e = cljs.core.nth.call(null, vec__8374, 4, null);
  var f = cljs.core.nth.call(null, vec__8374, 5, null);
  var g = cljs.core.nth.call(null, vec__8374, 6, null);
  var h = cljs.core.nth.call(null, vec__8374, 7, null);
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, h, g], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, f, e], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f, g, h], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d, c, b], null), 
  new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, g, f], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e, h, d], null)], null);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var ___$1 = this;
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), t), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(p__8380) {
  var map__8381 = p__8380;
  var map__8381__$1 = cljs.core.seq_QMARK_.call(null, map__8381) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8381) : map__8381;
  var p = cljs.core.get.call(null, map__8381__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8381__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8382 = this;
  var map__8382__$1 = cljs.core.seq_QMARK_.call(null, map__8382) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8382) : map__8382;
  var p__$1 = cljs.core.get.call(null, map__8382__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8382__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var ext = thi.ng.geom.core._STAR_.call(null, size__$1, 0.5);
  return thi.ng.geom.types.utils.bounding_sphere.call(null, thi.ng.geom.core._PLUS_.call(null, p__$1, ext), thi.ng.geom.core.mag.call(null, ext));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), s), thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), s));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, sx, sy) {
  var ___$1 = this;
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), sx, sy), thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), sx, sy));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, sx, sy, sz) {
  var ___$1 = this;
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), sx, sy, sz), thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), sx, sy, sz));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PScale$scale_size$arity$2 = function(_, s) {
  var ___$1 = this;
  var s_SINGLEQUOTE_ = thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), s);
  return new thi.ng.geom.types.AABB(thi.ng.geom.core.madd.call(null, thi.ng.geom.core._.call(null, s_SINGLEQUOTE_, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1)), -0.5, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1)), s_SINGLEQUOTE_);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTessellate$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.tessellate.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$2 = function(_, p__8383) {
  var map__8384 = p__8383;
  var map__8384__$1 = cljs.core.seq_QMARK_.call(null, map__8384) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8384) : map__8384;
  var opts = map__8384__$1;
  var f = cljs.core.get.call(null, map__8384__$1, new cljs.core.Keyword(null, "fn", "fn", 1013907514), thi.ng.geom.core.utils.tessellate_3);
  var ___$1 = this;
  return cljs.core.mapcat.call(null, f, cljs.core.mapcat.call(null, thi.ng.geom.core.faces, cljs.core.truth_(cljs.core.some.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "num", "num", 1014013688), null, new cljs.core.Keyword(null, "slices", "slices", 4409223315), null, new cljs.core.Keyword(null, "rows", "rows", 1017410891), null, new cljs.core.Keyword(null, "cols", "cols", 1016963685), null], null), null), cljs.core.keys.call(null, 
  opts))) ? thi.ng.geom.core.subdivide.call(null, ___$1, opts) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [___$1], null)));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 0);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 1);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 2);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PVertexAccess$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PVertexAccess$vertices$arity$1 = function(p__8385) {
  var map__8386 = p__8385;
  var map__8386__$1 = cljs.core.seq_QMARK_.call(null, map__8386) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8386) : map__8386;
  var a = cljs.core.get.call(null, map__8386__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size = cljs.core.get.call(null, map__8386__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__8387 = this;
  var map__8387__$1 = cljs.core.seq_QMARK_.call(null, map__8387) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8387) : map__8387;
  var a__$1 = cljs.core.get.call(null, map__8387__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var size__$1 = cljs.core.get.call(null, map__8387__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var vec__8388 = a__$1;
  var x1 = cljs.core.nth.call(null, vec__8388, 0, null);
  var y1 = cljs.core.nth.call(null, vec__8388, 1, null);
  var z1 = cljs.core.nth.call(null, vec__8388, 2, null);
  var vec__8389 = thi.ng.geom.core._PLUS_.call(null, a__$1, size__$1);
  var x2 = cljs.core.nth.call(null, vec__8389, 0, null);
  var y2 = cljs.core.nth.call(null, vec__8389, 1, null);
  var z2 = cljs.core.nth.call(null, vec__8389, 2, null);
  var g = vec__8389;
  var b = thi.ng.geom.core.vector.vec3.call(null, x1, y1, z2);
  var c = thi.ng.geom.core.vector.vec3.call(null, x2, y1, z2);
  var d = thi.ng.geom.core.vector.vec3.call(null, x2, y1, z1);
  var e = thi.ng.geom.core.vector.vec3.call(null, x1, y2, z1);
  var f = thi.ng.geom.core.vector.vec3.call(null, x1, y2, z2);
  var h = thi.ng.geom.core.vector.vec3.call(null, x2, y2, z1);
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [a__$1, b, c, d, e, f, g, h], null);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.as_mesh.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(_, p__8390) {
  var map__8391 = p__8390;
  var map__8391__$1 = cljs.core.seq_QMARK_.call(null, map__8391) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8391) : map__8391;
  var flags = cljs.core.get.call(null, map__8391__$1, new cljs.core.Keyword(null, "flags", "flags", 1111417337), "nsewfb");
  var mesh = cljs.core.get.call(null, map__8391__$1, new cljs.core.Keyword(null, "mesh", "mesh", 1017252191));
  var ___$1 = this;
  var vec__8392 = thi.ng.geom.core.vertices.call(null, ___$1);
  var a = cljs.core.nth.call(null, vec__8392, 0, null);
  var b = cljs.core.nth.call(null, vec__8392, 1, null);
  var c = cljs.core.nth.call(null, vec__8392, 2, null);
  var d = cljs.core.nth.call(null, vec__8392, 3, null);
  var e = cljs.core.nth.call(null, vec__8392, 4, null);
  var f = cljs.core.nth.call(null, vec__8392, 5, null);
  var g = cljs.core.nth.call(null, vec__8392, 6, null);
  var h = cljs.core.nth.call(null, vec__8392, 7, null);
  var vec__8393 = thi.ng.common.data.core.demunge_flags_seq.call(null, flags, "nsewfb");
  var tp = cljs.core.nth.call(null, vec__8393, 0, null);
  var bt = cljs.core.nth.call(null, vec__8393, 1, null);
  var rt = cljs.core.nth.call(null, vec__8393, 2, null);
  var lf = cljs.core.nth.call(null, vec__8393, 3, null);
  var fr = cljs.core.nth.call(null, vec__8393, 4, null);
  var bk = cljs.core.nth.call(null, vec__8393, 5, null);
  return thi.ng.geom.core.into.call(null, function() {
    var or__3481__auto__ = mesh;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.gmesh.gmesh.call(null);
    }
  }(), cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(fr) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c, g, f], null) : null, cljs.core.truth_(bk) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, e, h, d], null) : null, cljs.core.truth_(lf) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [a, b, f, e], null) : null, cljs.core.truth_(rt) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d, h, g], null) : null, cljs.core.truth_(tp) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f, g, h], null) : null, cljs.core.truth_(bt) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, d, c, b], null) : null], null)));
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PProximity$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PProximity$closest_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.AABB.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(p__8375) {
  var map__8376 = p__8375;
  var map__8376__$1 = cljs.core.seq_QMARK_.call(null, map__8376) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8376) : map__8376;
  var vec__8377 = cljs.core.get.call(null, map__8376__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w = cljs.core.nth.call(null, vec__8377, 0, null);
  var h = cljs.core.nth.call(null, vec__8377, 1, null);
  var d = cljs.core.nth.call(null, vec__8377, 2, null);
  var map__8378 = this;
  var map__8378__$1 = cljs.core.seq_QMARK_.call(null, map__8378) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8378) : map__8378;
  var vec__8379 = cljs.core.get.call(null, map__8378__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w__$1 = cljs.core.nth.call(null, vec__8379, 0, null);
  var h__$1 = cljs.core.nth.call(null, vec__8379, 1, null);
  var d__$1 = cljs.core.nth.call(null, vec__8379, 2, null);
  return 2 * (w__$1 * h__$1 + d__$1 * h__$1 + w__$1 * d__$1);
};
goog.provide("thi.ng.geom.rect");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.aabb");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.aabb");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.data.core");
thi.ng.geom.rect.rect = function() {
  var rect = null;
  var rect__0 = function() {
    return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null), thi.ng.geom.core.vector.vec2.call(null, 1));
  };
  var rect__1 = function(w) {
    return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null), thi.ng.geom.core.vector.vec2.call(null, w));
  };
  var rect__2 = function(p, q) {
    if (cljs.core.sequential_QMARK_.call(null, p)) {
      if (cljs.core.sequential_QMARK_.call(null, q)) {
        var p__$1 = thi.ng.geom.core.vector.vec2.call(null, p);
        var q__$1 = thi.ng.geom.core.vector.vec2.call(null, q);
        var vec__7965 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.min.call(null, p__$1, q__$1), thi.ng.geom.core.max.call(null, p__$1, q__$1)], null);
        var p__$2 = cljs.core.nth.call(null, vec__7965, 0, null);
        var q__$2 = cljs.core.nth.call(null, vec__7965, 1, null);
        return new thi.ng.geom.types.Rect2(p__$2, thi.ng.geom.core._.call(null, q__$2, p__$2));
      } else {
        return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, p), thi.ng.geom.core.vector.vec2.call(null, q));
      }
    } else {
      return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null), thi.ng.geom.core.vector.vec2.call(null, p, q));
    }
  };
  var rect__3 = function(x, y, w) {
    if (typeof x === "number") {
      return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, x, y), thi.ng.geom.core.vector.vec2.call(null, w));
    } else {
      return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, x), thi.ng.geom.core.vector.vec2.call(null, y, w));
    }
  };
  var rect__4 = function(x, y, w, h) {
    return new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, x, y), thi.ng.geom.core.vector.vec2.call(null, w, h));
  };
  rect = function(x, y, w, h) {
    switch(arguments.length) {
      case 0:
        return rect__0.call(this);
      case 1:
        return rect__1.call(this, x);
      case 2:
        return rect__2.call(this, x, y);
      case 3:
        return rect__3.call(this, x, y, w);
      case 4:
        return rect__4.call(this, x, y, w, h);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rect.cljs$core$IFn$_invoke$arity$0 = rect__0;
  rect.cljs$core$IFn$_invoke$arity$1 = rect__1;
  rect.cljs$core$IFn$_invoke$arity$2 = rect__2;
  rect.cljs$core$IFn$_invoke$arity$3 = rect__3;
  rect.cljs$core$IFn$_invoke$arity$4 = rect__4;
  return rect;
}();
thi.ng.geom.rect.union = function union(p__7966, p__7967) {
  var map__7973 = p__7966;
  var map__7973__$1 = cljs.core.seq_QMARK_.call(null, map__7973) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7973) : map__7973;
  var p = cljs.core.get.call(null, map__7973__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var vec__7974 = cljs.core.get.call(null, map__7973__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w = cljs.core.nth.call(null, vec__7974, 0, null);
  var h = cljs.core.nth.call(null, vec__7974, 1, null);
  var map__7975 = p__7967;
  var map__7975__$1 = cljs.core.seq_QMARK_.call(null, map__7975) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7975) : map__7975;
  var q = cljs.core.get.call(null, map__7975__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var vec__7976 = cljs.core.get.call(null, map__7975__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var qw = cljs.core.nth.call(null, vec__7976, 0, null);
  var qh = cljs.core.nth.call(null, vec__7976, 1, null);
  var vec__7977 = thi.ng.geom.core.min.call(null, p, q);
  var x1 = cljs.core.nth.call(null, vec__7977, 0, null);
  var y1 = cljs.core.nth.call(null, vec__7977, 1, null);
  var p_STAR_ = vec__7977;
  var x2 = function() {
    var x__3788__auto__ = p.call(null, 0) + w;
    var y__3789__auto__ = q.call(null, 0) + qw;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }();
  var y2 = function() {
    var x__3788__auto__ = p.call(null, 1) + h;
    var y__3789__auto__ = q.call(null, 1) + qh;
    return x__3788__auto__ > y__3789__auto__ ? x__3788__auto__ : y__3789__auto__;
  }();
  var w__$1 = x2 - x1;
  var h__$1 = y2 - y1;
  return new thi.ng.geom.types.Rect2(p_STAR_, thi.ng.geom.core.vector.vec2.call(null, w__$1, h__$1));
};
thi.ng.geom.rect.map_uv = function map_uv(p__7978, p__7979) {
  var map__7982 = p__7978;
  var map__7982__$1 = cljs.core.seq_QMARK_.call(null, map__7982) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7982) : map__7982;
  var size = cljs.core.get.call(null, map__7982__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var p = cljs.core.get.call(null, map__7982__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var vec__7983 = p__7979;
  var qx = cljs.core.nth.call(null, vec__7983, 0, null);
  var qy = cljs.core.nth.call(null, vec__7983, 1, null);
  return thi.ng.geom.core.vector.vec2.call(null, (qx - p.call(null, 0)) / size.call(null, 0), (qy - p.call(null, 1)) / size.call(null, 1));
};
thi.ng.geom.rect.unmap_uv = function unmap_uv(p__7984, p__7985) {
  var map__7988 = p__7984;
  var map__7988__$1 = cljs.core.seq_QMARK_.call(null, map__7988) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7988) : map__7988;
  var size = cljs.core.get.call(null, map__7988__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var p = cljs.core.get.call(null, map__7988__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var vec__7989 = p__7985;
  var qx = cljs.core.nth.call(null, vec__7989, 0, null);
  var qy = cljs.core.nth.call(null, vec__7989, 1, null);
  return thi.ng.geom.core.vector.vec2.call(null, qx * size.call(null, 0) + p.call(null, 0), qy * size.call(null, 1) + p.call(null, 1));
};
thi.ng.geom.rect.left = function left(r) {
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r).call(null, 0);
};
thi.ng.geom.rect.right = function right(r) {
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r).call(null, 0) + (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(r).call(null, 0);
};
thi.ng.geom.rect.bottom = function bottom(r) {
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r).call(null, 1);
};
thi.ng.geom.rect.bottom_left = function bottom_left(r) {
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r);
};
thi.ng.geom.rect.top = function top(r) {
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r).call(null, 1) + (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(r).call(null, 1);
};
thi.ng.geom.rect.top_right = function top_right(r) {
  return thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(r), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(r));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var ___$1 = this;
  return thi.ng.geom.core.transform.call(null, thi.ng.geom.core.as_polygon.call(null, ___$1), m);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, m) {
  var ___$1 = this;
  return thi.ng.geom.core.rotate.call(null, thi.ng.geom.core.as_polygon.call(null, ___$1), m);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(p__7991) {
  var map__7992 = p__7991;
  var map__7992__$1 = cljs.core.seq_QMARK_.call(null, map__7992) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7992) : map__7992;
  var s = cljs.core.get.call(null, map__7992__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__7993 = this;
  var map__7993__$1 = cljs.core.seq_QMARK_.call(null, map__7993) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7993) : map__7993;
  var s__$1 = cljs.core.get.call(null, map__7993__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core._STAR_.call(null, s__$1, -0.5), s__$1);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(p__7994, o) {
  var map__7995 = p__7994;
  var map__7995__$1 = cljs.core.seq_QMARK_.call(null, map__7995) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7995) : map__7995;
  var s = cljs.core.get.call(null, map__7995__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var map__7996 = this;
  var map__7996__$1 = cljs.core.seq_QMARK_.call(null, map__7996) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7996) : map__7996;
  var s__$1 = cljs.core.get.call(null, map__7996__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core.madd.call(null, s__$1, -0.5, o), s__$1);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.madd.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), 0.5, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PPolygonConvert$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PPolygonConvert$as_polygon$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Polygon2(thi.ng.geom.core.vertices.call(null, ___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSample$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSample$point_at$arity$2 = function(_, t) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.point_at.call(null, t, cljs.core.conj.call(null, thi.ng.geom.core.vertices.call(null, ___$1), (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSample$random_point$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.point_at.call(null, ___$1, thi.ng.common.math.core.random.call(null));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSample$random_point_inside$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), thi.ng.common.math.core.random.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 0)), thi.ng.common.math.core.random.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSample$sample_uniform$arity$3 = function(_, udist, include_last_QMARK_) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.sample_uniform.call(null, udist, include_last_QMARK_, cljs.core.conj.call(null, thi.ng.geom.core.vertices.call(null, ___$1), (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSubdivide$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.subdivide.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PSubdivide$subdivide$arity$2 = function(_, p__7997) {
  var map__7998 = p__7997;
  var map__7998__$1 = cljs.core.seq_QMARK_.call(null, map__7998) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7998) : map__7998;
  var rows = cljs.core.get.call(null, map__7998__$1, new cljs.core.Keyword(null, "rows", "rows", 1017410891));
  var cols = cljs.core.get.call(null, map__7998__$1, new cljs.core.Keyword(null, "cols", "cols", 1016963685));
  var num = cljs.core.get.call(null, map__7998__$1, new cljs.core.Keyword(null, "num", "num", 1014013688), 2);
  var ___$1 = this;
  var dx = 1 / function() {
    var or__3481__auto__ = cols;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }();
  var dy = 1 / function() {
    var or__3481__auto__ = rows;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return num;
    }
  }();
  var rx = cljs.core.range.call(null, 0, 1, dx);
  var ry = cljs.core.range.call(null, 0, 1, dy);
  var s = thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), dx, dy);
  var iter__4198__auto__ = function(dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num) {
    return function iter__7999(s__8000) {
      return new cljs.core.LazySeq(null, function(dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num) {
        return function() {
          var s__8000__$1 = s__8000;
          while (true) {
            var temp__4126__auto__ = cljs.core.seq.call(null, s__8000__$1);
            if (temp__4126__auto__) {
              var xs__4624__auto__ = temp__4126__auto__;
              var y = cljs.core.first.call(null, xs__4624__auto__);
              var iterys__4194__auto__ = function(s__8000__$1, y, xs__4624__auto__, temp__4126__auto__, dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num) {
                return function iter__8001(s__8002) {
                  return new cljs.core.LazySeq(null, function(s__8000__$1, y, xs__4624__auto__, temp__4126__auto__, dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num) {
                    return function() {
                      var s__8002__$1 = s__8002;
                      while (true) {
                        var temp__4126__auto____$1 = cljs.core.seq.call(null, s__8002__$1);
                        if (temp__4126__auto____$1) {
                          var s__8002__$2 = temp__4126__auto____$1;
                          if (cljs.core.chunked_seq_QMARK_.call(null, s__8002__$2)) {
                            var c__4196__auto__ = cljs.core.chunk_first.call(null, s__8002__$2);
                            var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                            var b__8004 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                            if (function() {
                              var i__8003 = 0;
                              while (true) {
                                if (i__8003 < size__4197__auto__) {
                                  var x = cljs.core._nth.call(null, c__4196__auto__, i__8003);
                                  var vec__8011 = thi.ng.geom.rect.unmap_uv.call(null, ___$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
                                  var px = cljs.core.nth.call(null, vec__8011, 0, null);
                                  var py = cljs.core.nth.call(null, vec__8011, 1, null);
                                  var px__$1 = thi.ng.common.math.core.roundto.call(null, px, thi.ng.common.math.core._STAR_eps_STAR_);
                                  var py__$1 = thi.ng.common.math.core.roundto.call(null, py, thi.ng.common.math.core._STAR_eps_STAR_);
                                  cljs.core.chunk_append.call(null, b__8004, new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, px__$1, py__$1), s));
                                  var G__8025 = i__8003 + 1;
                                  i__8003 = G__8025;
                                  continue;
                                } else {
                                  return true;
                                }
                                break;
                              }
                            }()) {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8004), iter__8001.call(null, cljs.core.chunk_rest.call(null, s__8002__$2)));
                            } else {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8004), null);
                            }
                          } else {
                            var x = cljs.core.first.call(null, s__8002__$2);
                            var vec__8012 = thi.ng.geom.rect.unmap_uv.call(null, ___$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, y], null));
                            var px = cljs.core.nth.call(null, vec__8012, 0, null);
                            var py = cljs.core.nth.call(null, vec__8012, 1, null);
                            var px__$1 = thi.ng.common.math.core.roundto.call(null, px, thi.ng.common.math.core._STAR_eps_STAR_);
                            var py__$1 = thi.ng.common.math.core.roundto.call(null, py, thi.ng.common.math.core._STAR_eps_STAR_);
                            return cljs.core.cons.call(null, new thi.ng.geom.types.Rect2(thi.ng.geom.core.vector.vec2.call(null, px__$1, py__$1), s), iter__8001.call(null, cljs.core.rest.call(null, s__8002__$2)));
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(s__8000__$1, y, xs__4624__auto__, temp__4126__auto__, dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num), null, null);
                };
              }(s__8000__$1, y, xs__4624__auto__, temp__4126__auto__, dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num);
              var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, rx));
              if (fs__4195__auto__) {
                return cljs.core.concat.call(null, fs__4195__auto__, iter__7999.call(null, cljs.core.rest.call(null, s__8000__$1)));
              } else {
                var G__8026 = cljs.core.rest.call(null, s__8000__$1);
                s__8000__$1 = G__8026;
                continue;
              }
            } else {
              return null;
            }
            break;
          }
        };
      }(dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num), null, null);
    };
  }(dx, dy, rx, ry, s, ___$1, map__7998, map__7998__$1, rows, cols, num);
  return iter__4198__auto__.call(null, ry);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PClassify$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PClassify$classify_point$arity$2 = function(_, q) {
  var ___$1 = this;
  return cljs.core.reduce.call(null, cljs.core.min, cljs.core.map.call(null, function(___$1) {
    return function(p1__7990_SHARP_) {
      return thi.ng.common.math.core.signum.call(null, cljs.core.apply.call(null, thi.ng.geom.core.utils.closest_point_coeff, q, p1__7990_SHARP_), thi.ng.common.math.core._STAR_eps_STAR_);
    };
  }(___$1), thi.ng.geom.core.edges.call(null, ___$1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PExtrude$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PExtrude$extrude$arity$2 = function(_, p__8013) {
  var map__8014 = p__8013;
  var map__8014__$1 = cljs.core.seq_QMARK_.call(null, map__8014) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8014) : map__8014;
  var opts = map__8014__$1;
  var offset = cljs.core.get.call(null, map__8014__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
  var scale = cljs.core.get.call(null, map__8014__$1, new cljs.core.Keyword(null, "scale", "scale", 1123155132), 1);
  var depth = cljs.core.get.call(null, map__8014__$1, new cljs.core.Keyword(null, "depth", "depth", 1109376565), 1);
  var ___$1 = this;
  if (scale === 1 && offset == null) {
    return thi.ng.geom.core.as_mesh.call(null, new thi.ng.geom.types.AABB(thi.ng.geom.core.vector.vec3.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1)), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), depth)), (new cljs.core.Keyword(null, "mesh", "mesh", 1017252191)).cljs$core$IFn$_invoke$arity$1(opts));
  } else {
    return thi.ng.geom.core.extrude.call(null, thi.ng.geom.core.as_polygon.call(null, ___$1), opts);
  }
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PExtrude$extrude_shell$arity$2 = function(_, opts) {
  var ___$1 = this;
  return thi.ng.geom.core.extrude_shell.call(null, thi.ng.geom.core.as_polygon.call(null, ___$1), opts);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PEdgeAccess$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PEdgeAccess$edges$arity$1 = function(_) {
  var ___$1 = this;
  var a = (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1);
  var c = thi.ng.geom.core._PLUS_.call(null, a, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
  var b = thi.ng.geom.core.vector.vec2.call(null, c.call(null, 0), a.call(null, 1));
  var d = thi.ng.geom.core.vector.vec2.call(null, a.call(null, 0), c.call(null, 1));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [b, c], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, a], null)], null);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(_) {
  var ___$1 = this;
  return 0;
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBoundary$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2 = function(p__8015, p__8016) {
  var map__8017 = p__8015;
  var map__8017__$1 = cljs.core.seq_QMARK_.call(null, map__8017) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8017) : map__8017;
  var vec__8018 = cljs.core.get.call(null, map__8017__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var px = cljs.core.nth.call(null, vec__8018, 0, null);
  var py = cljs.core.nth.call(null, vec__8018, 1, null);
  var vec__8019 = cljs.core.get.call(null, map__8017__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w = cljs.core.nth.call(null, vec__8019, 0, null);
  var h = cljs.core.nth.call(null, vec__8019, 1, null);
  var vec__8020 = p__8016;
  var x = cljs.core.nth.call(null, vec__8020, 0, null);
  var y = cljs.core.nth.call(null, vec__8020, 1, null);
  var map__8021 = this;
  var map__8021__$1 = cljs.core.seq_QMARK_.call(null, map__8021) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8021) : map__8021;
  var vec__8022 = cljs.core.get.call(null, map__8021__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var px__$1 = cljs.core.nth.call(null, vec__8022, 0, null);
  var py__$1 = cljs.core.nth.call(null, vec__8022, 1, null);
  var vec__8023 = cljs.core.get.call(null, map__8021__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var w__$1 = cljs.core.nth.call(null, vec__8023, 0, null);
  var h__$1 = cljs.core.nth.call(null, vec__8023, 1, null);
  return thi.ng.common.math.core.in_range_QMARK_.call(null, 0, w__$1, x - px__$1) && thi.ng.common.math.core.in_range_QMARK_.call(null, 0, h__$1, y - py__$1);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PIntersect$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PIntersect$intersect_line$arity$2 = function(_, l) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PIntersect$intersect_ray$arity$2 = function(_, r) {
  var ___$1 = this;
  return null;
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PIntersect$intersect_shape$arity$2 = function(_, s) {
  var ___$1 = this;
  if (s instanceof thi.ng.geom.types.Rect2) {
    return thi.ng.geom.core.intersect.intersect_rect_rect_QMARK_.call(null, ___$1, s);
  } else {
    if (s instanceof thi.ng.geom.types.Circle2) {
      return thi.ng.geom.core.intersect.intersect_aabb_sphere_QMARK_.call(null, ___$1, s);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.common.error.type_error_BANG_.call(null, "Rect2", s);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBoundingCircle$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBoundingCircle$bounding_circle$arity$1 = function(_) {
  var ___$1 = this;
  var c = thi.ng.geom.core.centroid.call(null, ___$1);
  return thi.ng.geom.types.utils.bounding_circle.call(null, c, thi.ng.geom.core.dist.call(null, c, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var ___$1 = this;
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), t), (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), s), thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), s));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, a, b) {
  var ___$1 = this;
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), a, b), thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), a, b));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PScale$scale_size$arity$2 = function(_, s) {
  var ___$1 = this;
  var s_SINGLEQUOTE_ = thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1), s);
  return new thi.ng.geom.types.Rect2(thi.ng.geom.core.madd.call(null, s_SINGLEQUOTE_, -0.5, thi.ng.geom.core.centroid.call(null, ___$1)), s_SINGLEQUOTE_);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTessellate$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$1 = function(_) {
  var ___$1 = this;
  var vec__8024 = thi.ng.geom.core.vertices.call(null, ___$1);
  var a = cljs.core.nth.call(null, vec__8024, 0, null);
  var b = cljs.core.nth.call(null, vec__8024, 1, null);
  var c = cljs.core.nth.call(null, vec__8024, 2, null);
  var d = cljs.core.nth.call(null, vec__8024, 3, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new thi.ng.geom.types.Triangle2(a, b, c), new thi.ng.geom.types.Triangle2(a, c, d)], null);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$2 = function(_, opts) {
  var ___$1 = this;
  return cljs.core.mapcat.call(null, thi.ng.geom.core.tessellate, thi.ng.geom.core.subdivide.call(null, ___$1, opts));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCircumference$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PCircumference$circumference$arity$1 = function(_) {
  var ___$1 = this;
  return 2 * cljs.core.reduce.call(null, cljs.core._PLUS_, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 0);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1).call(null, 1);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  return 0;
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PVertexAccess$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PVertexAccess$vertices$arity$1 = function(_) {
  var ___$1 = this;
  var a = (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1);
  var c = thi.ng.geom.core._PLUS_.call(null, a, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, thi.ng.geom.core.vector.vec2.call(null, c.call(null, 0), a.call(null, 1)), c, thi.ng.geom.core.vector.vec2.call(null, a.call(null, 0), c.call(null, 1))], null);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.as_mesh.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(_, opts) {
  var ___$1 = this;
  return thi.ng.geom.core.add_face.call(null, function() {
    var or__3481__auto__ = (new cljs.core.Keyword(null, "mesh", "mesh", 1017252191)).cljs$core$IFn$_invoke$arity$1(opts);
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.gmesh.gmesh.call(null);
    }
  }(), cljs.core.mapv.call(null, thi.ng.geom.core.vector.vec3, thi.ng.geom.core.vertices.call(null, ___$1)));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PGraph$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PGraph$vertex_neighbors$arity$2 = function(_, v) {
  var ___$1 = this;
  return thi.ng.common.data.core.neighbors.call(null, thi.ng.geom.core.vector.vec2.call(null, v), thi.ng.geom.core.vertices.call(null, ___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PGraph$vertex_valence$arity$2 = function(_, v) {
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.set.call(null, thi.ng.geom.core.vertices.call(null, ___$1)).call(null, thi.ng.geom.core.vector.vec2.call(null, v)))) {
    return 2;
  } else {
    return 0;
  }
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PProximity$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PProximity$closest_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return thi.ng.geom.core.utils.closest_point_on_segments.call(null, p, thi.ng.geom.core.edges.call(null, ___$1));
};
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.Rect2.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(_) {
  var ___$1 = this;
  return cljs.core.reduce.call(null, cljs.core._STAR_, (new cljs.core.Keyword(null, "size", "size", 1017434995)).cljs$core$IFn$_invoke$arity$1(___$1));
};
goog.provide("thi.ng.geom.webgl.core");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.rect");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.rect");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.common.error");
thi.ng.geom.webgl.core.active_attributes = 35721;
thi.ng.geom.webgl.core.active_texture = 34016;
thi.ng.geom.webgl.core.active_uniforms = 35718;
thi.ng.geom.webgl.core.aliased_line_width_range = 33902;
thi.ng.geom.webgl.core.aliased_point_size_range = 33901;
thi.ng.geom.webgl.core.alpha = 6406;
thi.ng.geom.webgl.core.alpha_bits = 3413;
thi.ng.geom.webgl.core.always = 519;
thi.ng.geom.webgl.core.array_buffer = 34962;
thi.ng.geom.webgl.core.array_buffer_binding = 34964;
thi.ng.geom.webgl.core.attached_shaders = 35717;
thi.ng.geom.webgl.core.back = 1029;
thi.ng.geom.webgl.core.blend = 3042;
thi.ng.geom.webgl.core.blend_color = 32773;
thi.ng.geom.webgl.core.blend_dst_alpha = 32970;
thi.ng.geom.webgl.core.blend_dst_rgb = 32968;
thi.ng.geom.webgl.core.blend_equation = 32777;
thi.ng.geom.webgl.core.blend_equation_alpha = 34877;
thi.ng.geom.webgl.core.blend_equation_rgb = 32777;
thi.ng.geom.webgl.core.blend_src_alpha = 32971;
thi.ng.geom.webgl.core.blend_src_rgb = 32969;
thi.ng.geom.webgl.core.blue_bits = 3412;
thi.ng.geom.webgl.core.bool = 35670;
thi.ng.geom.webgl.core.bool_vec2 = 35671;
thi.ng.geom.webgl.core.bool_vec3 = 35672;
thi.ng.geom.webgl.core.bool_vec4 = 35673;
thi.ng.geom.webgl.core.browser_default_webgl = 37444;
thi.ng.geom.webgl.core.buffer_size = 34660;
thi.ng.geom.webgl.core.buffer_usage = 34661;
thi.ng.geom.webgl.core.byte$ = 5120;
thi.ng.geom.webgl.core.ccw = 2305;
thi.ng.geom.webgl.core.clamp_to_edge = 33071;
thi.ng.geom.webgl.core.color_attachment0 = 36064;
thi.ng.geom.webgl.core.color_buffer_bit = 16384;
thi.ng.geom.webgl.core.color_clear_value = 3106;
thi.ng.geom.webgl.core.color_writemask = 3107;
thi.ng.geom.webgl.core.compile_status = 35713;
thi.ng.geom.webgl.core.compressed_texture_formats = 34467;
thi.ng.geom.webgl.core.constant_alpha = 32771;
thi.ng.geom.webgl.core.constant_color = 32769;
thi.ng.geom.webgl.core.context_lost_webgl = 37442;
thi.ng.geom.webgl.core.cull_face = 2884;
thi.ng.geom.webgl.core.cull_face_mode = 2885;
thi.ng.geom.webgl.core.current_program = 35725;
thi.ng.geom.webgl.core.current_vertex_attrib = 34342;
thi.ng.geom.webgl.core.cw = 2304;
thi.ng.geom.webgl.core.decr = 7683;
thi.ng.geom.webgl.core.decr_wrap = 34056;
thi.ng.geom.webgl.core.delete_status = 35712;
thi.ng.geom.webgl.core.depth_attachment = 36096;
thi.ng.geom.webgl.core.depth_bits = 3414;
thi.ng.geom.webgl.core.depth_buffer_bit = 256;
thi.ng.geom.webgl.core.depth_clear_value = 2931;
thi.ng.geom.webgl.core.depth_component = 6402;
thi.ng.geom.webgl.core.depth_component16 = 33189;
thi.ng.geom.webgl.core.depth_func = 2932;
thi.ng.geom.webgl.core.depth_range = 2928;
thi.ng.geom.webgl.core.depth_stencil = 34041;
thi.ng.geom.webgl.core.depth_stencil_attachment = 33306;
thi.ng.geom.webgl.core.depth_test = 2929;
thi.ng.geom.webgl.core.depth_writemask = 2930;
thi.ng.geom.webgl.core.dither = 3024;
thi.ng.geom.webgl.core.dont_care = 4352;
thi.ng.geom.webgl.core.drawing_buffer_height = 480;
thi.ng.geom.webgl.core.drawing_buffer_width = 640;
thi.ng.geom.webgl.core.dst_alpha = 772;
thi.ng.geom.webgl.core.dst_color = 774;
thi.ng.geom.webgl.core.dynamic_draw = 35048;
thi.ng.geom.webgl.core.element_array_buffer = 34963;
thi.ng.geom.webgl.core.element_array_buffer_binding = 34965;
thi.ng.geom.webgl.core.equal = 514;
thi.ng.geom.webgl.core.fastest = 4353;
thi.ng.geom.webgl.core.float$ = 5126;
thi.ng.geom.webgl.core.float_mat2 = 35674;
thi.ng.geom.webgl.core.float_mat3 = 35675;
thi.ng.geom.webgl.core.float_mat4 = 35676;
thi.ng.geom.webgl.core.float_vec2 = 35664;
thi.ng.geom.webgl.core.float_vec3 = 35665;
thi.ng.geom.webgl.core.float_vec4 = 35666;
thi.ng.geom.webgl.core.fragment_shader = 35632;
thi.ng.geom.webgl.core.framebuffer = 36160;
thi.ng.geom.webgl.core.framebuffer_attachment_object_name = 36049;
thi.ng.geom.webgl.core.framebuffer_attachment_object_type = 36048;
thi.ng.geom.webgl.core.framebuffer_attachment_texture_cube_map_face = 36051;
thi.ng.geom.webgl.core.framebuffer_attachment_texture_level = 36050;
thi.ng.geom.webgl.core.framebuffer_binding = 36006;
thi.ng.geom.webgl.core.framebuffer_complete = 36053;
thi.ng.geom.webgl.core.framebuffer_incomplete_attachment = 36054;
thi.ng.geom.webgl.core.framebuffer_incomplete_dimensions = 36057;
thi.ng.geom.webgl.core.framebuffer_incomplete_missing_attachment = 36055;
thi.ng.geom.webgl.core.framebuffer_unsupported = 36061;
thi.ng.geom.webgl.core.front = 1028;
thi.ng.geom.webgl.core.front_and_back = 1032;
thi.ng.geom.webgl.core.front_face = 2886;
thi.ng.geom.webgl.core.func_add = 32774;
thi.ng.geom.webgl.core.func_reverse_subtract = 32779;
thi.ng.geom.webgl.core.func_subtract = 32778;
thi.ng.geom.webgl.core.generate_mipmap_hint = 33170;
thi.ng.geom.webgl.core.gequal = 518;
thi.ng.geom.webgl.core.greater = 516;
thi.ng.geom.webgl.core.green_bits = 3411;
thi.ng.geom.webgl.core.high_float = 36338;
thi.ng.geom.webgl.core.high_int = 36341;
thi.ng.geom.webgl.core.incr = 7682;
thi.ng.geom.webgl.core.incr_wrap = 34055;
thi.ng.geom.webgl.core.int$ = 5124;
thi.ng.geom.webgl.core.int_vec2 = 35667;
thi.ng.geom.webgl.core.int_vec3 = 35668;
thi.ng.geom.webgl.core.int_vec4 = 35669;
thi.ng.geom.webgl.core.invalid_enum = 1280;
thi.ng.geom.webgl.core.invalid_framebuffer_operation = 1286;
thi.ng.geom.webgl.core.invalid_operation = 1282;
thi.ng.geom.webgl.core.invalid_value = 1281;
thi.ng.geom.webgl.core.invert = 5386;
thi.ng.geom.webgl.core.keep = 7680;
thi.ng.geom.webgl.core.lequal = 515;
thi.ng.geom.webgl.core.less = 513;
thi.ng.geom.webgl.core.line_loop = 2;
thi.ng.geom.webgl.core.line_strip = 3;
thi.ng.geom.webgl.core.line_width = 2849;
thi.ng.geom.webgl.core.linear = 9729;
thi.ng.geom.webgl.core.linear_mipmap_linear = 9987;
thi.ng.geom.webgl.core.linear_mipmap_nearest = 9985;
thi.ng.geom.webgl.core.lines = 1;
thi.ng.geom.webgl.core.link_status = 35714;
thi.ng.geom.webgl.core.low_float = 36336;
thi.ng.geom.webgl.core.low_int = 36339;
thi.ng.geom.webgl.core.luminance = 6409;
thi.ng.geom.webgl.core.luminance_alpha = 6410;
thi.ng.geom.webgl.core.max_combined_texture_image_units = 35661;
thi.ng.geom.webgl.core.max_cube_map_texture_size = 34076;
thi.ng.geom.webgl.core.max_fragment_uniform_vectors = 36349;
thi.ng.geom.webgl.core.max_renderbuffer_size = 34024;
thi.ng.geom.webgl.core.max_texture_image_units = 34930;
thi.ng.geom.webgl.core.max_texture_size = 3379;
thi.ng.geom.webgl.core.max_varying_vectors = 36348;
thi.ng.geom.webgl.core.max_vertex_attribs = 34921;
thi.ng.geom.webgl.core.max_vertex_texture_image_units = 35660;
thi.ng.geom.webgl.core.max_vertex_uniform_vectors = 36347;
thi.ng.geom.webgl.core.max_viewport_dims = 3386;
thi.ng.geom.webgl.core.medium_float = 36337;
thi.ng.geom.webgl.core.medium_int = 36340;
thi.ng.geom.webgl.core.mirrored_repeat = 33648;
thi.ng.geom.webgl.core.nearest = 9728;
thi.ng.geom.webgl.core.nearest_mipmap_linear = 9986;
thi.ng.geom.webgl.core.nearest_mipmap_nearest = 9984;
thi.ng.geom.webgl.core.never = 512;
thi.ng.geom.webgl.core.nicest = 4354;
thi.ng.geom.webgl.core.no_error = 0;
thi.ng.geom.webgl.core.none = 0;
thi.ng.geom.webgl.core.notequal = 517;
thi.ng.geom.webgl.core.one = 1;
thi.ng.geom.webgl.core.one_minus_constant_alpha = 32772;
thi.ng.geom.webgl.core.one_minus_constant_color = 32770;
thi.ng.geom.webgl.core.one_minus_dst_alpha = 773;
thi.ng.geom.webgl.core.one_minus_dst_color = 775;
thi.ng.geom.webgl.core.one_minus_src_alpha = 771;
thi.ng.geom.webgl.core.one_minus_src_color = 769;
thi.ng.geom.webgl.core.out_of_memory = 1285;
thi.ng.geom.webgl.core.pack_alignment = 3333;
thi.ng.geom.webgl.core.points = 0;
thi.ng.geom.webgl.core.polygon_offset_factor = 32824;
thi.ng.geom.webgl.core.polygon_offset_fill = 32823;
thi.ng.geom.webgl.core.polygon_offset_units = 10752;
thi.ng.geom.webgl.core.red_bits = 3410;
thi.ng.geom.webgl.core.renderbuffer = 36161;
thi.ng.geom.webgl.core.renderbuffer_alpha_size = 36179;
thi.ng.geom.webgl.core.renderbuffer_binding = 36007;
thi.ng.geom.webgl.core.renderbuffer_blue_size = 36178;
thi.ng.geom.webgl.core.renderbuffer_depth_size = 36180;
thi.ng.geom.webgl.core.renderbuffer_green_size = 36177;
thi.ng.geom.webgl.core.renderbuffer_height = 36163;
thi.ng.geom.webgl.core.renderbuffer_internal_format = 36164;
thi.ng.geom.webgl.core.renderbuffer_red_size = 36176;
thi.ng.geom.webgl.core.renderbuffer_stencil_size = 36181;
thi.ng.geom.webgl.core.renderbuffer_width = 36162;
thi.ng.geom.webgl.core.renderer = 7937;
thi.ng.geom.webgl.core.repeat = 10497;
thi.ng.geom.webgl.core.replace = 7681;
thi.ng.geom.webgl.core.rgb = 6407;
thi.ng.geom.webgl.core.rgb5_a1 = 32855;
thi.ng.geom.webgl.core.rgb565 = 36194;
thi.ng.geom.webgl.core.rgba = 6408;
thi.ng.geom.webgl.core.rgba4 = 32854;
thi.ng.geom.webgl.core.sample_alpha_to_coverage = 32926;
thi.ng.geom.webgl.core.sample_buffers = 32936;
thi.ng.geom.webgl.core.sample_coverage = 32928;
thi.ng.geom.webgl.core.sample_coverage_invert = 32939;
thi.ng.geom.webgl.core.sample_coverage_value = 32938;
thi.ng.geom.webgl.core.sampler_2d = 35678;
thi.ng.geom.webgl.core.sampler_cube = 35680;
thi.ng.geom.webgl.core.samples = 32937;
thi.ng.geom.webgl.core.scissor_box = 3088;
thi.ng.geom.webgl.core.scissor_test = 3089;
thi.ng.geom.webgl.core.shader_type = 35663;
thi.ng.geom.webgl.core.shading_language_version = 35724;
thi.ng.geom.webgl.core.short$ = 5122;
thi.ng.geom.webgl.core.src_alpha = 770;
thi.ng.geom.webgl.core.src_alpha_saturate = 776;
thi.ng.geom.webgl.core.src_color = 768;
thi.ng.geom.webgl.core.static_draw = 35044;
thi.ng.geom.webgl.core.stencil_attachment = 36128;
thi.ng.geom.webgl.core.stencil_back_fail = 34817;
thi.ng.geom.webgl.core.stencil_back_func = 34816;
thi.ng.geom.webgl.core.stencil_back_pass_depth_fail = 34818;
thi.ng.geom.webgl.core.stencil_back_pass_depth_pass = 34819;
thi.ng.geom.webgl.core.stencil_back_ref = 36003;
thi.ng.geom.webgl.core.stencil_back_value_mask = 36004;
thi.ng.geom.webgl.core.stencil_back_writemask = 36005;
thi.ng.geom.webgl.core.stencil_bits = 3415;
thi.ng.geom.webgl.core.stencil_buffer_bit = 1024;
thi.ng.geom.webgl.core.stencil_clear_value = 2961;
thi.ng.geom.webgl.core.stencil_fail = 2964;
thi.ng.geom.webgl.core.stencil_func = 2962;
thi.ng.geom.webgl.core.stencil_index = 6401;
thi.ng.geom.webgl.core.stencil_index8 = 36168;
thi.ng.geom.webgl.core.stencil_pass_depth_fail = 2965;
thi.ng.geom.webgl.core.stencil_pass_depth_pass = 2966;
thi.ng.geom.webgl.core.stencil_ref = 2967;
thi.ng.geom.webgl.core.stencil_test = 2960;
thi.ng.geom.webgl.core.stencil_value_mask = 2963;
thi.ng.geom.webgl.core.stencil_writemask = 2968;
thi.ng.geom.webgl.core.stream_draw = 35040;
thi.ng.geom.webgl.core.subpixel_bits = 3408;
thi.ng.geom.webgl.core.texture = 5890;
thi.ng.geom.webgl.core.texture_2d = 3553;
thi.ng.geom.webgl.core.texture_binding_2d = 32873;
thi.ng.geom.webgl.core.texture_binding_cube_map = 34068;
thi.ng.geom.webgl.core.texture_cube_map = 34067;
thi.ng.geom.webgl.core.texture_cube_map_negative_x = 34070;
thi.ng.geom.webgl.core.texture_cube_map_negative_y = 34072;
thi.ng.geom.webgl.core.texture_cube_map_negative_z = 34074;
thi.ng.geom.webgl.core.texture_cube_map_positive_x = 34069;
thi.ng.geom.webgl.core.texture_cube_map_positive_y = 34071;
thi.ng.geom.webgl.core.texture_cube_map_positive_z = 34073;
thi.ng.geom.webgl.core.texture_mag_filter = 10240;
thi.ng.geom.webgl.core.texture_min_filter = 10241;
thi.ng.geom.webgl.core.texture_wrap_s = 10242;
thi.ng.geom.webgl.core.texture_wrap_t = 10243;
thi.ng.geom.webgl.core.texture0 = 33984;
thi.ng.geom.webgl.core.texture1 = 33985;
thi.ng.geom.webgl.core.texture10 = 33994;
thi.ng.geom.webgl.core.texture11 = 33995;
thi.ng.geom.webgl.core.texture12 = 33996;
thi.ng.geom.webgl.core.texture13 = 33997;
thi.ng.geom.webgl.core.texture14 = 33998;
thi.ng.geom.webgl.core.texture15 = 33999;
thi.ng.geom.webgl.core.texture16 = 34E3;
thi.ng.geom.webgl.core.texture17 = 34001;
thi.ng.geom.webgl.core.texture18 = 34002;
thi.ng.geom.webgl.core.texture19 = 34003;
thi.ng.geom.webgl.core.texture2 = 33986;
thi.ng.geom.webgl.core.texture20 = 34004;
thi.ng.geom.webgl.core.texture21 = 34005;
thi.ng.geom.webgl.core.texture22 = 34006;
thi.ng.geom.webgl.core.texture23 = 34007;
thi.ng.geom.webgl.core.texture24 = 34008;
thi.ng.geom.webgl.core.texture25 = 34009;
thi.ng.geom.webgl.core.texture26 = 34010;
thi.ng.geom.webgl.core.texture27 = 34011;
thi.ng.geom.webgl.core.texture28 = 34012;
thi.ng.geom.webgl.core.texture29 = 34013;
thi.ng.geom.webgl.core.texture3 = 33987;
thi.ng.geom.webgl.core.texture30 = 34014;
thi.ng.geom.webgl.core.texture31 = 34015;
thi.ng.geom.webgl.core.texture4 = 33988;
thi.ng.geom.webgl.core.texture5 = 33989;
thi.ng.geom.webgl.core.texture6 = 33990;
thi.ng.geom.webgl.core.texture7 = 33991;
thi.ng.geom.webgl.core.texture8 = 33992;
thi.ng.geom.webgl.core.texture9 = 33993;
thi.ng.geom.webgl.core.triangle_fan = 6;
thi.ng.geom.webgl.core.triangle_strip = 5;
thi.ng.geom.webgl.core.triangles = 4;
thi.ng.geom.webgl.core.unpack_alignment = 3317;
thi.ng.geom.webgl.core.unpack_colorspace_conversion_webgl = 37443;
thi.ng.geom.webgl.core.unpack_flip_y_webgl = 37440;
thi.ng.geom.webgl.core.unpack_premultiply_alpha_webgl = 37441;
thi.ng.geom.webgl.core.unsigned_byte = 5121;
thi.ng.geom.webgl.core.unsigned_int = 5125;
thi.ng.geom.webgl.core.unsigned_short = 5123;
thi.ng.geom.webgl.core.unsigned_short_4_4_4_4 = 32819;
thi.ng.geom.webgl.core.unsigned_short_5_5_5_1 = 32820;
thi.ng.geom.webgl.core.unsigned_short_5_6_5 = 33635;
thi.ng.geom.webgl.core.validate_status = 35715;
thi.ng.geom.webgl.core.vendor = 7936;
thi.ng.geom.webgl.core.version = 7938;
thi.ng.geom.webgl.core.vertex_attrib_array_buffer_binding = 34975;
thi.ng.geom.webgl.core.vertex_attrib_array_enabled = 34338;
thi.ng.geom.webgl.core.vertex_attrib_array_normalized = 34922;
thi.ng.geom.webgl.core.vertex_attrib_array_pointer = 34373;
thi.ng.geom.webgl.core.vertex_attrib_array_size = 34339;
thi.ng.geom.webgl.core.vertex_attrib_array_stride = 34340;
thi.ng.geom.webgl.core.vertex_attrib_array_type = 34341;
thi.ng.geom.webgl.core.vertex_shader = 35633;
thi.ng.geom.webgl.core.viewport = 2978;
thi.ng.geom.webgl.core.zero = 0;
thi.ng.geom.webgl.core.PWebGLConvert = function() {
  var obj6069 = {};
  return obj6069;
}();
thi.ng.geom.webgl.core.as_webgl_buffer_spec = function as_webgl_buffer_spec(_, opts) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PWebGLConvert$as_webgl_buffer_spec$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PWebGLConvert$as_webgl_buffer_spec$arity$2(_, opts);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.as_webgl_buffer_spec[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.as_webgl_buffer_spec["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PWebGLConvert.as-webgl-buffer-spec", _);
        }
      }
    }().call(null, _, opts);
  }
};
thi.ng.geom.webgl.core.into_buffer = function into_buffer(_, buf, idx) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PWebGLConvert$into_buffer$arity$3;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PWebGLConvert$into_buffer$arity$3(_, buf, idx);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.into_buffer[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.into_buffer["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PWebGLConvert.into-buffer", _);
        }
      }
    }().call(null, _, buf, idx);
  }
};
thi.ng.geom.webgl.core.PRelease = function() {
  var obj6071 = {};
  return obj6071;
}();
thi.ng.geom.webgl.core.release = function release(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PRelease$release$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PRelease$release$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.release[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.release["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PRelease.release", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.webgl.core.PBind = function() {
  var obj6073 = {};
  return obj6073;
}();
thi.ng.geom.webgl.core.bind = function() {
  var bind = null;
  var bind__1 = function(_) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$webgl$core$PBind$bind$arity$1;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$webgl$core$PBind$bind$arity$1(_);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.webgl.core.bind[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.webgl.core.bind["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PBind.bind", _);
          }
        }
      }().call(null, _);
    }
  };
  var bind__2 = function(_, opts) {
    if (function() {
      var and__3469__auto__ = _;
      if (and__3469__auto__) {
        return _.thi$ng$geom$webgl$core$PBind$bind$arity$2;
      } else {
        return and__3469__auto__;
      }
    }()) {
      return _.thi$ng$geom$webgl$core$PBind$bind$arity$2(_, opts);
    } else {
      var x__4108__auto__ = _ == null ? null : _;
      return function() {
        var or__3481__auto__ = thi.ng.geom.webgl.core.bind[goog.typeOf(x__4108__auto__)];
        if (or__3481__auto__) {
          return or__3481__auto__;
        } else {
          var or__3481__auto____$1 = thi.ng.geom.webgl.core.bind["_"];
          if (or__3481__auto____$1) {
            return or__3481__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "PBind.bind", _);
          }
        }
      }().call(null, _, opts);
    }
  };
  bind = function(_, opts) {
    switch(arguments.length) {
      case 1:
        return bind__1.call(this, _);
      case 2:
        return bind__2.call(this, _, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bind.cljs$core$IFn$_invoke$arity$1 = bind__1;
  bind.cljs$core$IFn$_invoke$arity$2 = bind__2;
  return bind;
}();
thi.ng.geom.webgl.core.unbind = function unbind(_) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PBind$unbind$arity$1;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PBind$unbind$arity$1(_);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.unbind[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.unbind["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PBind.unbind", _);
        }
      }
    }().call(null, _);
  }
};
thi.ng.geom.webgl.core.PConfigure = function() {
  var obj6075 = {};
  return obj6075;
}();
thi.ng.geom.webgl.core.configure = function configure(_, opts) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PConfigure$configure$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PConfigure$configure$arity$2(_, opts);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.configure[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.configure["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PConfigure.configure", _);
        }
      }
    }().call(null, _, opts);
  }
};
thi.ng.geom.webgl.core.PTexture = function() {
  var obj6077 = {};
  return obj6077;
}();
thi.ng.geom.webgl.core.set_texture_filter = function set_texture_filter(_, type) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PTexture$set_texture_filter$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PTexture$set_texture_filter$arity$2(_, type);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.set_texture_filter[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.set_texture_filter["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PTexture.set-texture-filter", _);
        }
      }
    }().call(null, _, type);
  }
};
thi.ng.geom.webgl.core.set_texture_wrap = function set_texture_wrap(_, type) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PTexture$set_texture_wrap$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PTexture$set_texture_wrap$arity$2(_, type);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.set_texture_wrap[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.set_texture_wrap["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PTexture.set-texture-wrap", _);
        }
      }
    }().call(null, _, type);
  }
};
thi.ng.geom.webgl.core.PFramebuffer = function() {
  var obj6079 = {};
  return obj6079;
}();
thi.ng.geom.webgl.core.set_fbo_color_texture = function set_fbo_color_texture(_, tex) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_color_texture$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_color_texture$arity$2(_, tex);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.set_fbo_color_texture[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.set_fbo_color_texture["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFramebuffer.set-fbo-color-texture", _);
        }
      }
    }().call(null, _, tex);
  }
};
thi.ng.geom.webgl.core.set_fbo_depth_buffer = function set_fbo_depth_buffer(_, depth_buffer) {
  if (function() {
    var and__3469__auto__ = _;
    if (and__3469__auto__) {
      return _.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_depth_buffer$arity$2;
    } else {
      return and__3469__auto__;
    }
  }()) {
    return _.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_depth_buffer$arity$2(_, depth_buffer);
  } else {
    var x__4108__auto__ = _ == null ? null : _;
    return function() {
      var or__3481__auto__ = thi.ng.geom.webgl.core.set_fbo_depth_buffer[goog.typeOf(x__4108__auto__)];
      if (or__3481__auto__) {
        return or__3481__auto__;
      } else {
        var or__3481__auto____$1 = thi.ng.geom.webgl.core.set_fbo_depth_buffer["_"];
        if (or__3481__auto____$1) {
          return or__3481__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PFramebuffer.set-fbo-depth-buffer", _);
        }
      }
    }().call(null, _, depth_buffer);
  }
};
thi.ng.geom.webgl.core.face_normals = function face_normals(m) {
  var fnorms = thi.ng.geom.core.face_normals.call(null, m);
  var faces = thi.ng.geom.core.faces.call(null, m);
  var buf = thi.ng.geom.webgl.arrays.float32.call(null, cljs.core.count.call(null, faces) * 3 * 3);
  var idx = 0;
  var faces__$1 = faces;
  while (true) {
    if (cljs.core.truth_(faces__$1)) {
      var vec__6082 = fnorms.call(null, cljs.core.first.call(null, faces__$1));
      var nx = cljs.core.nth.call(null, vec__6082, 0, null);
      var ny = cljs.core.nth.call(null, vec__6082, 1, null);
      var nz = cljs.core.nth.call(null, vec__6082, 2, null);
      var G__6083_6084 = buf;
      G__6083_6084[idx] = nx;
      G__6083_6084[idx + 1] = ny;
      G__6083_6084[idx + 2] = nz;
      G__6083_6084[idx + 3] = nx;
      G__6083_6084[idx + 4] = ny;
      G__6083_6084[idx + 5] = nz;
      G__6083_6084[idx + 6] = nx;
      G__6083_6084[idx + 7] = ny;
      G__6083_6084[idx + 8] = nz;
      var G__6085 = idx + 9;
      var G__6086 = cljs.core.next.call(null, faces__$1);
      idx = G__6085;
      faces__$1 = G__6086;
      continue;
    } else {
      return buf;
    }
    break;
  }
};
thi.ng.geom.webgl.core.vertex_normals = function vertex_normals(m) {
  var vnorms = thi.ng.geom.core.vertex_normals.call(null, m);
  var faces = thi.ng.geom.core.faces.call(null, m);
  var buf = thi.ng.geom.webgl.arrays.float32.call(null, cljs.core.count.call(null, faces) * 3 * 3);
  var i = 0;
  var faces__$1 = faces;
  while (true) {
    if (cljs.core.truth_(faces__$1)) {
      var f = cljs.core.first.call(null, faces__$1);
      var G__6087 = thi.ng.geom.webgl.core.into_buffer.call(null, vnorms.call(null, f.call(null, 2)), buf, thi.ng.geom.webgl.core.into_buffer.call(null, vnorms.call(null, f.call(null, 1)), buf, thi.ng.geom.webgl.core.into_buffer.call(null, vnorms.call(null, f.call(null, 0)), buf, i)));
      var G__6088 = cljs.core.next.call(null, faces__$1);
      i = G__6087;
      faces__$1 = G__6088;
      continue;
    } else {
      return buf;
    }
    break;
  }
};
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$webgl$core$PWebGLConvert$ = true;
thi.ng.geom.core.vector.Vec3.prototype.thi$ng$geom$webgl$core$PWebGLConvert$into_buffer$arity$3 = function(_, buf, idx) {
  var ___$1 = this;
  var G__6089_6090 = buf;
  G__6089_6090[idx] = ___$1.x;
  G__6089_6090[idx + 1] = ___$1.y;
  G__6089_6090[idx + 2] = ___$1.z;
  return idx + 3;
};
cljs.core.PersistentVector.prototype.thi$ng$geom$webgl$core$PWebGLConvert$ = true;
cljs.core.PersistentVector.prototype.thi$ng$geom$webgl$core$PWebGLConvert$into_buffer$arity$3 = function(_, buf, idx) {
  var ___$1 = this;
  var idx__$1 = idx;
  var ___$2 = ___$1;
  while (true) {
    if (cljs.core.truth_(___$2)) {
      var G__6091 = thi.ng.geom.webgl.core.into_buffer.call(null, cljs.core.first.call(null, ___$2), buf, idx__$1);
      var G__6092 = cljs.core.next.call(null, ___$2);
      idx__$1 = G__6091;
      ___$2 = G__6092;
      continue;
    } else {
      return idx__$1;
    }
    break;
  }
};
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$webgl$core$PWebGLConvert$ = true;
thi.ng.geom.types.GMesh.prototype.thi$ng$geom$webgl$core$PWebGLConvert$as_webgl_buffer_spec$arity$2 = function(_, opts) {
  var ___$1 = this;
  var m = cljs.core.truth_((new cljs.core.Keyword(null, "tessellate", "tessellate", 2361899792)).cljs$core$IFn$_invoke$arity$1(opts)) ? thi.ng.geom.core.tessellate.call(null, ___$1) : ___$1;
  var faces = (new cljs.core.Keyword(null, "faces", "faces", 1111091496)).cljs$core$IFn$_invoke$arity$1(m);
  var num_faces = cljs.core.count.call(null, faces);
  var verts = thi.ng.geom.webgl.arrays.float32.call(null, num_faces * 3 * 3);
  var norms = cljs.core.truth_((new cljs.core.Keyword(null, "vnormals", "vnormals", 2634711720)).cljs$core$IFn$_invoke$arity$1(opts)) ? thi.ng.geom.webgl.core.vertex_normals.call(null, m) : cljs.core.truth_((new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136)).cljs$core$IFn$_invoke$arity$1(opts)) ? thi.ng.geom.webgl.core.face_normals.call(null, m) : new cljs.core.Keyword(null, "default", "default", 2558708147) ? null : null;
  var i_6093 = 0;
  var faces_6094__$1 = faces;
  while (true) {
    if (cljs.core.truth_(faces_6094__$1)) {
      var G__6095 = thi.ng.geom.webgl.core.into_buffer.call(null, cljs.core.first.call(null, faces_6094__$1), verts, i_6093);
      var G__6096 = cljs.core.next.call(null, faces_6094__$1);
      i_6093 = G__6095;
      faces_6094__$1 = G__6096;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "vertices", "vertices", 3324730219), verts, new cljs.core.Keyword(null, "normals", "normals", 3141522398), norms, new cljs.core.Keyword(null, "num-vertices", "num-vertices", 877840850), num_faces * 3, new cljs.core.Keyword(null, "num-faces", "num-faces", 1146907681), num_faces], null);
};
thi.ng.geom.webgl.core.context_default_attribs = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "alpha", "alpha", 1106814160), true, new cljs.core.Keyword(null, "antialias", "antialias", 3190264736), true, new cljs.core.Keyword(null, "depth", "depth", 1109376565), true, new cljs.core.Keyword(null, "fail-if-major-performance-caveat", "fail-if-major-performance-caveat", 4286235972), false, new cljs.core.Keyword(null, "prefer-low-power-to-high-performance", "prefer-low-power-to-high-performance", 
4237643787), false, new cljs.core.Keyword(null, "premultiplied-alpha", "premultiplied-alpha", 794423513), true, new cljs.core.Keyword(null, "preserve-drawing-buffer", "preserve-drawing-buffer", 2221120994), false, new cljs.core.Keyword(null, "stencil", "stencil", 3415245102), false], null);
thi.ng.geom.webgl.core.gl_context = function() {
  var gl_context = null;
  var gl_context__1 = function(canvas) {
    return gl_context.call(null, canvas, cljs.core.PersistentArrayMap.EMPTY);
  };
  var gl_context__2 = function(canvas, attribs) {
    var canvas__$1 = typeof canvas === "string" ? document.getElementById(canvas) : canvas;
    var attribs__$1 = cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, thi.ng.geom.webgl.core.context_default_attribs, attribs));
    var ctx = function() {
      var G__6103 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], null);
      var vec__6104 = G__6103;
      var id = cljs.core.nth.call(null, vec__6104, 0, null);
      var more = cljs.core.nthnext.call(null, vec__6104, 1);
      var G__6103__$1 = G__6103;
      while (true) {
        var vec__6105 = G__6103__$1;
        var id__$1 = cljs.core.nth.call(null, vec__6105, 0, null);
        var more__$1 = cljs.core.nthnext.call(null, vec__6105, 1);
        if (cljs.core.truth_(id__$1)) {
          try {
            var ctx = canvas__$1.getContext(id__$1, attribs__$1);
            canvas__$1.onselectstart = cljs.core.constantly.call(null, false);
            if (cljs.core.truth_(ctx)) {
              return ctx;
            } else {
              var G__6107 = more__$1;
              G__6103__$1 = G__6107;
              continue;
            }
          } catch (e6106) {
            if (e6106 instanceof Error) {
              var e = e6106;
              var G__6108 = more__$1;
              G__6103__$1 = G__6108;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e6106;
              } else {
                return null;
              }
            }
          }
        } else {
          return null;
        }
        break;
      }
    }();
    var or__3481__auto__ = ctx;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.common.error.unsupported_BANG_.call(null, "WebGL not available");
    }
  };
  gl_context = function(canvas, attribs) {
    switch(arguments.length) {
      case 1:
        return gl_context__1.call(this, canvas);
      case 2:
        return gl_context__2.call(this, canvas, attribs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gl_context.cljs$core$IFn$_invoke$arity$1 = gl_context__1;
  gl_context.cljs$core$IFn$_invoke$arity$2 = gl_context__2;
  return gl_context;
}();
thi.ng.geom.webgl.core.clear_color_buffer = function clear_color_buffer(gl, r, g, b, a) {
  gl.clearColor(r, g, b, a);
  return gl.clear(thi.ng.geom.webgl.core.color_buffer_bit);
};
thi.ng.geom.webgl.core.clear_depth_buffer = function clear_depth_buffer(gl, d) {
  gl.clearDepth(d);
  return gl.clear(thi.ng.geom.webgl.core.depth_buffer_bit);
};
thi.ng.geom.webgl.core.disable = function disable(gl, flag) {
  gl.disable(flag);
  return gl;
};
thi.ng.geom.webgl.core.enable = function enable(gl, flag) {
  gl.enable(flag);
  return gl;
};
thi.ng.geom.webgl.core.cull_faces = function cull_faces(gl, side) {
  gl.enable(thi.ng.geom.webgl.core.cull_face);
  gl.cullFace(side);
  return gl;
};
thi.ng.geom.webgl.core.set_viewport = function() {
  var set_viewport = null;
  var set_viewport__2 = function(gl, p__6109) {
    var map__6113 = p__6109;
    var map__6113__$1 = cljs.core.seq_QMARK_.call(null, map__6113) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6113) : map__6113;
    var vec__6114 = cljs.core.get.call(null, map__6113__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
    var x = cljs.core.nth.call(null, vec__6114, 0, null);
    var y = cljs.core.nth.call(null, vec__6114, 1, null);
    var vec__6115 = cljs.core.get.call(null, map__6113__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var w = cljs.core.nth.call(null, vec__6115, 0, null);
    var h = cljs.core.nth.call(null, vec__6115, 1, null);
    gl.viewport(x, y, w, h);
    return gl;
  };
  var set_viewport__5 = function(gl, x, y, w, h) {
    gl.viewport(x, y, w, h);
    return gl;
  };
  set_viewport = function(gl, x, y, w, h) {
    switch(arguments.length) {
      case 2:
        return set_viewport__2.call(this, gl, x);
      case 5:
        return set_viewport__5.call(this, gl, x, y, w, h);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_viewport.cljs$core$IFn$_invoke$arity$2 = set_viewport__2;
  set_viewport.cljs$core$IFn$_invoke$arity$5 = set_viewport__5;
  return set_viewport;
}();
thi.ng.geom.webgl.core.get_viewport_rect = function get_viewport_rect(gl) {
  var b = gl.getParameter(thi.ng.geom.webgl.core.viewport);
  return thi.ng.geom.rect.rect.call(null, b[0], b[1], b[2], b[3]);
};
thi.ng.geom.webgl.core.perspective = function perspective(fovy, aspect, near, far) {
  var aspect__$1 = typeof aspect === "number" ? aspect : cljs.core.map_QMARK_.call(null, aspect) ? function() {
    var map__6118 = aspect;
    var map__6118__$1 = cljs.core.seq_QMARK_.call(null, map__6118) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6118) : map__6118;
    var vec__6119 = cljs.core.get.call(null, map__6118__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
    var w = cljs.core.nth.call(null, vec__6119, 0, null);
    var h = cljs.core.nth.call(null, vec__6119, 1, null);
    return w / h;
  }() : new cljs.core.Keyword(null, "default", "default", 2558708147) ? cljs.core.nth.call(null, aspect, 0) / cljs.core.nth.call(null, aspect, 1) : null;
  return thi.ng.geom.core.matrix.perspective.call(null, fovy, aspect__$1, near, far);
};
thi.ng.geom.webgl.core.float_ext_ids = new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, ["OES_texture_float", "OES_texture_half_float", "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_color_buffer_float", "EXT_color_buffer_half_float"], null);
thi.ng.geom.webgl.core.get_extension = function get_extension(gl, ext) {
  return gl.getExtension(ext);
};
thi.ng.geom.webgl.core.get_float_extension = function get_float_extension(gl, spec) {
  var vec__6122 = cljs.core.map.call(null, function(p1__6120_SHARP_) {
    return gl.getExtension(p1__6120_SHARP_);
  }, thi.ng.geom.webgl.core.float_ext_ids);
  var s_tex = cljs.core.nth.call(null, vec__6122, 0, null);
  var h_tex = cljs.core.nth.call(null, vec__6122, 1, null);
  var s_lin = cljs.core.nth.call(null, vec__6122, 2, null);
  var h_lin = cljs.core.nth.call(null, vec__6122, 3, null);
  var s_fbo = cljs.core.nth.call(null, vec__6122, 4, null);
  var h_fbo = cljs.core.nth.call(null, vec__6122, 5, null);
  var ext = vec__6122;
  return cljs.core.last.call(null, cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "score", "score", 1123168772), cljs.core.map.call(null, function(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext) {
    return function(c) {
      return cljs.core.assoc.call(null, c, new cljs.core.Keyword(null, "score", "score", 1123168772), cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext) {
        return function(pref, score) {
          if (cljs.core.truth_(c.call(null, pref))) {
            return score;
          } else {
            return 0;
          }
        };
      }(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext), (new cljs.core.Keyword(null, "prefer", "prefer", 4328760706)).cljs$core$IFn$_invoke$arity$1(spec), new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [128, 64, 32, 16, 8, 4, 2, 1], null))));
    };
  }(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext), cljs.core.reduce.call(null, function(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext) {
    return function(acc, c) {
      if (cljs.core.truth_(function() {
        var and__3469__auto__ = (new cljs.core.Keyword(null, "texture", "texture", 3891054733)).cljs$core$IFn$_invoke$arity$1(c);
        if (cljs.core.truth_(and__3469__auto__)) {
          return cljs.core.every_QMARK_.call(null, c, (new cljs.core.Keyword(null, "require", "require", 2109600983)).cljs$core$IFn$_invoke$arity$1(spec));
        } else {
          return and__3469__auto__;
        }
      }())) {
        return cljs.core.conj.call(null, acc, c);
      } else {
        return acc;
      }
    };
  }(vec__6122, s_tex, h_tex, s_lin, h_lin, s_fbo, h_fbo, ext), cljs.core.PersistentVector.EMPTY, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "texture", "texture", 3891054733), s_tex, new cljs.core.Keyword(null, "filterable", "filterable", 3756185668), s_lin, new cljs.core.Keyword(null, "renderable", "renderable", 2208370530), s_fbo, new cljs.core.Keyword(null, "type", "type", 1017479852), 
  thi.ng.geom.webgl.core.float$, new cljs.core.Keyword(null, "precision", "precision", 3932694512), new cljs.core.Keyword(null, "single", "single", 4406605754), new cljs.core.Keyword(null, "single", "single", 4406605754), true], null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "texture", "texture", 3891054733), h_tex, new cljs.core.Keyword(null, "filterable", "filterable", 3756185668), h_lin, new cljs.core.Keyword(null, "renderable", "renderable", 2208370530), h_fbo, 
  new cljs.core.Keyword(null, "type", "type", 1017479852), cljs.core.truth_(h_tex) ? h_tex.HALF_FLOAT_OES : null, new cljs.core.Keyword(null, "precision", "precision", 3932694512), new cljs.core.Keyword(null, "half", "half", 1017099173), new cljs.core.Keyword(null, "half", "half", 1017099173), true], null)], null)))));
};
thi.ng.geom.webgl.core.get_supported_extensions = function get_supported_extensions(gl) {
  return gl.getSupportedExtensions();
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__8175 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__8175;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__8179 = cljs.core._EQ_;
    var expr__8180 = limit;
    if (cljs.core.truth_(pred__8179.call(null, 1, expr__8180))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__8179.call(null, 2, expr__8180))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__8182 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__8183 = limit__$1 - 1;
            var G__8184 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__8182;
            limit__$1 = G__8183;
            parts = G__8184;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__8185 = index - 1;
        index = G__8185;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___8186 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___8186)) {
        var replacement_8187 = temp__4124__auto___8186;
        buffer.append([cljs.core.str(replacement_8187)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__8188 = index + 1;
      index = G__8188;
      continue;
    }
    break;
  }
};
goog.provide("thi.ng.geom.webgl.shaders");
goog.require("cljs.core");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.webgl.core");
goog.require("clojure.string");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("clojure.string");
goog.require("thi.ng.geom.webgl.core");
goog.require("thi.ng.common.error");
thi.ng.geom.webgl.shaders.uniform_types = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "bvec3", "bvec3", 1108024819), new cljs.core.Keyword(null, "int", "int", 1014008673), new cljs.core.Keyword(null, "mat3", "mat3", 1017248325), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "float", "float", 1111430606), new cljs.core.Keyword(null, "ivec4", "ivec4", 1114489467), new cljs.core.Keyword(null, "mat2", "mat2", 1017248324), new cljs.core.Keyword(null, 
"ivec2", "ivec2", 1114489465), new cljs.core.Keyword(null, "vec4", "vec4", 1017519762), new cljs.core.Keyword(null, "vec2", "vec2", 1017519760), new cljs.core.Keyword(null, "bvec2", "bvec2", 1108024818), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "bvec4", "bvec4", 1108024820), new cljs.core.Keyword(null, "bool", "bool", 1016933980), new cljs.core.Keyword(null, "sampler2D", "sampler2D", 2126927820), new cljs.core.Keyword(null, "ivec3", "ivec3", 1114489466)], 
[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Matrix3fv", thi.ng.geom.webgl.arrays.float32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3fv", thi.ng.geom.webgl.arrays.float32], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1fv", thi.ng.geom.webgl.arrays.float32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["4iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Matrix2fv", thi.ng.geom.webgl.arrays.float32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2iv", thi.ng.geom.webgl.arrays.int32], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["4fv", thi.ng.geom.webgl.arrays.float32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2fv", thi.ng.geom.webgl.arrays.float32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["2iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Matrix4fv", thi.ng.geom.webgl.arrays.float32], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["4iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1iv", thi.ng.geom.webgl.arrays.int32], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3iv", thi.ng.geom.webgl.arrays.int32], 
null)]);
thi.ng.geom.webgl.shaders.init_shader_uniforms = function init_shader_uniforms(gl, prog, uniforms) {
  return cljs.core.reduce.call(null, function(umap, p__6136) {
    var vec__6137 = p__6136;
    var id = cljs.core.nth.call(null, vec__6137, 0, null);
    var type = cljs.core.nth.call(null, vec__6137, 1, null);
    var loc = gl.getUniformLocation(prog, cljs.core.name.call(null, id));
    var vec__6138 = cljs.core.sequential_QMARK_.call(null, type) ? type : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [type], null);
    var type__$1 = cljs.core.nth.call(null, vec__6138, 0, null);
    var transpose_QMARK_ = cljs.core.nth.call(null, vec__6138, 1, null);
    var transpose_QMARK___$1 = cljs.core.boolean$.call(null, transpose_QMARK_);
    var vec__6139 = thi.ng.geom.webgl.shaders.uniform_types.call(null, type__$1);
    var u_type = cljs.core.nth.call(null, vec__6139, 0, null);
    var u_cast = cljs.core.nth.call(null, vec__6139, 1, null);
    var setter = gl[[cljs.core.str("uniform"), cljs.core.str(u_type)].join("")];
    return cljs.core.assoc.call(null, umap, id, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), type__$1, new cljs.core.Keyword(null, "setter", "setter", 4403102705), cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "mat3", "mat3", 1017248325), null, new cljs.core.Keyword(null, "mat2", "mat2", 1017248324), null, new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), 
    null], null), null)).call(null, type__$1)) ? function(loc, vec__6138, type__$1, transpose_QMARK_, transpose_QMARK___$1, vec__6139, u_type, u_cast, setter, vec__6137, id, type) {
      return function(x) {
        return setter.call(gl, loc, transpose_QMARK___$1, thi.ng.geom.webgl.arrays.typed_array_QMARK_.call(null, x) ? x : u_cast.call(null, x));
      };
    }(loc, vec__6138, type__$1, transpose_QMARK_, transpose_QMARK___$1, vec__6139, u_type, u_cast, setter, vec__6137, id, type) : function(loc, vec__6138, type__$1, transpose_QMARK_, transpose_QMARK___$1, vec__6139, u_type, u_cast, setter, vec__6137, id, type) {
      return function(x) {
        return setter.call(gl, loc, thi.ng.geom.webgl.arrays.typed_array_QMARK_.call(null, x) ? x : u_cast.call(null, typeof x === "number" ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null) : x));
      };
    }(loc, vec__6138, type__$1, transpose_QMARK_, transpose_QMARK___$1, vec__6139, u_type, u_cast, setter, vec__6137, id, type), new cljs.core.Keyword(null, "loc", "loc", 1014011570), loc], null));
  }, cljs.core.PersistentArrayMap.EMPTY, uniforms);
};
thi.ng.geom.webgl.shaders.set_uniform = function set_uniform(shader, id, val) {
  var temp__4124__auto__ = cljs.core.get_in.call(null, shader, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), id], null));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var u_spec = temp__4124__auto__;
    return(new cljs.core.Keyword(null, "setter", "setter", 4403102705)).cljs$core$IFn$_invoke$arity$1(u_spec).call(null, val);
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, [cljs.core.str("Unknown shader uniform: "), cljs.core.str(id)].join(""));
  }
};
thi.ng.geom.webgl.shaders.init_shader_attribs = function init_shader_attribs(gl, prog, attribs) {
  return cljs.core.reduce.call(null, function(amap, id) {
    return cljs.core.assoc.call(null, amap, id, gl.getAttribLocation(prog, cljs.core.name.call(null, id)));
  }, cljs.core.PersistentArrayMap.EMPTY, attribs);
};
thi.ng.geom.webgl.shaders.set_attribute = function set_attribute(gl, shader, id, p__6140) {
  var map__6143 = p__6140;
  var map__6143__$1 = cljs.core.seq_QMARK_.call(null, map__6143) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6143) : map__6143;
  var offset = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
  var normalized_QMARK_ = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "normalized?", "normalized?", 762171290));
  var type = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var size = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "size", "size", 1017434995));
  var stride = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "stride", "stride", 4416885323));
  var buffer = cljs.core.get.call(null, map__6143__$1, new cljs.core.Keyword(null, "buffer", "buffer", 3930752946));
  var temp__4124__auto__ = cljs.core.get_in.call(null, shader, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), id], null));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var loc = temp__4124__auto__;
    var G__6144 = gl;
    G__6144.bindBuffer(thi.ng.geom.webgl.core.array_buffer, buffer);
    G__6144.enableVertexAttribArray(loc);
    G__6144.vertexAttribPointer(loc, size, function() {
      var or__3481__auto__ = type;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return thi.ng.geom.webgl.core.float$;
      }
    }(), cljs.core.boolean$.call(null, normalized_QMARK_), function() {
      var or__3481__auto__ = stride;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }(), function() {
      var or__3481__auto__ = offset;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return 0;
      }
    }());
    return G__6144;
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, [cljs.core.str("Unknown shader attribute: "), cljs.core.str(id)].join(""));
  }
};
thi.ng.geom.webgl.shaders.disable_attribute = function disable_attribute(gl, shader, id) {
  var temp__4124__auto__ = cljs.core.get_in.call(null, shader, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), id], null));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var loc = temp__4124__auto__;
    gl.disableVertexAttribArray(loc);
    return gl;
  } else {
    return thi.ng.common.error.illegal_arg_BANG_.call(null, [cljs.core.str("Unknown shader attribute: "), cljs.core.str(id)].join(""));
  }
};
thi.ng.geom.webgl.shaders.header_prefix = "\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp int;\n    precision highp float;\n    #else\n    precision mediump int;\n    precision mediump float;\n    #endif\n    #define PI      3.141592653589793\n    #define TWO_PI  6.283185307179586\n    #define HALF_PI 1.570796326794896\n    #define RAD     0.008726646259972\n    ";
thi.ng.geom.webgl.shaders.compile_glsl_vars = function compile_glsl_vars(qualifier, coll) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p__6147) {
    var vec__6148 = p__6147;
    var id = cljs.core.nth.call(null, vec__6148, 0, null);
    var type = cljs.core.nth.call(null, vec__6148, 1, null);
    return[cljs.core.str(qualifier), cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, type)), cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, id)), cljs.core.str(";\n")].join("");
  }, coll));
};
thi.ng.geom.webgl.shaders.parse_and_throw_error = function parse_and_throw_error(gl, shader, src) {
  var src_lines = cljs.core.vec.call(null, clojure.string.split_lines.call(null, src));
  var errors = clojure.string.join.call(null, "\n", cljs.core.filter.call(null, cljs.core.identity, cljs.core.map.call(null, function(src_lines) {
    return function(line) {
      var vec__6150 = cljs.core.re_find.call(null, /ERROR: \d+:(\d+): (.*)/, line);
      var _ = cljs.core.nth.call(null, vec__6150, 0, null);
      var ln = cljs.core.nth.call(null, vec__6150, 1, null);
      var msg = cljs.core.nth.call(null, vec__6150, 2, null);
      if (cljs.core.truth_(ln)) {
        return[cljs.core.str("line "), cljs.core.str(ln), cljs.core.str(": "), cljs.core.str(msg), cljs.core.str("\n"), cljs.core.str(src_lines.call(null, parseInt(ln, 10) - 1))].join("");
      } else {
        return null;
      }
    };
  }(src_lines), clojure.string.split_lines.call(null, gl.getShaderInfoLog(shader)))));
  gl.deleteShader(shader);
  return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str("Error compiling shader:\n"), cljs.core.str(errors)].join(""));
};
thi.ng.geom.webgl.shaders.compile_shader = function compile_shader(gl, src, type) {
  var temp__4124__auto__ = gl.createShader(type);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var shader = temp__4124__auto__;
    gl.shaderSource(shader, src);
    gl.compileShader(shader);
    if (cljs.core.truth_(gl.getShaderParameter(shader, thi.ng.geom.webgl.core.compile_status))) {
      return shader;
    } else {
      return thi.ng.geom.webgl.shaders.parse_and_throw_error.call(null, gl, shader, src);
    }
  } else {
    return thi.ng.common.error.throw_BANG_.call(null, "Can't create shader");
  }
};
thi.ng.geom.webgl.shaders.make_shader_from_spec = function make_shader_from_spec(gl, p__6151) {
  var map__6155 = p__6151;
  var map__6155__$1 = cljs.core.seq_QMARK_.call(null, map__6155) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6155) : map__6155;
  var prefix = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "prefix", "prefix", 4328760836));
  var varying = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "varying", "varying", 1251174370));
  var attribs = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563));
  var uniforms = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177));
  var fs = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "fs", "fs", 1013907519));
  var vs = cljs.core.get.call(null, map__6155__$1, new cljs.core.Keyword(null, "vs", "vs", 1013908015));
  var u_src = thi.ng.geom.webgl.shaders.compile_glsl_vars.call(null, "uniform", uniforms);
  var a_src = thi.ng.geom.webgl.shaders.compile_glsl_vars.call(null, "attribute", attribs);
  var v_src = thi.ng.geom.webgl.shaders.compile_glsl_vars.call(null, "varying", varying);
  var prefix__$1 = [cljs.core.str(function() {
    var or__3481__auto__ = prefix;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.webgl.shaders.header_prefix;
    }
  }()), cljs.core.str(u_src), cljs.core.str(v_src)].join("");
  var vs__$1 = thi.ng.geom.webgl.shaders.compile_shader.call(null, gl, [cljs.core.str(prefix__$1), cljs.core.str(a_src), cljs.core.str(vs)].join(""), thi.ng.geom.webgl.core.vertex_shader);
  var fs__$1 = thi.ng.geom.webgl.shaders.compile_shader.call(null, gl, [cljs.core.str(prefix__$1), cljs.core.str(fs)].join(""), thi.ng.geom.webgl.core.fragment_shader);
  var prog = gl.createProgram();
  var G__6156_6158 = gl;
  G__6156_6158.attachShader(prog, vs__$1);
  G__6156_6158.attachShader(prog, fs__$1);
  G__6156_6158.linkProgram(prog);
  if (cljs.core.truth_(gl.getProgramParameter(prog, thi.ng.geom.webgl.core.link_status))) {
    var uniforms__$1 = thi.ng.geom.webgl.shaders.init_shader_uniforms.call(null, gl, prog, uniforms);
    var attribs__$1 = thi.ng.geom.webgl.shaders.init_shader_attribs.call(null, gl, prog, cljs.core.keys.call(null, attribs));
    var G__6157_6159 = gl;
    G__6157_6159.deleteShader(vs__$1);
    G__6157_6159.deleteShader(fs__$1);
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "program", "program", 704516598), prog, new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), uniforms__$1, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), attribs__$1, new cljs.core.Keyword(null, "varying", "varying", 1251174370), varying], null);
  } else {
    return thi.ng.common.error.throw_BANG_.call(null, [cljs.core.str("Shader failed to link:"), cljs.core.str(gl.getProgramInfoLog(prog))].join(""));
  }
};
thi.ng.geom.webgl.shaders.make_shader_from_dom = function make_shader_from_dom(gl, p__6160) {
  var map__6162 = p__6160;
  var map__6162__$1 = cljs.core.seq_QMARK_.call(null, map__6162) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6162) : map__6162;
  var spec = map__6162__$1;
  var fs = cljs.core.get.call(null, map__6162__$1, new cljs.core.Keyword(null, "fs", "fs", 1013907519));
  var vs = cljs.core.get.call(null, map__6162__$1, new cljs.core.Keyword(null, "vs", "vs", 1013908015));
  return thi.ng.geom.webgl.shaders.make_shader_from_spec.call(null, gl, cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "vs", "vs", 1013908015), thi.ng.geom.webgl.utils.get_script_text.call(null, vs), new cljs.core.Keyword(null, "fs", "fs", 1013907519), thi.ng.geom.webgl.utils.get_script_text.call(null, fs)));
};
goog.provide("thi.ng.geom.webgl.buffers");
goog.require("cljs.core");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.common.error");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.webgl.core");
goog.require("thi.ng.geom.webgl.core");
thi.ng.geom.webgl.buffers.make_attribute_buffer = function make_attribute_buffer(gl, target, draw_type, data) {
  var buffer = gl.createBuffer();
  gl.bindBuffer(target, buffer);
  gl.bufferData(target, data, draw_type);
  return buffer;
};
thi.ng.geom.webgl.buffers.make_attribute_buffers = function make_attribute_buffers(gl, mode, spec) {
  return cljs.core.reduce_kv.call(null, function(spec__$1, id, p__6020) {
    var map__6021 = p__6020;
    var map__6021__$1 = cljs.core.seq_QMARK_.call(null, map__6021) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6021) : map__6021;
    var target = cljs.core.get.call(null, map__6021__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
    var data = cljs.core.get.call(null, map__6021__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
    return cljs.core.assoc_in.call(null, spec__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, new cljs.core.Keyword(null, "buffer", "buffer", 3930752946)], null), thi.ng.geom.webgl.buffers.make_attribute_buffer.call(null, gl, function() {
      var or__3481__auto__ = target;
      if (cljs.core.truth_(or__3481__auto__)) {
        return or__3481__auto__;
      } else {
        return thi.ng.geom.webgl.core.array_buffer;
      }
    }(), mode, data));
  }, spec, spec);
};
thi.ng.geom.webgl.buffers.draw_arrays = function draw_arrays(gl, p__6026) {
  var map__6028 = p__6026;
  var map__6028__$1 = cljs.core.seq_QMARK_.call(null, map__6028) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6028) : map__6028;
  var count = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "count", "count", 1108755585));
  var mode = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "mode", "mode", 1017261333));
  var uniforms = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177));
  var attribs = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563));
  var shader = cljs.core.get.call(null, map__6028__$1, new cljs.core.Keyword(null, "shader", "shader", 4405291863));
  gl.useProgram((new cljs.core.Keyword(null, "program", "program", 704516598)).cljs$core$IFn$_invoke$arity$1(shader));
  thi.ng.geom.webgl.utils.loop_kv.call(null, function(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader) {
    return function(p1__6022_SHARP_, p2__6023_SHARP_) {
      return thi.ng.geom.webgl.shaders.set_uniform.call(null, shader, p1__6022_SHARP_, p2__6023_SHARP_);
    };
  }(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader), uniforms);
  thi.ng.geom.webgl.utils.loop_kv.call(null, function(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader) {
    return function(p1__6024_SHARP_, p2__6025_SHARP_) {
      return thi.ng.geom.webgl.shaders.set_attribute.call(null, gl, shader, p1__6024_SHARP_, p2__6025_SHARP_);
    };
  }(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader), attribs);
  gl.drawArrays(mode, 0, count);
  thi.ng.geom.webgl.utils.loop_kv.call(null, function(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader) {
    return function(id, _) {
      return thi.ng.geom.webgl.shaders.disable_attribute.call(null, gl, shader, id);
    };
  }(map__6028, map__6028__$1, count, mode, uniforms, attribs, shader), attribs);
  return gl;
};
thi.ng.geom.webgl.buffers.FBO = function(gl, id, __meta, __extmap) {
  this.gl = gl;
  this.id = id;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k6030, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k6030, new cljs.core.Keyword(null, "gl", "gl", 1013907543))) {
    return self__.gl;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k6030, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
      return self__.id;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k6030, else__4070__auto__);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.webgl.buffers.FBO{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PRelease$ = true;
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PRelease$release$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.deleteFramebuffer(self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.FBO(self__.gl, self__.id, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PFramebuffer$ = true;
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_color_texture$arity$2 = function(_, p__6032) {
  var self__ = this;
  var map__6033 = p__6032;
  var map__6033__$1 = cljs.core.seq_QMARK_.call(null, map__6033) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6033) : map__6033;
  var id__$1 = cljs.core.get.call(null, map__6033__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var target = cljs.core.get.call(null, map__6033__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  var ___$1 = this;
  self__.gl.framebufferTexture2D(thi.ng.geom.webgl.core.framebuffer, thi.ng.geom.webgl.core.color_attachment0, target, id__$1, 0);
  thi.ng.geom.webgl.buffers.check_fbo.call(null, self__.gl);
  return ___$1;
};
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PFramebuffer$set_fbo_depth_buffer$arity$2 = function(_, p__6034) {
  var self__ = this;
  var map__6035 = p__6034;
  var map__6035__$1 = cljs.core.seq_QMARK_.call(null, map__6035) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6035) : map__6035;
  var id__$1 = cljs.core.get.call(null, map__6035__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var ___$1 = this;
  self__.gl.framebufferRenderbuffer(thi.ng.geom.webgl.core.framebuffer, thi.ng.geom.webgl.core.depth_attachment, thi.ng.geom.webgl.core.renderbuffer, id__$1);
  thi.ng.geom.webgl.buffers.check_fbo.call(null, self__.gl);
  return ___$1;
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.webgl.buffers.FBO(self__.gl, self__.id, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__6029) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__6036 = cljs.core.keyword_identical_QMARK_;
  var expr__6037 = k__4075__auto__;
  if (cljs.core.truth_(pred__6036.call(null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), expr__6037))) {
    return new thi.ng.geom.webgl.buffers.FBO(G__6029, self__.id, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__6036.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__6037))) {
      return new thi.ng.geom.webgl.buffers.FBO(self__.gl, G__6029, self__.__meta, self__.__extmap, null);
    } else {
      return new thi.ng.geom.webgl.buffers.FBO(self__.gl, self__.id, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__6029), null);
    }
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__6029) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.FBO(self__.gl, self__.id, G__6029, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.FBO.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PBind$ = true;
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PBind$bind$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.bindFramebuffer(thi.ng.geom.webgl.core.framebuffer, self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.FBO.prototype.thi$ng$geom$webgl$core$PBind$unbind$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.bindFramebuffer(thi.ng.geom.webgl.core.framebuffer, null);
  return ___$1;
};
thi.ng.geom.webgl.buffers.FBO.cljs$lang$type = true;
thi.ng.geom.webgl.buffers.FBO.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.webgl.buffers/FBO");
};
thi.ng.geom.webgl.buffers.FBO.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.webgl.buffers/FBO");
};
thi.ng.geom.webgl.buffers.__GT_FBO = function __GT_FBO(gl, id) {
  return new thi.ng.geom.webgl.buffers.FBO(gl, id);
};
thi.ng.geom.webgl.buffers.map__GT_FBO = function map__GT_FBO(G__6031) {
  return new thi.ng.geom.webgl.buffers.FBO((new cljs.core.Keyword(null, "gl", "gl", 1013907543)).cljs$core$IFn$_invoke$arity$1(G__6031), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__6031), null, cljs.core.dissoc.call(null, G__6031, new cljs.core.Keyword(null, "gl", "gl", 1013907543), new cljs.core.Keyword(null, "id", "id", 1013907597)));
};
thi.ng.geom.webgl.buffers.check_fbo = function check_fbo(gl) {
  var pred__6042 = cljs.core._EQ_;
  var expr__6043 = gl.checkFramebufferStatus(thi.ng.geom.webgl.core.framebuffer);
  if (cljs.core.truth_(pred__6042.call(null, thi.ng.geom.webgl.core.framebuffer_unsupported, expr__6043))) {
    return thi.ng.common.error.throw_BANG_.call(null, "FBO unsupported");
  } else {
    if (cljs.core.truth_(pred__6042.call(null, thi.ng.geom.webgl.core.framebuffer_incomplete_attachment, expr__6043))) {
      return thi.ng.common.error.throw_BANG_.call(null, "FBO incomplete attachment");
    } else {
      if (cljs.core.truth_(pred__6042.call(null, thi.ng.geom.webgl.core.framebuffer_incomplete_dimensions, expr__6043))) {
        return thi.ng.common.error.throw_BANG_.call(null, "FBO incomplete dimensions");
      } else {
        if (cljs.core.truth_(pred__6042.call(null, thi.ng.geom.webgl.core.framebuffer_incomplete_missing_attachment, expr__6043))) {
          return thi.ng.common.error.throw_BANG_.call(null, "FBO incomplete missing attachment");
        } else {
          return gl;
        }
      }
    }
  }
};
thi.ng.geom.webgl.buffers.make_fbo = function make_fbo(gl) {
  return new thi.ng.geom.webgl.buffers.FBO(gl, gl.createFramebuffer());
};
thi.ng.geom.webgl.buffers.RenderBuffer = function(gl, id, format, width, height, __meta, __extmap) {
  this.gl = gl;
  this.id = id;
  this.format = format;
  this.width = width;
  this.height = height;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k6046, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k6046, new cljs.core.Keyword(null, "gl", "gl", 1013907543))) {
    return self__.gl;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k6046, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
      return self__.id;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k6046, new cljs.core.Keyword(null, "format", "format", 4040092521))) {
        return self__.format;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k6046, new cljs.core.Keyword(null, "width", "width", 1127031096))) {
          return self__.width;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k6046, new cljs.core.Keyword(null, "height", "height", 4087841945))) {
            return self__.height;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k6046, else__4070__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.webgl.buffers.RenderBuffer{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "format", "format", 4040092521), self__.format], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "width", "width", 1127031096), self__.width], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "height", "height", 4087841945), self__.height], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PRelease$ = true;
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PRelease$release$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.deleteRenderbuffer(self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, self__.width, self__.height, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "format", "format", 4040092521), null, new cljs.core.Keyword(null, "width", "width", 1127031096), null, new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), null, new cljs.core.Keyword(null, "height", "height", 4087841945), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, self__.width, self__.height, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__6045) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__6048 = cljs.core.keyword_identical_QMARK_;
  var expr__6049 = k__4075__auto__;
  if (cljs.core.truth_(pred__6048.call(null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), expr__6049))) {
    return new thi.ng.geom.webgl.buffers.RenderBuffer(G__6045, self__.id, self__.format, self__.width, self__.height, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__6048.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__6049))) {
      return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, G__6045, self__.format, self__.width, self__.height, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__6048.call(null, new cljs.core.Keyword(null, "format", "format", 4040092521), expr__6049))) {
        return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, G__6045, self__.width, self__.height, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__6048.call(null, new cljs.core.Keyword(null, "width", "width", 1127031096), expr__6049))) {
          return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, G__6045, self__.height, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__6048.call(null, new cljs.core.Keyword(null, "height", "height", 4087841945), expr__6049))) {
            return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, self__.width, G__6045, self__.__meta, self__.__extmap, null);
          } else {
            return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, self__.width, self__.height, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__6045), null);
          }
        }
      }
    }
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "format", "format", 4040092521), self__.format], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "width", "width", 1127031096), self__.width], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "height", "height", 4087841945), self__.height], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__6045) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, self__.format, self__.width, self__.height, G__6045, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PBind$ = true;
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PBind$bind$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.bindRenderbuffer(thi.ng.geom.webgl.core.renderbuffer, self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PBind$unbind$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.bindRenderbuffer(thi.ng.geom.webgl.core.renderbuffer, null);
  return ___$1;
};
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PConfigure$ = true;
thi.ng.geom.webgl.buffers.RenderBuffer.prototype.thi$ng$geom$webgl$core$PConfigure$configure$arity$2 = function(_, p__6051) {
  var self__ = this;
  var map__6052 = p__6051;
  var map__6052__$1 = cljs.core.seq_QMARK_.call(null, map__6052) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6052) : map__6052;
  var height__$1 = cljs.core.get.call(null, map__6052__$1, new cljs.core.Keyword(null, "height", "height", 4087841945));
  var width__$1 = cljs.core.get.call(null, map__6052__$1, new cljs.core.Keyword(null, "width", "width", 1127031096));
  var format__$1 = cljs.core.get.call(null, map__6052__$1, new cljs.core.Keyword(null, "format", "format", 4040092521));
  var ___$1 = this;
  thi.ng.geom.webgl.core.bind.call(null, ___$1);
  self__.gl.renderbufferStorage(thi.ng.geom.webgl.core.renderbuffer, format__$1, width__$1, height__$1);
  thi.ng.geom.webgl.core.unbind.call(null, ___$1);
  return new thi.ng.geom.webgl.buffers.RenderBuffer(self__.gl, self__.id, format__$1, width__$1, height__$1);
};
thi.ng.geom.webgl.buffers.RenderBuffer.cljs$lang$type = true;
thi.ng.geom.webgl.buffers.RenderBuffer.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.webgl.buffers/RenderBuffer");
};
thi.ng.geom.webgl.buffers.RenderBuffer.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.webgl.buffers/RenderBuffer");
};
thi.ng.geom.webgl.buffers.__GT_RenderBuffer = function __GT_RenderBuffer(gl, id, format, width, height) {
  return new thi.ng.geom.webgl.buffers.RenderBuffer(gl, id, format, width, height);
};
thi.ng.geom.webgl.buffers.map__GT_RenderBuffer = function map__GT_RenderBuffer(G__6047) {
  return new thi.ng.geom.webgl.buffers.RenderBuffer((new cljs.core.Keyword(null, "gl", "gl", 1013907543)).cljs$core$IFn$_invoke$arity$1(G__6047), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__6047), (new cljs.core.Keyword(null, "format", "format", 4040092521)).cljs$core$IFn$_invoke$arity$1(G__6047), (new cljs.core.Keyword(null, "width", "width", 1127031096)).cljs$core$IFn$_invoke$arity$1(G__6047), (new cljs.core.Keyword(null, "height", "height", 4087841945)).cljs$core$IFn$_invoke$arity$1(G__6047), 
  null, cljs.core.dissoc.call(null, G__6047, new cljs.core.Keyword(null, "gl", "gl", 1013907543), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "format", "format", 4040092521), new cljs.core.Keyword(null, "width", "width", 1127031096), new cljs.core.Keyword(null, "height", "height", 4087841945)));
};
thi.ng.geom.webgl.buffers.make_render_buffer = function() {
  var make_render_buffer__delegate = function(gl, p__6053) {
    var vec__6055 = p__6053;
    var opts = cljs.core.nth.call(null, vec__6055, 0, null);
    var buf = new thi.ng.geom.webgl.buffers.RenderBuffer(gl, gl.createRenderbuffer(), null, null, null);
    if (cljs.core.truth_(opts)) {
      return thi.ng.geom.webgl.core.configure.call(null, buf, opts);
    } else {
      return buf;
    }
  };
  var make_render_buffer = function(gl, var_args) {
    var p__6053 = null;
    if (arguments.length > 1) {
      p__6053 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return make_render_buffer__delegate.call(this, gl, p__6053);
  };
  make_render_buffer.cljs$lang$maxFixedArity = 1;
  make_render_buffer.cljs$lang$applyTo = function(arglist__6056) {
    var gl = cljs.core.first(arglist__6056);
    var p__6053 = cljs.core.rest(arglist__6056);
    return make_render_buffer__delegate(gl, p__6053);
  };
  make_render_buffer.cljs$core$IFn$_invoke$arity$variadic = make_render_buffer__delegate;
  return make_render_buffer;
}();
thi.ng.geom.webgl.buffers.make_depth_buffer = function make_depth_buffer(gl, width, height) {
  return thi.ng.geom.webgl.buffers.make_render_buffer.call(null, gl, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "format", "format", 4040092521), thi.ng.geom.webgl.core.depth_component16, new cljs.core.Keyword(null, "width", "width", 1127031096), width, new cljs.core.Keyword(null, "height", "height", 4087841945), height], null));
};
thi.ng.geom.webgl.buffers.Texture2D = function(gl, id, channels, type, target, width, height, __meta, __extmap) {
  this.gl = gl;
  this.id = id;
  this.channels = channels;
  this.type = type;
  this.target = target;
  this.width = width;
  this.height = height;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4067__auto__, k__4068__auto__) {
  var self__ = this;
  var this__4067__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4067__auto____$1, k__4068__auto__, null);
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4069__auto__, k6058, else__4070__auto__) {
  var self__ = this;
  var this__4069__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "gl", "gl", 1013907543))) {
    return self__.gl;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "id", "id", 1013907597))) {
      return self__.id;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "channels", "channels", 2446530370))) {
        return self__.channels;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "type", "type", 1017479852))) {
          return self__.type;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "target", "target", 4427965699))) {
            return self__.target;
          } else {
            if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "width", "width", 1127031096))) {
              return self__.width;
            } else {
              if (cljs.core.keyword_identical_QMARK_.call(null, k6058, new cljs.core.Keyword(null, "height", "height", 4087841945))) {
                return self__.height;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return cljs.core.get.call(null, self__.__extmap, k6058, else__4070__auto__);
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4081__auto__, writer__4082__auto__, opts__4083__auto__) {
  var self__ = this;
  var this__4081__auto____$1 = this;
  var pr_pair__4084__auto__ = function(this__4081__auto____$1) {
    return function(keyval__4085__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, cljs.core.pr_writer, "", " ", "", opts__4083__auto__, keyval__4085__auto__);
    };
  }(this__4081__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4082__auto__, pr_pair__4084__auto__, "#thi.ng.geom.webgl.buffers.Texture2D{", ", ", "}", opts__4083__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), self__.channels], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1017479852), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "target", "target", 4427965699), self__.target], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "width", "width", 1127031096), self__.width], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "height", "height", 4087841945), self__.height], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PRelease$ = true;
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PRelease$release$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.deleteTexture(self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PTexture$ = true;
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PTexture$set_texture_filter$arity$2 = function(_, type__$1) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.texParameteri(self__.target, thi.ng.geom.webgl.core.texture_min_filter, type__$1);
  self__.gl.texParameteri(self__.target, thi.ng.geom.webgl.core.texture_mag_filter, type__$1);
  return ___$1;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PTexture$set_texture_wrap$arity$2 = function(_, type__$1) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.texParameteri(self__.target, thi.ng.geom.webgl.core.texture_wrap_s, type__$1);
  self__.gl.texParameteri(self__.target, thi.ng.geom.webgl.core.texture_wrap_t, type__$1);
  return ___$1;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4065__auto__) {
  var self__ = this;
  var this__4065__auto____$1 = this;
  return self__.__meta;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4061__auto__) {
  var self__ = this;
  var this__4061__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, self__.width, self__.height, self__.__meta, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4071__auto__) {
  var self__ = this;
  var this__4071__auto____$1 = this;
  return 7 + cljs.core.count.call(null, self__.__extmap);
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4062__auto__) {
  var self__ = this;
  var this__4062__auto____$1 = this;
  var h__3892__auto__ = self__.__hash;
  if (!(h__3892__auto__ == null)) {
    return h__3892__auto__;
  } else {
    var h__3892__auto____$1 = cljs.core.hash_imap.call(null, this__4062__auto____$1);
    self__.__hash = h__3892__auto____$1;
    return h__3892__auto____$1;
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4063__auto__, other__4064__auto__) {
  var self__ = this;
  var this__4063__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = other__4064__auto__;
    if (cljs.core.truth_(and__3469__auto__)) {
      return this__4063__auto____$1.constructor === other__4064__auto__.constructor && cljs.core.equiv_map.call(null, this__4063__auto____$1, other__4064__auto__);
    } else {
      return and__3469__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4076__auto__, k__4077__auto__) {
  var self__ = this;
  var this__4076__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), null, new cljs.core.Keyword(null, "width", "width", 1127031096), null, new cljs.core.Keyword(null, "type", "type", 1017479852), null, new cljs.core.Keyword(null, "id", "id", 1013907597), null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), null, new cljs.core.Keyword(null, "target", "target", 4427965699), 
  null, new cljs.core.Keyword(null, "height", "height", 4087841945), null], null), null), k__4077__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4076__auto____$1), self__.__meta), k__4077__auto__);
  } else {
    return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, self__.width, self__.height, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4077__auto__)), null);
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4074__auto__, k__4075__auto__, G__6057) {
  var self__ = this;
  var this__4074__auto____$1 = this;
  var pred__6060 = cljs.core.keyword_identical_QMARK_;
  var expr__6061 = k__4075__auto__;
  if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "gl", "gl", 1013907543), expr__6061))) {
    return new thi.ng.geom.webgl.buffers.Texture2D(G__6057, self__.id, self__.channels, self__.type, self__.target, self__.width, self__.height, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), expr__6061))) {
      return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, G__6057, self__.channels, self__.type, self__.target, self__.width, self__.height, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "channels", "channels", 2446530370), expr__6061))) {
        return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, G__6057, self__.type, self__.target, self__.width, self__.height, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "type", "type", 1017479852), expr__6061))) {
          return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, G__6057, self__.target, self__.width, self__.height, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "target", "target", 4427965699), expr__6061))) {
            return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, G__6057, self__.width, self__.height, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "width", "width", 1127031096), expr__6061))) {
              return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, G__6057, self__.height, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__6060.call(null, new cljs.core.Keyword(null, "height", "height", 4087841945), expr__6061))) {
                return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, self__.width, G__6057, self__.__meta, self__.__extmap, null);
              } else {
                return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, self__.width, self__.height, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4075__auto__, G__6057), null);
              }
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4079__auto__) {
  var self__ = this;
  var this__4079__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "gl", "gl", 1013907543), self__.gl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "id", "id", 1013907597), self__.id], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "channels", "channels", 2446530370), self__.channels], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1017479852), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "target", "target", 4427965699), self__.target], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "width", "width", 1127031096), self__.width], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "height", "height", 4087841945), self__.height], null)], null), self__.__extmap));
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4066__auto__, G__6057) {
  var self__ = this;
  var this__4066__auto____$1 = this;
  return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, self__.width, self__.height, G__6057, self__.__extmap, self__.__hash);
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4072__auto__, entry__4073__auto__) {
  var self__ = this;
  var this__4072__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4073__auto__)) {
    return cljs.core._assoc.call(null, this__4072__auto____$1, cljs.core._nth.call(null, entry__4073__auto__, 0), cljs.core._nth.call(null, entry__4073__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4072__auto____$1, entry__4073__auto__);
  }
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PBind$ = true;
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PBind$bind$arity$2 = function(_, unit) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.activeTexture(thi.ng.geom.webgl.core.texture0 + unit);
  self__.gl.bindTexture(self__.target, self__.id);
  return ___$1;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PBind$unbind$arity$2 = function(_, unit) {
  var self__ = this;
  var ___$1 = this;
  self__.gl.activeTexture(thi.ng.geom.webgl.core.texture0 + unit);
  self__.gl.bindTexture(self__.target, -1);
  return ___$1;
};
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PConfigure$ = true;
thi.ng.geom.webgl.buffers.Texture2D.prototype.thi$ng$geom$webgl$core$PConfigure$configure$arity$2 = function(_, p__6063) {
  var self__ = this;
  var map__6064 = p__6063;
  var map__6064__$1 = cljs.core.seq_QMARK_.call(null, map__6064) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6064) : map__6064;
  var wrap = cljs.core.get.call(null, map__6064__$1, new cljs.core.Keyword(null, "wrap", "wrap", 1017562044));
  var filter = cljs.core.get.call(null, map__6064__$1, new cljs.core.Keyword(null, "filter", "filter", 4034379498));
  var height__$1 = cljs.core.get.call(null, map__6064__$1, new cljs.core.Keyword(null, "height", "height", 4087841945));
  var width__$1 = cljs.core.get.call(null, map__6064__$1, new cljs.core.Keyword(null, "width", "width", 1127031096));
  var ___$1 = this;
  self__.gl.texImage2D(self__.target, 0, self__.channels, width__$1, height__$1, 0, self__.channels, self__.type, null);
  if (cljs.core.truth_(filter)) {
    thi.ng.geom.webgl.core.set_texture_filter.call(null, ___$1, filter);
  } else {
  }
  if (cljs.core.truth_(wrap)) {
    thi.ng.geom.webgl.core.set_texture_wrap.call(null, ___$1, wrap);
  } else {
  }
  return new thi.ng.geom.webgl.buffers.Texture2D(self__.gl, self__.id, self__.channels, self__.type, self__.target, width__$1, height__$1);
};
thi.ng.geom.webgl.buffers.Texture2D.cljs$lang$type = true;
thi.ng.geom.webgl.buffers.Texture2D.cljs$lang$ctorPrSeq = function(this__4101__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "thi.ng.geom.webgl.buffers/Texture2D");
};
thi.ng.geom.webgl.buffers.Texture2D.cljs$lang$ctorPrWriter = function(this__4101__auto__, writer__4102__auto__) {
  return cljs.core._write.call(null, writer__4102__auto__, "thi.ng.geom.webgl.buffers/Texture2D");
};
thi.ng.geom.webgl.buffers.__GT_Texture2D = function __GT_Texture2D(gl, id, channels, type, target, width, height) {
  return new thi.ng.geom.webgl.buffers.Texture2D(gl, id, channels, type, target, width, height);
};
thi.ng.geom.webgl.buffers.map__GT_Texture2D = function map__GT_Texture2D(G__6059) {
  return new thi.ng.geom.webgl.buffers.Texture2D((new cljs.core.Keyword(null, "gl", "gl", 1013907543)).cljs$core$IFn$_invoke$arity$1(G__6059), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(G__6059), (new cljs.core.Keyword(null, "channels", "channels", 2446530370)).cljs$core$IFn$_invoke$arity$1(G__6059), (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(G__6059), (new cljs.core.Keyword(null, "target", "target", 4427965699)).cljs$core$IFn$_invoke$arity$1(G__6059), 
  (new cljs.core.Keyword(null, "width", "width", 1127031096)).cljs$core$IFn$_invoke$arity$1(G__6059), (new cljs.core.Keyword(null, "height", "height", 4087841945)).cljs$core$IFn$_invoke$arity$1(G__6059), null, cljs.core.dissoc.call(null, G__6059, new cljs.core.Keyword(null, "gl", "gl", 1013907543), new cljs.core.Keyword(null, "id", "id", 1013907597), new cljs.core.Keyword(null, "channels", "channels", 2446530370), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, 
  "target", "target", 4427965699), new cljs.core.Keyword(null, "width", "width", 1127031096), new cljs.core.Keyword(null, "height", "height", 4087841945)));
};
thi.ng.geom.webgl.buffers.make_texture2d = function make_texture2d(gl, p__6065) {
  var map__6067 = p__6065;
  var map__6067__$1 = cljs.core.seq_QMARK_.call(null, map__6067) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6067) : map__6067;
  var opts = map__6067__$1;
  var height = cljs.core.get.call(null, map__6067__$1, new cljs.core.Keyword(null, "height", "height", 4087841945));
  var width = cljs.core.get.call(null, map__6067__$1, new cljs.core.Keyword(null, "width", "width", 1127031096));
  var target = cljs.core.get.call(null, map__6067__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  var type = cljs.core.get.call(null, map__6067__$1, new cljs.core.Keyword(null, "type", "type", 1017479852));
  var channels = cljs.core.get.call(null, map__6067__$1, new cljs.core.Keyword(null, "channels", "channels", 2446530370));
  var tex = new thi.ng.geom.webgl.buffers.Texture2D(gl, gl.createTexture(), function() {
    var or__3481__auto__ = channels;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.webgl.core.rgb;
    }
  }(), function() {
    var or__3481__auto__ = type;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.webgl.core.unsigned_byte;
    }
  }(), function() {
    var or__3481__auto__ = target;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.webgl.core.texture_2d;
    }
  }(), null, null);
  if (cljs.core.truth_(function() {
    var and__3469__auto__ = width;
    if (cljs.core.truth_(and__3469__auto__)) {
      return height;
    } else {
      return and__3469__auto__;
    }
  }())) {
    thi.ng.geom.webgl.core.bind.call(null, tex, 0);
    return thi.ng.geom.webgl.core.configure.call(null, tex, opts);
  } else {
    return tex;
  }
};
goog.provide("thi.ng.geom.webgl.animator");
goog.require("cljs.core");
thi.ng.geom.webgl.animator.animframe_provider = function() {
  var or__3481__auto__ = window.requestAnimationFrame;
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    var or__3481__auto____$1 = window.webkitRequestAnimationFrame;
    if (cljs.core.truth_(or__3481__auto____$1)) {
      return or__3481__auto____$1;
    } else {
      var or__3481__auto____$2 = window.mozRequestAnimationFrame;
      if (cljs.core.truth_(or__3481__auto____$2)) {
        return or__3481__auto____$2;
      } else {
        var or__3481__auto____$3 = window.msRequestAnimationFrame;
        if (cljs.core.truth_(or__3481__auto____$3)) {
          return or__3481__auto____$3;
        } else {
          return window.oRequestAnimationFrame;
        }
      }
    }
  }
}();
thi.ng.geom.webgl.animator.now = function now() {
  var or__3481__auto__ = performance.now();
  if (cljs.core.truth_(or__3481__auto__)) {
    return or__3481__auto__;
  } else {
    var or__3481__auto____$1 = performance.webkitNow();
    if (cljs.core.truth_(or__3481__auto____$1)) {
      return or__3481__auto____$1;
    } else {
      var or__3481__auto____$2 = performance.mozNow();
      if (cljs.core.truth_(or__3481__auto____$2)) {
        return or__3481__auto____$2;
      } else {
        var or__3481__auto____$3 = performance.msNow();
        if (cljs.core.truth_(or__3481__auto____$3)) {
          return or__3481__auto____$3;
        } else {
          return performance.oNow();
        }
      }
    }
  }
};
thi.ng.geom.webgl.animator.animate = function() {
  var animate__delegate = function(f, p__4852) {
    var vec__4854 = p__4852;
    var element = cljs.core.nth.call(null, vec__4854, 0, null);
    var t0 = thi.ng.geom.webgl.animator.now.call(null);
    var t = cljs.core.atom.call(null, 0);
    var f_SINGLEQUOTE_ = function(t0, t, vec__4854, element) {
      return function animate_STAR_() {
        if (cljs.core.truth_(f.call(null, cljs.core.reset_BANG_.call(null, t, (thi.ng.geom.webgl.animator.now.call(null) - t0) * 0.001)))) {
          if (cljs.core.truth_(element)) {
            return thi.ng.geom.webgl.animator.animframe_provider.call(null, animate_STAR_, element);
          } else {
            return thi.ng.geom.webgl.animator.animframe_provider.call(null, animate_STAR_);
          }
        } else {
          return null;
        }
      };
    }(t0, t, vec__4854, element);
    return f_SINGLEQUOTE_.call(null);
  };
  var animate = function(f, var_args) {
    var p__4852 = null;
    if (arguments.length > 1) {
      p__4852 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return animate__delegate.call(this, f, p__4852);
  };
  animate.cljs$lang$maxFixedArity = 1;
  animate.cljs$lang$applyTo = function(arglist__4855) {
    var f = cljs.core.first(arglist__4855);
    var p__4852 = cljs.core.rest(arglist__4855);
    return animate__delegate(f, p__4852);
  };
  animate.cljs$core$IFn$_invoke$arity$variadic = animate__delegate;
  return animate;
}();
goog.provide("thi.ng.geom.webgl.shaders.spotlight");
goog.require("cljs.core");
thi.ng.geom.webgl.shaders.spotlight.shader_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "vs", "vs", 1013908015), "\nvoid main(){\n  vNormal \x3d normal;\n  vWorldPos \x3d model * vec4(position, 1.0);\n  gl_Position \x3d proj * view * vWorldPos;\n}", new cljs.core.Keyword(null, "fs", "fs", 1013907519), "\nfloat attenuation(vec3 dir){\n  float dist \x3d length(dir);\n  float radiance \x3d 1.0/(1.0+pow(dist/10.0, 2.0));\n  return clamp(radiance*10.0, 0.0, 1.0);\n}\n\nfloat influence(vec3 normal, float coneAngle){\n  float minConeAngle \x3d (360.0-coneAngle-10.0) * RAD;\n  float maxConeAngle \x3d (360.0-coneAngle) * RAD;\n  return smoothstep(minConeAngle, maxConeAngle, acos(normal.z));\n}\n\nfloat lambert(vec3 surfaceNormal, vec3 lightDirNormal){\n  return max(0.0, dot(surfaceNormal, lightDirNormal));\n}\n\nvec3 skyLight(vec3 normal){\n  return vec3(smoothstep(0.0, PI, PI-acos(normal.y)))*0.4;\n}\n\nvec3 gamma(vec3 color){\n  return pow(color, vec3(2.2));\n}\n\nvoid main(){\n  vec3 worldNormal \x3d normalize(vNormal);\n\n  vec3 camPos \x3d (view * vWorldPos).xyz;\n  vec3 lightPos \x3d (lightView * vWorldPos).xyz;\n  vec3 lightPosNormal \x3d normalize(lightPos);\n  vec3 lightSurfaceNormal \x3d lightRot * worldNormal;\n\n  vec3 excident \x3d (\n                   skyLight(worldNormal) +\n                   lambert(lightSurfaceNormal, -lightPosNormal) *\n                   influence(lightPosNormal, coneAngle) *\n                   attenuation(lightPos)\n                   );\n  gl_FragColor \x3d vec4(gamma(excident), 1.0);\n}", 
new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "proj", "proj", 1017353935), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "model", "model", 1117974171), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "lightView", "lightView", 
1699634253), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "lightRot", "lightRot", 2005852243), new cljs.core.Keyword(null, "mat3", "mat3", 1017248325), new cljs.core.Keyword(null, "coneAngle", "coneAngle", 4439067362), new cljs.core.Keyword(null, "float", "float", 1111430606)], null), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.Keyword(null, 
"vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "normal", "normal", 4269125721), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761)], null), new cljs.core.Keyword(null, "varying", "varying", 1251174370), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "vNormal", "vNormal", 704244847), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "vWorldPos", "vWorldPos", 2583502698), new cljs.core.Keyword(null, "vec4", "vec4", 1017519762)], 
null)], null);
goog.provide("thi.ng.geom.core.quaternion");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.common.error");
thi.ng.geom.core.quaternion.Quat4 = function(x, y, z, w) {
  this.x = x;
  this.y = y;
  this.z = z;
  this.w = w;
  this.cljs$lang$protocol_mask$partition0$ = 165700571;
  this.cljs$lang$protocol_mask$partition1$ = 10240;
};
thi.ng.geom.core.quaternion.Quat4.cljs$lang$type = true;
thi.ng.geom.core.quaternion.Quat4.cljs$lang$ctorStr = "thi.ng.geom.core.quaternion/Quat4";
thi.ng.geom.core.quaternion.Quat4.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.core.quaternion/Quat4");
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PVectorTransform$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PVectorTransform$transform_vector$arity$2 = function(_, p__8237) {
  var self__ = this;
  var vec__8238 = p__8237;
  var vx = cljs.core.nth.call(null, vec__8238, 0, null);
  var vy = cljs.core.nth.call(null, vec__8238, 1, null);
  var vz = cljs.core.nth.call(null, vec__8238, 2, null);
  var v = vec__8238;
  var ___$1 = this;
  var ix = self__.w * vx + self__.y * vz - self__.z * vy;
  var iy = self__.w * vy + self__.z * vx - self__.x * vz;
  var iz = self__.w * vz + self__.x * vy - self__.y * vx;
  var nx = -self__.x;
  var ny = -self__.y;
  var nz = -self__.z;
  var iw = nx * vx - self__.y * vy - self__.z * vz;
  return new thi.ng.geom.core.vector.Vec3(ix * self__.w + iw * nx + iy * nz - iz * ny, iy * self__.w + iw * ny + iz * nx - ix * nz, iz * self__.w + iw * nz + ix * ny - iy * nx);
};
thi.ng.geom.core.quaternion.Quat4.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str("["), cljs.core.str(self__.x), cljs.core.str(" "), cljs.core.str(self__.y), cljs.core.str(" "), cljs.core.str(self__.z), cljs.core.str(" "), cljs.core.str(self__.w), cljs.core.str("]")].join("");
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ILookup$_lookup$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.quaternion.swizzle4.call(null, ___$1, k, null);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.quaternion.swizzle4.call(null, ___$1, k, nf);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PDotProduct$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PDotProduct$dot$arity$2 = function(_, q) {
  var self__ = this;
  var ___$1 = this;
  var q__$1 = q;
  return self__.x * q__$1.x + self__.y * q__$1.y + self__.z * q__$1.z + self__.w * q__$1.w;
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PNormalize$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PNormalize$normalize$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var m = Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y + self__.z * self__.z + self__.w * self__.w);
  if (m > thi.ng.common.math.core._STAR_eps_STAR_) {
    return new thi.ng.geom.core.quaternion.Quat4(self__.x / m, self__.y / m, self__.z / m, self__.w / m);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var t = theta / 2;
  var s = Math.sin.call(null, t);
  var c = Math.cos.call(null, t);
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * c + self__.w * s, self__.y * c + self__.z * s, self__.z * c - self__.y * s, self__.w * c - self__.x * s);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var t = theta / 2;
  var s = Math.sin.call(null, t);
  var c = Math.cos.call(null, t);
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * c - self__.z * s, self__.y * c + self__.w * s, self__.z * c + self__.x * s, self__.w * c - self__.y * s);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var self__ = this;
  var ___$1 = this;
  var t = theta / 2;
  var s = Math.sin.call(null, t);
  var c = Math.cos.call(null, t);
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * c + self__.y * s, self__.y * c - self__.x * s, self__.z * c + self__.w * s, self__.w * c - self__.z * s);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PConjugate$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PConjugate$conjugate$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.quaternion.Quat4(-self__.x, -self__.y, -self__.z, self__.w);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  var G__8239 = k | 0;
  if (cljs.core._EQ_.call(null, 3, G__8239)) {
    return self__.w;
  } else {
    if (cljs.core._EQ_.call(null, 2, G__8239)) {
      return self__.z;
    } else {
      if (cljs.core._EQ_.call(null, 1, G__8239)) {
        return self__.y;
      } else {
        if (cljs.core._EQ_.call(null, 0, G__8239)) {
          return self__.x;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return thi.ng.common.error.key_error_BANG_.call(null, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, k, nf) {
  var self__ = this;
  var ___$1 = this;
  var G__8240 = k | 0;
  if (cljs.core._EQ_.call(null, 3, G__8240)) {
    return self__.w;
  } else {
    if (cljs.core._EQ_.call(null, 2, G__8240)) {
      return self__.z;
    } else {
      if (cljs.core._EQ_.call(null, 1, G__8240)) {
        return self__.y;
      } else {
        if (cljs.core._EQ_.call(null, 0, G__8240)) {
          return self__.x;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return nf;
          } else {
            return null;
          }
        }
      }
    }
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  var G__8241 = k | 0;
  if (cljs.core._EQ_.call(null, 3, G__8241)) {
    return new thi.ng.geom.core.quaternion.Quat4(self__.x, self__.y, self__.z, v);
  } else {
    if (cljs.core._EQ_.call(null, 2, G__8241)) {
      return new thi.ng.geom.core.quaternion.Quat4(self__.x, self__.y, v, self__.w);
    } else {
      if (cljs.core._EQ_.call(null, 1, G__8241)) {
        return new thi.ng.geom.core.quaternion.Quat4(self__.x, v, self__.z, self__.w);
      } else {
        if (cljs.core._EQ_.call(null, 0, G__8241)) {
          return new thi.ng.geom.core.quaternion.Quat4(v, self__.y, self__.z, self__.w);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return thi.ng.common.error.key_error_BANG_.call(null, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x, self__.y, self__.z, self__.w);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, cljs.core.cons.call(null, self__.z, cljs.core.cons.call(null, self__.w, null)));
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return 4;
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.w;
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.vector.Vec3(self__.x, self__.y, self__.z);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IReversible$_rseq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.quaternion.Quat4(self__.w, self__.z, self__.y, self__.x);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_combine.call(null, cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.x), cljs.core.hash.call(null, self__.y)), cljs.core.hash.call(null, self__.z));
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.quaternion.Quat4) {
    return self__.x === o.x && (self__.y === o.y && (self__.z === o.z && self__.w === o.w));
  } else {
    return cljs.core.sequential_QMARK_.call(null, o) && (cljs.core._EQ_.call(null, 4, cljs.core.count.call(null, o)) && (cljs.core._EQ_.call(null, self__.x, cljs.core.nth.call(null, o, 0)) && (cljs.core._EQ_.call(null, self__.y, cljs.core.nth.call(null, o, 1)) && (cljs.core._EQ_.call(null, self__.z, cljs.core.nth.call(null, o, 2)) && cljs.core._EQ_.call(null, self__.w, cljs.core.nth.call(null, o, 3))))));
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PInvert$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PInvert$invert$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var d = thi.ng.geom.core.mag_squared.call(null, ___$1);
  var d__$1 = d === 0 ? 0 : 1 / d;
  var id = -d__$1;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * id, self__.y * id, self__.z * id, self__.w * d__$1);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMathOps$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMathOps$_PLUS_$arity$2 = function(_, q) {
  var self__ = this;
  var ___$1 = this;
  var q__$1 = q;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x + q__$1.x, self__.y + q__$1.y, self__.z + q__$1.z, self__.w + q__$1.w);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMathOps$_$arity$2 = function(_, q) {
  var self__ = this;
  var ___$1 = this;
  var q__$1 = q;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x - q__$1.x, self__.y - q__$1.y, self__.z - q__$1.z, self__.w - q__$1.w);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$2 = function(_, q) {
  var self__ = this;
  var ___$1 = this;
  var q__$1 = q;
  var qx = q__$1.x;
  var qy = q__$1.y;
  var qz = q__$1.z;
  var qw = q__$1.w;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * qw + self__.w * qx + self__.y * qz - self__.z * qy, self__.y * qw + self__.w * qy + self__.z * qx - self__.x * qz, self__.z * qw + self__.w * qz + self__.x * qy - self__.y * qx, self__.w * qw - self__.x * qx - self__.y * qy - self__.z * qz);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMathOps$_STAR_$arity$3 = function(_, q, r) {
  var self__ = this;
  var ___$1 = this;
  var q__$1 = q;
  var r__$1 = r;
  var qx = q__$1.x;
  var qy = q__$1.y;
  var qz = q__$1.z;
  var qw = q__$1.w;
  var rx = r__$1.x;
  var ry = r__$1.y;
  var rz = r__$1.z;
  var rw = r__$1.w;
  var x_SINGLEQUOTE_ = self__.x * qw + self__.w * qx + self__.y * qz - self__.z * qy;
  var y_SINGLEQUOTE_ = self__.y * qw + self__.w * qy + self__.z * qx - self__.x * qz;
  var z_SINGLEQUOTE_ = self__.z * qw + self__.w * qz + self__.x * qy - self__.y * qx;
  var w_SINGLEQUOTE_ = self__.w * qw - self__.x * qx - self__.y * qy - self__.z * qz;
  return new thi.ng.geom.core.quaternion.Quat4(x_SINGLEQUOTE_ * rw + w_SINGLEQUOTE_ * rx + y_SINGLEQUOTE_ * rz - z_SINGLEQUOTE_ * ry, y_SINGLEQUOTE_ * rw + w_SINGLEQUOTE_ * ry + z_SINGLEQUOTE_ * rx - x_SINGLEQUOTE_ * rz, z_SINGLEQUOTE_ * rw + w_SINGLEQUOTE_ * rz + x_SINGLEQUOTE_ * ry - y_SINGLEQUOTE_ * rx, w_SINGLEQUOTE_ * rw - x_SINGLEQUOTE_ * rx - y_SINGLEQUOTE_ * ry - z_SINGLEQUOTE_ * rz);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x;
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.cons.call(null, self__.y, cljs.core.cons.call(null, self__.z, cljs.core.cons.call(null, self__.w, null)));
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return!((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [0, null, new cljs.core.Keyword(null, "y", "y", 1013904363), null, 1, null, new cljs.core.Keyword(null, "w", "w", 1013904361), null, new cljs.core.Keyword(null, "z", "z", 1013904364), null, 3, null, 2, null, new cljs.core.Keyword(null, "x", "x", 1013904362), null], null), null)).call(null, k) == null);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.quaternion.swizzle4_assoc.call(null, ___$1, k, v);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.core.quaternion.Quat4(self__.x * s, self__.y * s, self__.z * s, self__.w * s);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMatrixConvert$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.as_matrix.call(null, ___$1, null);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMatrixConvert$as_matrix$arity$2 = function(_, opts) {
  var self__ = this;
  var ___$1 = this;
  var vec__8243 = (new cljs.core.Keyword(null, "translate", "translate", 2066736320)).cljs$core$IFn$_invoke$arity$1(opts);
  var tx = cljs.core.nth.call(null, vec__8243, 0, null);
  var ty = cljs.core.nth.call(null, vec__8243, 1, null);
  var tz = cljs.core.nth.call(null, vec__8243, 2, null);
  var x2 = self__.x + self__.x;
  var y2 = self__.y + self__.y;
  var z2 = self__.z + self__.z;
  var xx = self__.x * x2;
  var xy = self__.x * y2;
  var xz = self__.x * z2;
  var yy = self__.y * y2;
  var yz = self__.y * z2;
  var zz = self__.z * z2;
  var wx = self__.w * x2;
  var wy = self__.w * y2;
  var wz = self__.w * z2;
  return new thi.ng.geom.core.matrix.Matrix44(1 - (yy + zz), xy + wz, xz - wy, 0, xy - wz, 1 - (xx + zz), yz + wx, 0, xz + wy, yz - wx, 1 - (xx + yy), 0, function() {
    var or__3481__auto__ = tx;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return 0;
    }
  }(), function() {
    var or__3481__auto__ = ty;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return 0;
    }
  }(), function() {
    var or__3481__auto__ = tz;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return 0;
    }
  }(), 1);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, v) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.x, self__.y, self__.z, self__.w, v], null);
};
thi.ng.geom.core.quaternion.Quat4.prototype.call = function() {
  var G__8244 = null;
  var G__8244__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.quaternion.swizzle4.call(null, _, k, null);
  };
  var G__8244__3 = function(self__, k, nf) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return thi.ng.geom.core.quaternion.swizzle4.call(null, _, k, nf);
  };
  G__8244 = function(self__, k, nf) {
    switch(arguments.length) {
      case 2:
        return G__8244__2.call(this, self__, k);
      case 3:
        return G__8244__3.call(this, self__, k, nf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__8244;
}();
thi.ng.geom.core.quaternion.Quat4.prototype.apply = function(self__, args8236) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args8236)));
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.quaternion.swizzle4.call(null, _, k, null);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, nf) {
  var self__ = this;
  var _ = this;
  return thi.ng.geom.core.quaternion.swizzle4.call(null, _, k, nf);
};
thi.ng.geom.core.quaternion.Quat4.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (o instanceof thi.ng.geom.core.quaternion.Quat4) {
    var c = cljs.core.compare.call(null, self__.x, o.x);
    if (0 === c) {
      var c__$1 = cljs.core.compare.call(null, self__.y, o.y);
      if (0 === c__$1) {
        var c__$2 = cljs.core.compare.call(null, self__.z, o.z);
        if (0 === c__$2) {
          return cljs.core.compare.call(null, self__.w, o.w);
        } else {
          return c__$2;
        }
      } else {
        return c__$1;
      }
    } else {
      return c;
    }
  } else {
    var c = cljs.core.count.call(null, o);
    if (cljs.core._EQ_.call(null, 4, c)) {
      return cljs.core.compare.call(null, o, ___$1);
    } else {
      return 4 - c;
    }
  }
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMagnitude$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMagnitude$mag$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return Math.sqrt.call(null, self__.x * self__.x + self__.y * self__.y + self__.z * self__.z + self__.w * self__.w);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PMagnitude$mag_squared$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.x * self__.x + self__.y * self__.y + self__.z * self__.z + self__.w * self__.w;
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PInterpolate$ = true;
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PInterpolate$mix$arity$2 = function(_, q) {
  var self__ = this;
  var ___$1 = this;
  return thi.ng.geom.core.mix.call(null, ___$1, q, 0.5);
};
thi.ng.geom.core.quaternion.Quat4.prototype.thi$ng$geom$core$PInterpolate$mix$arity$3 = function(_, q, t) {
  var self__ = this;
  var ___$1 = this;
  var d = thi.ng.geom.core.dot.call(null, ___$1, q);
  if (thi.ng.common.math.core.abs.call(null, d) < 1) {
    var theta = Math.acos.call(null, d);
    var stheta = Math.sqrt.call(null, d * d + -1);
    var vec__8242 = thi.ng.common.math.core.abs.call(null, stheta) < 0.001 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5, 0.5], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [Math.sin.call(null, (1 - t) * theta) / stheta, Math.sin.call(null, t * theta) / stheta], null);
    var a = cljs.core.nth.call(null, vec__8242, 0, null);
    var b = cljs.core.nth.call(null, vec__8242, 1, null);
    var q__$1 = q;
    return new thi.ng.geom.core.quaternion.Quat4(self__.x * a + q__$1.x * b, self__.y * a + q__$1.y * b, self__.z * a + q__$1.z * b, self__.w * a + q__$1.w * b);
  } else {
    return ___$1;
  }
};
thi.ng.geom.core.quaternion.__GT_Quat4 = function __GT_Quat4(x, y, z, w) {
  return new thi.ng.geom.core.quaternion.Quat4(x, y, z, w);
};
thi.ng.geom.core.quaternion.quat = function() {
  var quat = null;
  var quat__0 = function() {
    return new thi.ng.geom.core.quaternion.Quat4(0, 0, 0, 1);
  };
  var quat__1 = function(p__8246) {
    var vec__8250 = p__8246;
    var x = cljs.core.nth.call(null, vec__8250, 0, null);
    var y = cljs.core.nth.call(null, vec__8250, 1, null);
    var z = cljs.core.nth.call(null, vec__8250, 2, null);
    var w = cljs.core.nth.call(null, vec__8250, 3, null);
    return new thi.ng.geom.core.quaternion.Quat4(x, y, z, w);
  };
  var quat__2 = function(p__8245, w) {
    var vec__8249 = p__8245;
    var x = cljs.core.nth.call(null, vec__8249, 0, null);
    var y = cljs.core.nth.call(null, vec__8249, 1, null);
    var z = cljs.core.nth.call(null, vec__8249, 2, null);
    return new thi.ng.geom.core.quaternion.Quat4(x, y, z, w);
  };
  var quat__4 = function(x, y, z, w) {
    return new thi.ng.geom.core.quaternion.Quat4(x, y, z, w);
  };
  quat = function(x, y, z, w) {
    switch(arguments.length) {
      case 0:
        return quat__0.call(this);
      case 1:
        return quat__1.call(this, x);
      case 2:
        return quat__2.call(this, x, y);
      case 4:
        return quat__4.call(this, x, y, z, w);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  quat.cljs$core$IFn$_invoke$arity$0 = quat__0;
  quat.cljs$core$IFn$_invoke$arity$1 = quat__1;
  quat.cljs$core$IFn$_invoke$arity$2 = quat__2;
  quat.cljs$core$IFn$_invoke$arity$4 = quat__4;
  return quat;
}();
thi.ng.geom.core.quaternion.quat_from_axis_angle = function quat_from_axis_angle(axis, theta) {
  var theta__$1 = theta / 2;
  return thi.ng.geom.core.quaternion.quat.call(null, thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec3.call(null, axis), Math.sin.call(null, theta__$1)), Math.cos.call(null, theta__$1));
};
thi.ng.geom.core.quaternion.quat_from_euler = function() {
  var quat_from_euler__delegate = function(order, p__8251) {
    var vec__8255 = p__8251;
    var alpha = cljs.core.nth.call(null, vec__8255, 0, null);
    var beta = cljs.core.nth.call(null, vec__8255, 1, null);
    var gamma = cljs.core.nth.call(null, vec__8255, 2, null);
    var vec__8256 = function() {
      var G__8257 = order;
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "zyx", "zyx", 1014025355), G__8257)) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3Z, thi.ng.geom.core.vector.V3Y, thi.ng.geom.core.vector.V3X], null);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "yzx", "yzx", 1014024425), G__8257)) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3Y, thi.ng.geom.core.vector.V3Z, thi.ng.geom.core.vector.V3X], null);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "zxy", "zxy", 1014025325), G__8257)) {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3Z, thi.ng.geom.core.vector.V3X, thi.ng.geom.core.vector.V3Y], null);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "xzy", "xzy", 1014023465), G__8257)) {
              return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3X, thi.ng.geom.core.vector.V3Z, thi.ng.geom.core.vector.V3Y], null);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "yxz", "yxz", 1014024365), G__8257)) {
                return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3Y, thi.ng.geom.core.vector.V3X, thi.ng.geom.core.vector.V3Z], null);
              } else {
                if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "xyz", "xyz", 1014023435), G__8257)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.V3X, thi.ng.geom.core.vector.V3Y, thi.ng.geom.core.vector.V3Z], null);
                } else {
                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                    return thi.ng.common.error.illegal_arg_BANG_.call(null, order);
                  } else {
                    return null;
                  }
                }
              }
            }
          }
        }
      }
    }();
    var a = cljs.core.nth.call(null, vec__8256, 0, null);
    var b = cljs.core.nth.call(null, vec__8256, 1, null);
    var c = cljs.core.nth.call(null, vec__8256, 2, null);
    return thi.ng.geom.core._STAR_.call(null, thi.ng.geom.core.quaternion.quat_from_axis_angle.call(null, a, alpha), thi.ng.geom.core.quaternion.quat_from_axis_angle.call(null, b, beta), thi.ng.geom.core.quaternion.quat_from_axis_angle.call(null, c, gamma));
  };
  var quat_from_euler = function(order, var_args) {
    var p__8251 = null;
    if (arguments.length > 1) {
      p__8251 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return quat_from_euler__delegate.call(this, order, p__8251);
  };
  quat_from_euler.cljs$lang$maxFixedArity = 1;
  quat_from_euler.cljs$lang$applyTo = function(arglist__8258) {
    var order = cljs.core.first(arglist__8258);
    var p__8251 = cljs.core.rest(arglist__8258);
    return quat_from_euler__delegate(order, p__8251);
  };
  quat_from_euler.cljs$core$IFn$_invoke$arity$variadic = quat_from_euler__delegate;
  return quat_from_euler;
}();
thi.ng.geom.core.quaternion.quat_from_matrix = function quat_from_matrix(m) {
  var trace = m.m00 + m.m11 + m.m22;
  if (trace > 0) {
    var s = 0.5 / Math.sqrt.call(null, trace + 1);
    return new thi.ng.geom.core.quaternion.Quat4((m.m12 - m.m21) * s, (m.m20 - m.m02) * s, (m.m01 - m.m10) * s, 0.25 / s);
  } else {
    return thi.ng.geom.core.normalize.call(null, m.m00 > m.m11 && m.m00 > m.m22 ? function() {
      var s = 2 * Math.sqrt.call(null, m.m00 - m.m11 - m.m22 + 1);
      var s_SINGLEQUOTE_ = 1 / s;
      return new thi.ng.geom.core.quaternion.Quat4(0.25 * s, (m.m10 + m.m01) * s_SINGLEQUOTE_, (m.m20 + m.m02) * s_SINGLEQUOTE_, (m.m12 - m.m21) * s_SINGLEQUOTE_);
    }() : m.m11 > m.m22 ? function() {
      var s = 2 * Math.sqrt.call(null, m.m11 - m.m00 - m.m22 + 1);
      var s_SINGLEQUOTE_ = 1 / s;
      return new thi.ng.geom.core.quaternion.Quat4((m.m10 + m.m01) * s_SINGLEQUOTE_, 0.25 * s, (m.m21 + m.m12) * s_SINGLEQUOTE_, (m.m20 - m.m02) * s_SINGLEQUOTE_);
    }() : function() {
      var s = 2 * Math.sqrt.call(null, m.m22 - m.m00 - m.m11 + 1);
      var s_SINGLEQUOTE_ = 1 / s;
      return new thi.ng.geom.core.quaternion.Quat4((m.m20 + m.m02) * s_SINGLEQUOTE_, (m.m21 + m.m12) * s_SINGLEQUOTE_, 0.25 * s, (m.m10 - m.m01) * s_SINGLEQUOTE_);
    }());
  }
};
thi.ng.geom.core.quaternion.alignment_quat = function alignment_quat(a, b) {
  var d = thi.ng.geom.core.dot.call(null, a, b);
  if (d < -0.999999) {
    var c = thi.ng.geom.core.cross.call(null, thi.ng.geom.core.vector.V3X, a);
    var c__$1 = thi.ng.geom.core.mag.call(null, c) < 1E-6 ? thi.ng.geom.core.cross.call(null, thi.ng.geom.core.vector.V3Y, a) : c;
    return thi.ng.geom.core.quaternion.quat_from_axis_angle.call(null, c__$1, thi.ng.common.math.core.PI);
  } else {
    if (d > 0.999999) {
      return thi.ng.geom.core.quaternion.quat.call(null);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.quaternion.quat.call(null, thi.ng.geom.core.cross.call(null, a, b), d + 1));
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.core.quaternion.lookup4 = function lookup4(_, k, nf) {
  var G__8260 = k;
  if (cljs.core._EQ_.call(null, "w", G__8260)) {
    return _.w;
  } else {
    if (cljs.core._EQ_.call(null, "z", G__8260)) {
      return _.z;
    } else {
      if (cljs.core._EQ_.call(null, "y", G__8260)) {
        return _.y;
      } else {
        if (cljs.core._EQ_.call(null, "x", G__8260)) {
          return _.x;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var or__3481__auto__ = nf;
            if (cljs.core.truth_(or__3481__auto__)) {
              return or__3481__auto__;
            } else {
              return thi.ng.common.error.key_error_BANG_.call(null, k);
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
thi.ng.geom.core.quaternion.swizzle4 = function swizzle4(_, k, default$) {
  if (typeof k === "number") {
    var G__8264 = k | 0;
    if (cljs.core._EQ_.call(null, 3, G__8264)) {
      return _.w;
    } else {
      if (cljs.core._EQ_.call(null, 2, G__8264)) {
        return _.z;
      } else {
        if (cljs.core._EQ_.call(null, 1, G__8264)) {
          return _.y;
        } else {
          if (cljs.core._EQ_.call(null, 0, G__8264)) {
            return _.x;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              var or__3481__auto__ = default$;
              if (cljs.core.truth_(or__3481__auto__)) {
                return or__3481__auto__;
              } else {
                return thi.ng.common.error.key_error_BANG_.call(null, k);
              }
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    var G__8265 = k;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "w", "w", 1013904361), G__8265)) {
      return _.w;
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "z", "z", 1013904364), G__8265)) {
        return _.z;
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__8265)) {
          return _.y;
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__8265)) {
            return _.x;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              var n = cljs.core.name.call(null, k);
              var c = cljs.core.count.call(null, n);
              var G__8266 = c;
              if (cljs.core._EQ_.call(null, 4, G__8266)) {
                return new thi.ng.geom.core.quaternion.Quat4(thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 1), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 2), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 3), default$));
              } else {
                if (cljs.core._EQ_.call(null, 3, G__8266)) {
                  return new thi.ng.geom.core.vector.Vec3(thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 1), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 2), default$));
                } else {
                  if (cljs.core._EQ_.call(null, 2, G__8266)) {
                    return new thi.ng.geom.core.vector.Vec2(thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 0), default$), thi.ng.geom.core.quaternion.lookup4.call(null, _, cljs.core.nth.call(null, n, 1), default$));
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      var or__3481__auto__ = default$;
                      if (cljs.core.truth_(or__3481__auto__)) {
                        return or__3481__auto__;
                      } else {
                        return thi.ng.common.error.key_error_BANG_.call(null, k);
                      }
                    } else {
                      return null;
                    }
                  }
                }
              }
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
thi.ng.geom.core.quaternion.swizzle4_assoc = function swizzle4_assoc(_, k, v) {
  if (typeof k === "number") {
    var G__8269 = k | 0;
    if (cljs.core._EQ_.call(null, 3, G__8269)) {
      return new thi.ng.geom.core.quaternion.Quat4(_.x, _.y, _.z, v);
    } else {
      if (cljs.core._EQ_.call(null, 2, G__8269)) {
        return new thi.ng.geom.core.quaternion.Quat4(_.x, _.y, v, _.w);
      } else {
        if (cljs.core._EQ_.call(null, 1, G__8269)) {
          return new thi.ng.geom.core.quaternion.Quat4(_.x, v, _.z, _.w);
        } else {
          if (cljs.core._EQ_.call(null, 0, G__8269)) {
            return new thi.ng.geom.core.quaternion.Quat4(v, _.y, _.z, _.w);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return thi.ng.common.error.key_error_BANG_.call(null, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    var G__8270 = k;
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "w", "w", 1013904361), G__8270)) {
      return new thi.ng.geom.core.quaternion.Quat4(_.x, _.y, _.z, v);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "z", "z", 1013904364), G__8270)) {
        return new thi.ng.geom.core.quaternion.Quat4(_.x, _.y, v, _.w);
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "y", "y", 1013904363), G__8270)) {
          return new thi.ng.geom.core.quaternion.Quat4(_.x, v, _.z, _.w);
        } else {
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "x", "x", 1013904362), G__8270)) {
            return new thi.ng.geom.core.quaternion.Quat4(v, _.y, _.z, _.w);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return thi.ng.geom.core.vector.swizzle_assoc_STAR_.call(null, _, thi.ng.geom.core.quaternion.quat, new cljs.core.PersistentArrayMap(null, 4, ["x", 0, "y", 1, "z", 2, "w", 3], null), k, v);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
goog.provide("thi.ng.geom.plane");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.quaternion");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.core.quaternion");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.error");
thi.ng.geom.plane.plane = function plane(n, w) {
  return new thi.ng.geom.types.Plane(thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec3.call(null, n)), w);
};
thi.ng.geom.plane.plane_with_point = function plane_with_point(p, n) {
  var n__$1 = thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.vector.vec3.call(null, n));
  return new thi.ng.geom.types.Plane(n__$1, thi.ng.geom.core.dot.call(null, n__$1, p));
};
thi.ng.geom.plane.plane_from_points = function() {
  var plane_from_points = null;
  var plane_from_points__1 = function(p__8226) {
    var vec__8228 = p__8226;
    var a = cljs.core.nth.call(null, vec__8228, 0, null);
    var b = cljs.core.nth.call(null, vec__8228, 1, null);
    var c = cljs.core.nth.call(null, vec__8228, 2, null);
    return plane_from_points.call(null, a, b, c);
  };
  var plane_from_points__3 = function(a, b, c) {
    var n = thi.ng.geom.core.utils.ortho_normal.call(null, a, b, c);
    return new thi.ng.geom.types.Plane(n, thi.ng.geom.core.dot.call(null, n, a));
  };
  plane_from_points = function(a, b, c) {
    switch(arguments.length) {
      case 1:
        return plane_from_points__1.call(this, a);
      case 3:
        return plane_from_points__3.call(this, a, b, c);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  plane_from_points.cljs$core$IFn$_invoke$arity$1 = plane_from_points__1;
  plane_from_points.cljs$core$IFn$_invoke$arity$3 = plane_from_points__3;
  return plane_from_points;
}();
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PTransform$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PTransform$transform$arity$2 = function(_, m) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, thi.ng.geom.core.transform_vector.call(null, m, thi.ng.geom.core.centroid.call(null, ___$1)), thi.ng.geom.core.transform_vector.call(null, m, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Plane((new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), 0);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(_, o) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, o, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PFlip$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PFlip$flip$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Plane(thi.ng.geom.core._.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1)), -(new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PClassify$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PClassify$classify_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return thi.ng.common.math.core.signum.call(null, thi.ng.geom.core.dot.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), p) - (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1), thi.ng.common.math.core._STAR_eps_STAR_);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(_) {
  var ___$1 = this;
  return 0;
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$intersect_line$arity$2 = function(_, p__8230) {
  var map__8231 = p__8230;
  var map__8231__$1 = cljs.core.seq_QMARK_.call(null, map__8231) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8231) : map__8231;
  var vec__8232 = cljs.core.get.call(null, map__8231__$1, new cljs.core.Keyword(null, "points", "points", 4326117461));
  var p = cljs.core.nth.call(null, vec__8232, 0, null);
  var q = cljs.core.nth.call(null, vec__8232, 1, null);
  var ___$1 = this;
  return thi.ng.geom.core.intersect.intersect_ray_plane_QMARK_.call(null, p, thi.ng.geom.core._.call(null, q, p), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$intersect_line$arity$3 = function(_, p, q) {
  var ___$1 = this;
  return thi.ng.geom.core.intersect.intersect_ray_plane_QMARK_.call(null, p, thi.ng.geom.core._.call(null, q, p), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$intersect_ray$arity$2 = function(_, ray) {
  var ___$1 = this;
  return thi.ng.geom.core.intersect.intersect_ray_plane_QMARK_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(ray), (new cljs.core.Keyword(null, "dir", "dir", 1014003711)).cljs$core$IFn$_invoke$arity$1(ray), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$intersect_ray$arity$3 = function(_, p, dir) {
  var ___$1 = this;
  return thi.ng.geom.core.intersect.intersect_ray_plane_QMARK_.call(null, p, dir, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PIntersect$intersect_shape$arity$2 = function(_, s) {
  var ___$1 = this;
  if (s instanceof thi.ng.geom.types.Plane) {
    return thi.ng.geom.core.intersect.intersect_plane_plane_QMARK_.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(s), (new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(s));
  } else {
    if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
      return thi.ng.common.error.illegal_arg_BANG_.call(null, s);
    } else {
      return null;
    }
  }
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PDistance$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PDistance$dist$arity$2 = function(_, p) {
  var ___$1 = this;
  return-(new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1) + thi.ng.geom.core.dot.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), p);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PDistance$dist_squared$arity$2 = function(_, p) {
  var ___$1 = this;
  var d = thi.ng.geom.core.dist.call(null, ___$1, p);
  return d * d;
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, thi.ng.geom.core._PLUS_.call(null, thi.ng.geom.core.centroid.call(null, ___$1), t), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.centroid.call(null, ___$1), thi.ng.common.math.core.INF_PLUS_);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, thi.ng.geom.core._STAR_.call(null, thi.ng.geom.core.centroid.call(null, ___$1), s), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PScale$scale$arity$3 = function(_, a, b) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, thi.ng.geom.core._STAR_.call(null, thi.ng.geom.core.centroid.call(null, ___$1), a, b), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PScale$scale$arity$4 = function(_, a, b, c) {
  var ___$1 = this;
  return thi.ng.geom.plane.plane_with_point.call(null, thi.ng.geom.core._STAR_.call(null, thi.ng.geom.core.centroid.call(null, ___$1), a, b, c), (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PScale$scale_size$arity$2 = function(_, s) {
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  var s = thi.ng.geom.core.vector.vec3.call(null, thi.ng.geom.core.width.call(null, ___$1), thi.ng.geom.core.height.call(null, ___$1), thi.ng.geom.core.depth.call(null, ___$1));
  return new thi.ng.geom.types.AABB(thi.ng.geom.core.madd.call(null, s, -0.5, thi.ng.geom.core.centroid.call(null, ___$1)), s);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  if (thi.ng.common.math.core.delta_EQ_.call(null, thi.ng.geom.core.abs.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1)), thi.ng.geom.core.vector.V3X, thi.ng.common.math.core._STAR_eps_STAR_)) {
    return 0;
  } else {
    return thi.ng.common.math.core.INF_PLUS_;
  }
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  if (thi.ng.common.math.core.delta_EQ_.call(null, thi.ng.geom.core.abs.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1)), thi.ng.geom.core.vector.V3Y, thi.ng.common.math.core._STAR_eps_STAR_)) {
    return 0;
  } else {
    return thi.ng.common.math.core.INF_PLUS_;
  }
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  if (thi.ng.common.math.core.delta_EQ_.call(null, thi.ng.geom.core.abs.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1)), thi.ng.geom.core.vector.V3Z, thi.ng.common.math.core._STAR_eps_STAR_)) {
    return 0;
  } else {
    return thi.ng.common.math.core.INF_PLUS_;
  }
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.as_mesh.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(_, p__8233) {
  var map__8234 = p__8233;
  var map__8234__$1 = cljs.core.seq_QMARK_.call(null, map__8234) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8234) : map__8234;
  var mesh = cljs.core.get.call(null, map__8234__$1, new cljs.core.Keyword(null, "mesh", "mesh", 1017252191));
  var size = cljs.core.get.call(null, map__8234__$1, new cljs.core.Keyword(null, "size", "size", 1017434995), 1);
  var height = cljs.core.get.call(null, map__8234__$1, new cljs.core.Keyword(null, "height", "height", 4087841945));
  var width = cljs.core.get.call(null, map__8234__$1, new cljs.core.Keyword(null, "width", "width", 1127031096));
  var p = cljs.core.get.call(null, map__8234__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var ___$1 = this;
  var w = function() {
    var or__3481__auto__ = width;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return size;
    }
  }() * 0.5;
  var h = function() {
    var or__3481__auto__ = height;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return size;
    }
  }() * 0.5;
  var flip_QMARK_ = thi.ng.common.math.core.delta_EQ_.call(null, -1, thi.ng.geom.core.dot.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), thi.ng.geom.core.vector.V3Z));
  var p__$1 = thi.ng.geom.core.closest_point.call(null, ___$1, function() {
    var or__3481__auto__ = p;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.core.vector.vec3.call(null);
    }
  }());
  var q = flip_QMARK_ ? thi.ng.geom.core.quaternion.quat.call(null, 0, 0, 0, 1) : thi.ng.geom.core.quaternion.alignment_quat.call(null, thi.ng.geom.core.vector.V3Z, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1));
  var vec__8235 = cljs.core.map.call(null, function(w, h, flip_QMARK_, p__$1, q, ___$1, map__8234, map__8234__$1, mesh, size, height, width, p) {
    return function(p1__8229_SHARP_) {
      return thi.ng.geom.core._PLUS_.call(null, p__$1, thi.ng.geom.core.transform_vector.call(null, q, p1__8229_SHARP_));
    };
  }(w, h, flip_QMARK_, p__$1, q, ___$1, map__8234, map__8234__$1, mesh, size, height, width, p), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.core.vector.vec3.call(null, -w, -h, 0), thi.ng.geom.core.vector.vec3.call(null, -w, h, 0), thi.ng.geom.core.vector.vec3.call(null, w, h, 0), thi.ng.geom.core.vector.vec3.call(null, w, -h, 0)], null));
  var a = cljs.core.nth.call(null, vec__8235, 0, null);
  var b = cljs.core.nth.call(null, vec__8235, 1, null);
  var c = cljs.core.nth.call(null, vec__8235, 2, null);
  var d = cljs.core.nth.call(null, vec__8235, 3, null);
  return thi.ng.geom.gmesh.add_face.call(null, function() {
    var or__3481__auto__ = mesh;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.gmesh.gmesh.call(null);
    }
  }(), flip_QMARK_ ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, c, d], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [d, c, b, a], null));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PProximity$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PProximity$closest_point$arity$2 = function(_, p) {
  var ___$1 = this;
  return thi.ng.geom.core._.call(null, p, thi.ng.geom.core.normalize.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), -(new cljs.core.Keyword(null, "w", "w", 1013904361)).cljs$core$IFn$_invoke$arity$1(___$1) + thi.ng.geom.core.dot.call(null, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(___$1), p)));
};
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.Plane.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.common.math.core.INF_PLUS_;
};
goog.provide("thi.ng.geom.mesh.csg");
goog.require("cljs.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.plane");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.data.core");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.types.utils");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.plane");
goog.require("thi.ng.common.data.core");
thi.ng.geom.mesh.csg.CSGPolygon = function(plane, vertices, shared, bsphere) {
  this.plane = plane;
  this.vertices = vertices;
  this.shared = shared;
  this.bsphere = bsphere;
};
thi.ng.geom.mesh.csg.CSGPolygon.cljs$lang$type = true;
thi.ng.geom.mesh.csg.CSGPolygon.cljs$lang$ctorStr = "thi.ng.geom.mesh.csg/CSGPolygon";
thi.ng.geom.mesh.csg.CSGPolygon.cljs$lang$ctorPrWriter = function(this__4048__auto__, writer__4049__auto__, opt__4050__auto__) {
  return cljs.core._write.call(null, writer__4049__auto__, "thi.ng.geom.mesh.csg/CSGPolygon");
};
thi.ng.geom.mesh.csg.CSGPolygon.prototype.thi$ng$geom$core$PFlip$ = true;
thi.ng.geom.mesh.csg.CSGPolygon.prototype.thi$ng$geom$core$PFlip$flip$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new thi.ng.geom.mesh.csg.CSGPolygon(thi.ng.geom.core.flip.call(null, self__.plane), cljs.core.reverse.call(null, self__.vertices), self__.shared, self__.bsphere);
};
thi.ng.geom.mesh.csg.CSGPolygon.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.mesh.csg.CSGPolygon.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.bsphere)) {
    return self__.bsphere;
  } else {
    self__.bsphere = thi.ng.geom.types.utils.bounding_sphere.call(null, self__.vertices);
    return self__.bsphere;
  }
};
thi.ng.geom.mesh.csg.__GT_CSGPolygon = function __GT_CSGPolygon(plane, vertices, shared, bsphere) {
  return new thi.ng.geom.mesh.csg.CSGPolygon(plane, vertices, shared, bsphere);
};
thi.ng.geom.mesh.csg.compute_split_types = function compute_split_types(n, w, vertices) {
  var ieps = -thi.ng.common.math.core._STAR_eps_STAR_;
  var ptype = 0;
  var types = cljs.core.PersistentVector.EMPTY;
  var vertices__$1 = vertices;
  while (true) {
    if (cljs.core.truth_(vertices__$1)) {
      var t = thi.ng.geom.core.dot.call(null, n, cljs.core.first.call(null, vertices__$1)) - w;
      var pt = t < ieps ? 2 : t > thi.ng.common.math.core._STAR_eps_STAR_ ? 1 : 0;
      var G__8189 = ptype | pt;
      var G__8190 = cljs.core.conj.call(null, types, pt);
      var G__8191 = cljs.core.next.call(null, vertices__$1);
      ptype = G__8189;
      types = G__8190;
      vertices__$1 = G__8191;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ptype, types], null);
    }
    break;
  }
};
thi.ng.geom.mesh.csg.split_poly_STAR_ = function split_poly_STAR_(n, w, vertices, types) {
  var nv = cljs.core.count.call(null, vertices);
  var f = cljs.core.PersistentVector.EMPTY;
  var b = cljs.core.PersistentVector.EMPTY;
  var i = 0;
  while (true) {
    if (i < nv) {
      var j = cljs.core.rem.call(null, i + 1, nv);
      var vi = cljs.core.nth.call(null, vertices, i);
      var ti = types.call(null, i);
      var f__$1 = ti === 2 ? f : cljs.core.conj.call(null, f, vi);
      var b__$1 = ti === 1 ? b : cljs.core.conj.call(null, b, vi);
      if (3 === (ti | types.call(null, j))) {
        var vj = cljs.core.nth.call(null, vertices, j);
        var v = thi.ng.geom.core.mix.call(null, vi, vj, (w - thi.ng.geom.core.dot.call(null, n, vi)) / thi.ng.geom.core.dot.call(null, n, thi.ng.geom.core._.call(null, vj, vi)));
        var G__8192 = cljs.core.conj.call(null, f__$1, v);
        var G__8193 = cljs.core.conj.call(null, b__$1, v);
        var G__8194 = i + 1;
        f = G__8192;
        b = G__8193;
        i = G__8194;
        continue;
      } else {
        var G__8195 = f__$1;
        var G__8196 = b__$1;
        var G__8197 = i + 1;
        f = G__8195;
        b = G__8196;
        i = G__8197;
        continue;
      }
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, b], null);
    }
    break;
  }
};
thi.ng.geom.mesh.csg.split_poly = function split_poly(p__8198, poly, state) {
  var map__8203 = p__8198;
  var map__8203__$1 = cljs.core.seq_QMARK_.call(null, map__8203) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8203) : map__8203;
  var w = cljs.core.get.call(null, map__8203__$1, new cljs.core.Keyword(null, "w", "w", 1013904361));
  var n = cljs.core.get.call(null, map__8203__$1, new cljs.core.Keyword(null, "n", "n", 1013904352));
  var s = thi.ng.geom.core.bounding_sphere.call(null, poly);
  var r = (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(s) + thi.ng.common.math.core._STAR_eps_STAR_;
  var d = thi.ng.geom.core.dot.call(null, n, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(s)) - w;
  if (d > r) {
    return cljs.core.assoc.call(null, state, 2, cljs.core.conj.call(null, state.call(null, 2), poly));
  } else {
    if (d < -r) {
      return cljs.core.assoc.call(null, state, 3, cljs.core.conj.call(null, state.call(null, 3), poly));
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        var vec__8204 = thi.ng.geom.mesh.csg.compute_split_types.call(null, n, w, poly.vertices);
        var ptype = cljs.core.nth.call(null, vec__8204, 0, null);
        var types = cljs.core.nth.call(null, vec__8204, 1, null);
        var G__8205 = ptype;
        if (cljs.core._EQ_.call(null, 3, G__8205)) {
          var vec__8206 = thi.ng.geom.mesh.csg.split_poly_STAR_.call(null, n, w, poly.vertices, types);
          var f = cljs.core.nth.call(null, vec__8206, 0, null);
          var b = cljs.core.nth.call(null, vec__8206, 1, null);
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [state.call(null, 0), state.call(null, 1), cljs.core.count.call(null, f) >= 3 ? cljs.core.conj.call(null, state.call(null, 2), thi.ng.geom.mesh.csg.csg_polygon.call(null, f, poly.shared)) : f, cljs.core.count.call(null, b) >= 3 ? cljs.core.conj.call(null, state.call(null, 3), thi.ng.geom.mesh.csg.csg_polygon.call(null, b, poly.shared)) : b], null);
        } else {
          if (cljs.core._EQ_.call(null, 2, G__8205)) {
            return cljs.core.assoc.call(null, state, 3, cljs.core.conj.call(null, state.call(null, 3), poly));
          } else {
            if (cljs.core._EQ_.call(null, 1, G__8205)) {
              return cljs.core.assoc.call(null, state, 2, cljs.core.conj.call(null, state.call(null, 2), poly));
            } else {
              if (cljs.core._EQ_.call(null, 0, G__8205)) {
                if (thi.ng.geom.core.dot.call(null, n, (new cljs.core.Keyword(null, "n", "n", 1013904352)).cljs$core$IFn$_invoke$arity$1(poly.plane)) > 0) {
                  return cljs.core.assoc.call(null, state, 0, cljs.core.conj.call(null, state.call(null, 0), poly));
                } else {
                  return cljs.core.assoc.call(null, state, 1, cljs.core.conj.call(null, state.call(null, 1), poly));
                }
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(ptype)].join(""));
                } else {
                  return null;
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.mesh.csg.clip_polygons = function clip_polygons(p__8207, ps) {
  var map__8210 = p__8207;
  var map__8210__$1 = cljs.core.seq_QMARK_.call(null, map__8210) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8210) : map__8210;
  var node = map__8210__$1;
  var back = cljs.core.get.call(null, map__8210__$1, new cljs.core.Keyword(null, "back", "back", 1016920153));
  var front = cljs.core.get.call(null, map__8210__$1, new cljs.core.Keyword(null, "front", "front", 1111609755));
  var plane = cljs.core.get.call(null, map__8210__$1, new cljs.core.Keyword(null, "plane", "plane", 1120652750));
  if (cljs.core.not.call(null, plane)) {
    return ps;
  } else {
    var vec__8211 = cljs.core.reduce.call(null, function(map__8210, map__8210__$1, node, back, front, plane) {
      return function(state, poly) {
        return thi.ng.geom.mesh.csg.split_poly.call(null, plane, poly, state);
      };
    }(map__8210, map__8210__$1, node, back, front, plane), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY], null), ps);
    var cp_front = cljs.core.nth.call(null, vec__8211, 0, null);
    var cp_back = cljs.core.nth.call(null, vec__8211, 1, null);
    var new_front = cljs.core.nth.call(null, vec__8211, 2, null);
    var new_back = cljs.core.nth.call(null, vec__8211, 3, null);
    var new_front__$1 = cljs.core.concat.call(null, new_front, cp_front);
    var new_front__$2 = cljs.core.truth_(front) ? clip_polygons.call(null, front, new_front__$1) : new_front__$1;
    var new_back__$1 = cljs.core.truth_(back) ? clip_polygons.call(null, back, cljs.core.concat.call(null, new_back, cp_back)) : cljs.core.PersistentVector.EMPTY;
    return cljs.core.concat.call(null, new_front__$2, new_back__$1);
  }
};
thi.ng.geom.mesh.csg.all_polygons = function all_polygons(p__8212) {
  var map__8214 = p__8212;
  var map__8214__$1 = cljs.core.seq_QMARK_.call(null, map__8214) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8214) : map__8214;
  var node = map__8214__$1;
  var back = cljs.core.get.call(null, map__8214__$1, new cljs.core.Keyword(null, "back", "back", 1016920153));
  var front = cljs.core.get.call(null, map__8214__$1, new cljs.core.Keyword(null, "front", "front", 1111609755));
  return cljs.core.concat.call(null, (new cljs.core.Keyword(null, "polygons", "polygons", 1575699947)).cljs$core$IFn$_invoke$arity$1(node), cljs.core.truth_(front) ? all_polygons.call(null, front) : null, cljs.core.truth_(back) ? all_polygons.call(null, back) : null);
};
thi.ng.geom.mesh.csg.invert = function invert(p__8215) {
  var map__8217 = p__8215;
  var map__8217__$1 = cljs.core.seq_QMARK_.call(null, map__8217) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8217) : map__8217;
  var node = map__8217__$1;
  var plane = cljs.core.get.call(null, map__8217__$1, new cljs.core.Keyword(null, "plane", "plane", 1120652750));
  var back = cljs.core.get.call(null, map__8217__$1, new cljs.core.Keyword(null, "back", "back", 1016920153));
  var front = cljs.core.get.call(null, map__8217__$1, new cljs.core.Keyword(null, "front", "front", 1111609755));
  return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "polygons", "polygons", 1575699947), cljs.core.mapv.call(null, thi.ng.geom.core.flip, (new cljs.core.Keyword(null, "polygons", "polygons", 1575699947)).cljs$core$IFn$_invoke$arity$1(node)), new cljs.core.Keyword(null, "plane", "plane", 1120652750), cljs.core.truth_(plane) ? thi.ng.geom.core.flip.call(null, plane) : null, new cljs.core.Keyword(null, "front", "front", 1111609755), cljs.core.truth_(back) ? invert.call(null, back) : 
  null, new cljs.core.Keyword(null, "back", "back", 1016920153), cljs.core.truth_(front) ? invert.call(null, front) : null);
};
thi.ng.geom.mesh.csg.clip = function clip(p__8218, b) {
  var map__8220 = p__8218;
  var map__8220__$1 = cljs.core.seq_QMARK_.call(null, map__8220) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8220) : map__8220;
  var a = map__8220__$1;
  var back = cljs.core.get.call(null, map__8220__$1, new cljs.core.Keyword(null, "back", "back", 1016920153));
  var front = cljs.core.get.call(null, map__8220__$1, new cljs.core.Keyword(null, "front", "front", 1111609755));
  return cljs.core.assoc.call(null, a, new cljs.core.Keyword(null, "polygons", "polygons", 1575699947), thi.ng.geom.mesh.csg.clip_polygons.call(null, b, (new cljs.core.Keyword(null, "polygons", "polygons", 1575699947)).cljs$core$IFn$_invoke$arity$1(a)), new cljs.core.Keyword(null, "front", "front", 1111609755), cljs.core.truth_(front) ? clip.call(null, front, b) : null, new cljs.core.Keyword(null, "back", "back", 1016920153), cljs.core.truth_(back) ? clip.call(null, back, b) : null);
};
thi.ng.geom.mesh.csg.csg_polygon = function() {
  var csg_polygon = null;
  var csg_polygon__1 = function(vertices) {
    return csg_polygon.call(null, vertices, null);
  };
  var csg_polygon__2 = function(vertices, shared) {
    return new thi.ng.geom.mesh.csg.CSGPolygon(thi.ng.geom.plane.plane_from_points.call(null, vertices), cljs.core.vec.call(null, vertices), shared, null);
  };
  csg_polygon = function(vertices, shared) {
    switch(arguments.length) {
      case 1:
        return csg_polygon__1.call(this, vertices);
      case 2:
        return csg_polygon__2.call(this, vertices, shared);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  csg_polygon.cljs$core$IFn$_invoke$arity$1 = csg_polygon__1;
  csg_polygon.cljs$core$IFn$_invoke$arity$2 = csg_polygon__2;
  return csg_polygon;
}();
thi.ng.geom.mesh.csg.csg_node = function() {
  var csg_node = null;
  var csg_node__1 = function(polygons) {
    return csg_node.call(null, null, polygons);
  };
  var csg_node__2 = function(p__8221, ps) {
    var map__8224 = p__8221;
    var map__8224__$1 = cljs.core.seq_QMARK_.call(null, map__8224) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8224) : map__8224;
    var node = map__8224__$1;
    var back = cljs.core.get.call(null, map__8224__$1, new cljs.core.Keyword(null, "back", "back", 1016920153));
    var front = cljs.core.get.call(null, map__8224__$1, new cljs.core.Keyword(null, "front", "front", 1111609755));
    var plane = cljs.core.get.call(null, map__8224__$1, new cljs.core.Keyword(null, "plane", "plane", 1120652750));
    var polygons = cljs.core.get.call(null, map__8224__$1, new cljs.core.Keyword(null, "polygons", "polygons", 1575699947));
    if (cljs.core.seq.call(null, ps)) {
      var plane__$1 = function() {
        var or__3481__auto__ = plane;
        if (cljs.core.truth_(or__3481__auto__)) {
          return or__3481__auto__;
        } else {
          return cljs.core.first.call(null, ps).plane;
        }
      }();
      var vec__8225 = cljs.core.reduce.call(null, function(plane__$1, map__8224, map__8224__$1, node, back, front, plane, polygons) {
        return function(state, poly) {
          return thi.ng.geom.mesh.csg.split_poly.call(null, plane__$1, poly, state);
        };
      }(plane__$1, map__8224, map__8224__$1, node, back, front, plane, polygons), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY, cljs.core.PersistentVector.EMPTY], null), ps);
      var cp_front = cljs.core.nth.call(null, vec__8225, 0, null);
      var cp_back = cljs.core.nth.call(null, vec__8225, 1, null);
      var new_front = cljs.core.nth.call(null, vec__8225, 2, null);
      var new_back = cljs.core.nth.call(null, vec__8225, 3, null);
      return cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "plane", "plane", 1120652750), plane__$1, new cljs.core.Keyword(null, "polygons", "polygons", 1575699947), cljs.core.concat.call(null, polygons, cp_front, cp_back), new cljs.core.Keyword(null, "front", "front", 1111609755), cljs.core.seq.call(null, new_front) ? csg_node.call(null, front, new_front) : front, new cljs.core.Keyword(null, "back", "back", 1016920153), cljs.core.seq.call(null, new_back) ? csg_node.call(null, back, 
      new_back) : back);
    } else {
      return node;
    }
  };
  csg_node = function(p__8221, ps) {
    switch(arguments.length) {
      case 1:
        return csg_node__1.call(this, p__8221);
      case 2:
        return csg_node__2.call(this, p__8221, ps);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  csg_node.cljs$core$IFn$_invoke$arity$1 = csg_node__1;
  csg_node.cljs$core$IFn$_invoke$arity$2 = csg_node__2;
  return csg_node;
}();
thi.ng.geom.mesh.csg.union = function union(a, b) {
  var a__$1 = thi.ng.geom.mesh.csg.csg_node.call(null, a);
  var b__$1 = thi.ng.geom.mesh.csg.csg_node.call(null, b);
  var a__$2 = thi.ng.geom.mesh.csg.clip.call(null, a__$1, b__$1);
  var b__$2 = thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.clip.call(null, thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.clip.call(null, b__$1, a__$2)), a__$2));
  return thi.ng.geom.mesh.csg.all_polygons.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, a__$2, thi.ng.geom.mesh.csg.all_polygons.call(null, b__$2)));
};
thi.ng.geom.mesh.csg.subtract = function subtract(a, b) {
  var b__$1 = thi.ng.geom.mesh.csg.csg_node.call(null, b);
  var a__$1 = thi.ng.geom.mesh.csg.clip.call(null, thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, a)), b__$1);
  var b__$2 = thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.clip.call(null, thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.clip.call(null, b__$1, a__$1)), a__$1));
  return thi.ng.geom.mesh.csg.all_polygons.call(null, thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, a__$1, thi.ng.geom.mesh.csg.all_polygons.call(null, b__$2))));
};
thi.ng.geom.mesh.csg.intersect = function intersect(a, b) {
  var a__$1 = thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, a));
  var b__$1 = thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.clip.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, b), a__$1));
  var a__$2 = thi.ng.geom.mesh.csg.clip.call(null, a__$1, b__$1);
  var b__$2 = thi.ng.geom.mesh.csg.clip.call(null, b__$1, a__$2);
  return thi.ng.geom.mesh.csg.all_polygons.call(null, thi.ng.geom.mesh.csg.invert.call(null, thi.ng.geom.mesh.csg.csg_node.call(null, a__$2, thi.ng.geom.mesh.csg.all_polygons.call(null, b__$2))));
};
thi.ng.geom.mesh.csg.mesh__GT_csg = function mesh__GT_csg(m) {
  return cljs.core.map.call(null, function(f) {
    return thi.ng.geom.mesh.csg.csg_polygon.call(null, f, null);
  }, thi.ng.geom.core.faces.call(null, m));
};
thi.ng.geom.mesh.csg.csg__GT_mesh = function csg__GT_mesh(polygons) {
  return thi.ng.geom.core.into.call(null, thi.ng.geom.gmesh.gmesh.call(null), cljs.core.map.call(null, function(poly) {
    return poly.vertices;
  }, polygons));
};
thi.ng.geom.mesh.csg.csg_cone = function() {
  var csg_cone = null;
  var csg_cone__4 = function(s, e, radius, res) {
    return csg_cone.call(null, s, e, radius, radius, res);
  };
  var csg_cone__5 = function(s, e, r_south, r_north, res) {
    var dir = thi.ng.geom.core._.call(null, e, s);
    var az = thi.ng.geom.core.normalize.call(null, dir);
    var ax = thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.cross.call(null, thi.ng.common.math.core.abs.call(null, az.call(null, 1)) > 0.5 ? thi.ng.geom.core.vector.V3X : thi.ng.geom.core.vector.V3Y, az));
    var ay = thi.ng.geom.core.normalize.call(null, thi.ng.geom.core.cross.call(null, ax, az));
    var f = function(dir, az, ax, ay) {
      return function(stack, i, r) {
        var theta = thi.ng.common.math.core.TWO_PI * i;
        var out = thi.ng.geom.core.madd.call(null, ax, Math.cos.call(null, theta), thi.ng.geom.core._STAR_.call(null, ay, Math.sin.call(null, theta)));
        var pos = thi.ng.geom.core._PLUS_.call(null, s, thi.ng.geom.core._STAR_.call(null, dir, stack), thi.ng.geom.core._STAR_.call(null, out, r));
        return pos;
      };
    }(dir, az, ax, ay);
    var res__$1 = 1 / res;
    return cljs.core.mapcat.call(null, function(dir, az, ax, ay, f, res__$1) {
      return function(i) {
        var t0 = i * res__$1;
        var t1 = (i + 1) * res__$1;
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.mesh.csg.csg_polygon.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, f.call(null, 0, t0, r_south), f.call(null, 0, t1, r_south)], null)), thi.ng.geom.mesh.csg.csg_polygon.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, 0, t1, r_south), f.call(null, 0, t0, r_south), f.call(null, 1, t0, 
        r_north), f.call(null, 1, t1, r_north)], null)), thi.ng.geom.mesh.csg.csg_polygon.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [e, f.call(null, 1, t1, r_north), f.call(null, 1, t0, r_north)], null))], null);
      };
    }(dir, az, ax, ay, f, res__$1), cljs.core.range.call(null, res__$1));
  };
  csg_cone = function(s, e, r_south, r_north, res) {
    switch(arguments.length) {
      case 4:
        return csg_cone__4.call(this, s, e, r_south, r_north);
      case 5:
        return csg_cone__5.call(this, s, e, r_south, r_north, res);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  csg_cone.cljs$core$IFn$_invoke$arity$4 = csg_cone__4;
  csg_cone.cljs$core$IFn$_invoke$arity$5 = csg_cone__5;
  return csg_cone;
}();
goog.provide("thi.ng.geom.webgl.shaders.phong");
goog.require("cljs.core");
thi.ng.geom.webgl.shaders.phong.shader_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "vs", "vs", 1013908015), "\nvoid main(){\n    vec4 worldPos \x3d model * vec4(position, 1.0);\n    vec4 eyePos \x3d view * worldPos;\n    vEyePos \x3d eyePos.xyz;\n    vNormal \x3d (normalMat * vec4(normal, 0.0)).xyz;\n    vLightPos \x3d (view * vec4(lightPos, 1.0)).xyz;\n    vCol \x3d normal * 0.5 + 0.5;\n    gl_Position \x3d proj * eyePos;\n}", new cljs.core.Keyword(null, "fs", "fs", 
1013907519), "\nvec3 ambientColor \x3d vec3(0.1, 0.1, 0.1);\nvec3 specularColor \x3d vec3(1.0, 1.0, 1.0);\nvec3 diffuseColor \x3d vCol;\n\nfloat phong(vec3 L, vec3 E, vec3 N) {\n  vec3 R \x3d reflect(-L, N);\n  return dot(R, E);\n}\n\nfloat blinnPhong(vec3 L, vec3 E, vec3 N) {\n  vec3 halfVec \x3d normalize(L + E);\n  return dot(halfVec, N);\n}\n\nvoid main() {\n  vec3 L \x3d normalize(vLightPos - vEyePos);\n  vec3 E \x3d normalize(-vEyePos);\n  vec3 N \x3d normalize(vNormal);\n\n  float NdotL \x3d max(0.0, (dot(N, L) + wrap) / (1.0 + wrap));\n  vec3 color \x3d ambientColor + NdotL * diffuseColor;\n\n  float specular \x3d 0.0;\n  if (useBlinnPhong)\n    specular \x3d blinnPhong(L, E, N);\n  else\n    specular \x3d phong(L, E, N);\n\n  color +\x3d max(pow(specular, shininess), 0.0) * specularColor;\n\n  gl_FragColor \x3d vec4(color, 1.0);\n}", 
new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "proj", "proj", 1017353935), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "model", "model", 1117974171), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "normalMat", "normalMat", 
1250485867), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "shininess", "shininess", 2126879672), new cljs.core.Keyword(null, "float", "float", 1111430606), new cljs.core.Keyword(null, "lightPos", "lightPos", 2005850320), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "useBlinnPhong", "useBlinnPhong", 4559010218), new cljs.core.Keyword(null, "bool", "bool", 1016933980), new cljs.core.Keyword(null, "wrap", "wrap", 1017562044), 
new cljs.core.Keyword(null, "float", "float", 1111430606)], null), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "normal", "normal", 4269125721), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761)], null), new cljs.core.Keyword(null, "varying", "varying", 1251174370), new cljs.core.PersistentArrayMap(null, 
4, [new cljs.core.Keyword(null, "vNormal", "vNormal", 704244847), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "vEyePos", "vEyePos", 4750370283), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "vLightPos", "vLightPos", 3539232614), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "vCol", "vCol", 1017487516), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761)], null)], null);
goog.provide("thi.ng.geom.webgl.shaders.shadow");
goog.require("cljs.core");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.buffers");
goog.require("thi.ng.geom.webgl.buffers");
goog.require("thi.ng.geom.webgl.core");
goog.require("thi.ng.geom.webgl.core");
thi.ng.geom.webgl.shaders.shadow.light_pass_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "vs", "vs", 1013908015), "\n  void main() {\n    vWorldPos \x3d model * vec4(position, 1.0);\n    gl_Position \x3d proj * view * vWorldPos;\n  }", new cljs.core.Keyword(null, "fs", "fs", 1013907519), "\n  void main() {\n    vec3 lightPos \x3d (view * vWorldPos).xyz;\n    float depth \x3d clamp(length(lightPos)/10.0, 0.0, 1.0);\n    gl_FragColor \x3d vec4(vec3(depth), 1.0);\n  }", 
new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "proj", "proj", 1017353935), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "model", "model", 1117974171), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326)], null), new cljs.core.Keyword(null, "attribs", "attribs", 
4634025563), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761)], null), new cljs.core.Keyword(null, "varying", "varying", 1251174370), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "vWorldPos", "vWorldPos", 2583502698), new cljs.core.Keyword(null, "vec4", "vec4", 1017519762)], null)], null);
thi.ng.geom.webgl.shaders.shadow.cam_pass_spec = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "vs", "vs", 1013908015), "\n  void main(){\n    vNormal \x3d normal;\n    vWorldPos \x3d model * vec4(position, 1.0);\n    gl_Position \x3d proj * view * vWorldPos;\n  }", new cljs.core.Keyword(null, "fs", "fs", 1013907519), "\n  float attenuation(vec3 dir) {\n    float dist \x3d length(dir);\n    float radiance \x3d 1.0/(1.0+pow(dist/10.0, 2.0));\n    return clamp(radiance*10.0, 0.0, 1.0);\n  }\n  \n  float influence(vec3 normal, float coneAngle) {\n    float minConeAngle \x3d (360.0-coneAngle-10.0) * RAD;\n    float maxConeAngle \x3d (360.0-coneAngle) * RAD;\n    return smoothstep(minConeAngle, maxConeAngle, acos(normal.z));\n  }\n  \n  float lambert(vec3 surfaceNormal, vec3 lightDirNormal) {\n    return max(0.0, dot(surfaceNormal, lightDirNormal));\n  }\n  \n  vec3 skyLight(vec3 normal) {\n    return vec3(smoothstep(0.0, PI, PI-acos(normal.y)))*0.4;\n  }\n  \n  vec3 gamma(vec3 color) {\n    return pow(color, vec3(2.2));\n  }\n  \n  float texture2DCompare(sampler2D depths, vec2 uv, float compare) {\n    float depth \x3d texture2D(depths, uv).r;\n    return step(compare, depth);\n  }\n  \n  float texture2DShadowLerp(sampler2D depths, vec2 size, vec2 uv, float compare) {\n    vec2 texelSize \x3d vec2(1.0)/size;\n    vec2 f \x3d fract(uv * size + 0.5);\n    vec2 centroidUV \x3d floor(uv * size + 0.5) / size;\n  \n    float lb \x3d texture2DCompare(depths, centroidUV + texelSize * vec2(0.0, 0.0), compare);\n    float lt \x3d texture2DCompare(depths, centroidUV + texelSize * vec2(0.0, 1.0), compare);\n    float rb \x3d texture2DCompare(depths, centroidUV + texelSize * vec2(1.0, 0.0), compare);\n    float rt \x3d texture2DCompare(depths, centroidUV + texelSize * vec2(1.0, 1.0), compare);\n    return mix(mix(lb, lt, f.y), mix(rb, rt, f.y), f.x);\n  }\n  \n  void main() {\n    vec3 worldNormal \x3d normalize(vNormal);\n  \n    vec3 camPos \x3d (view * vWorldPos).xyz;\n    vec3 lightPos \x3d (lightView * vWorldPos).xyz;\n    vec3 lightPosNormal \x3d normalize(lightPos);\n    vec3 lightSurfaceNormal \x3d lightRot * worldNormal;\n  \n    vec4 lightDevice \x3d lightProj * vec4(lightPos, 1.0);\n    vec2 lightDeviceNormal \x3d lightDevice.xy/lightDevice.w;\n    vec2 lightUV \x3d lightDeviceNormal*0.5+0.5;\n  \n    // shadow calculation\n    float bias \x3d 1e-4;\n    float lightDepth2 \x3d clamp(length(lightPos)/10.0, 0.0, 1.0)-bias;\n    float illuminated \x3d texture2DShadowLerp(lightDepthTex, lightDepthSize, lightUV, lightDepth2);\n  \n    vec3 excident \x3d (\n                     skyLight(worldNormal) +\n                     lambert(lightSurfaceNormal, -lightPosNormal) *\n                     influence(lightPosNormal, coneAngle) *\n                     attenuation(lightPos) *\n                     illuminated\n                     );\n  \n    excident *\x3d  worldNormal * 0.5 + 0.5; // TODO remove, debug only\n  \n    gl_FragColor \x3d vec4(gamma(excident), 1.0);\n  }", 
new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "lightView", "lightView", 1699634253), new cljs.core.Keyword(null, "lightRot", "lightRot", 2005852243), new cljs.core.Keyword(null, "lightDepthTex", "lightDepthTex", 2496002316), new cljs.core.Keyword(null, "proj", "proj", 1017353935), new cljs.core.Keyword(null, "coneAngle", "coneAngle", 4439067362), new cljs.core.Keyword(null, "lightDepthSize", "lightDepthSize", 4009245792), 
new cljs.core.Keyword(null, "lightProj", "lightProj", 1699464453), new cljs.core.Keyword(null, "view", "view", 1017523735), new cljs.core.Keyword(null, "model", "model", 1117974171)], [new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "mat3", "mat3", 1017248325), new cljs.core.Keyword(null, "sampler2D", "sampler2D", 2126927820), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "float", "float", 1111430606), new cljs.core.Keyword(null, 
"vec2", "vec2", 1017519760), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326), new cljs.core.Keyword(null, "mat4", "mat4", 1017248326)]), new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "normal", "normal", 4269125721), new cljs.core.Keyword(null, 
"vec3", "vec3", 1017519761)], null), new cljs.core.Keyword(null, "varying", "varying", 1251174370), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "vNormal", "vNormal", 704244847), new cljs.core.Keyword(null, "vec3", "vec3", 1017519761), new cljs.core.Keyword(null, "vWorldPos", "vWorldPos", 2583502698), new cljs.core.Keyword(null, "vec4", "vec4", 1017519762)], null)], null);
thi.ng.geom.webgl.shaders.shadow.init_light_fbo = function init_light_fbo(gl, size) {
  var float_ext = gl["getFloatExtension"].call(gl, cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "require", "require", 2109600983), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["renderable"], null), new cljs.core.Keyword(null, "prefer", "prefer", 4328760706), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["filterable", "half"], null)], null)));
  var tex = thi.ng.geom.webgl.buffers.make_texture2d.call(null, gl, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), float_ext.type, new cljs.core.Keyword(null, "width", "width", 1127031096), size, new cljs.core.Keyword(null, "height", "height", 4087841945), size, new cljs.core.Keyword(null, "filter", "filter", 4034379498), thi.ng.geom.webgl.core.linear, new cljs.core.Keyword(null, "wrap", "wrap", 1017562044), thi.ng.geom.webgl.core.clamp_to_edge], 
  null));
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tex", "tex", 1014018969), tex, new cljs.core.Keyword(null, "fbo", "fbo", 1014005413), thi.ng.geom.webgl.core.unbind.call(null, thi.ng.geom.webgl.core.set_fbo_depth_buffer.call(null, thi.ng.geom.webgl.core.set_fbo_color_texture.call(null, thi.ng.geom.webgl.core.bind.call(null, thi.ng.geom.webgl.buffers.make_fbo.call(null, gl)), tex), thi.ng.geom.webgl.buffers.make_depth_buffer.call(null, gl, size, size)))], null);
};
thi.ng.geom.webgl.shaders.shadow.draw_light_pass = function draw_light_pass(gl, p__6123, draw) {
  var map__6126 = p__6123;
  var map__6126__$1 = cljs.core.seq_QMARK_.call(null, map__6126) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6126) : map__6126;
  var tex = cljs.core.get.call(null, map__6126__$1, new cljs.core.Keyword(null, "tex", "tex", 1014018969));
  var fbo = cljs.core.get.call(null, map__6126__$1, new cljs.core.Keyword(null, "fbo", "fbo", 1014005413));
  thi.ng.geom.webgl.core.bind.call(null, fbo);
  var G__6127_6128 = gl;
  thi.ng.geom.webgl.core.set_viewport.call(null, G__6127_6128, 0, 0, (new cljs.core.Keyword(null, "width", "width", 1127031096)).cljs$core$IFn$_invoke$arity$1(tex), (new cljs.core.Keyword(null, "height", "height", 4087841945)).cljs$core$IFn$_invoke$arity$1(tex));
  thi.ng.geom.webgl.core.clear_color_buffer.call(null, G__6127_6128, 1, 1, 1, 1);
  thi.ng.geom.webgl.core.clear_depth_buffer.call(null, G__6127_6128, 1);
  thi.ng.geom.webgl.core.enable.call(null, G__6127_6128, thi.ng.geom.webgl.core.depth_test);
  thi.ng.geom.webgl.core.cull_faces.call(null, G__6127_6128, thi.ng.geom.webgl.core.front);
  draw.call(null);
  return thi.ng.geom.webgl.core.unbind.call(null, fbo);
};
thi.ng.geom.webgl.shaders.shadow.draw_cam_pass = function draw_cam_pass(gl, tex, draw) {
  var G__6130_6131 = gl;
  thi.ng.geom.webgl.core.clear_depth_buffer.call(null, G__6130_6131, 1);
  thi.ng.geom.webgl.core.enable.call(null, G__6130_6131, thi.ng.geom.webgl.core.depth_test);
  thi.ng.geom.webgl.core.cull_faces.call(null, G__6130_6131, thi.ng.geom.webgl.core.back);
  thi.ng.geom.webgl.core.bind.call(null, tex, 0);
  return draw.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "lightDepthTex", "lightDepthTex", 2496002316), 0, new cljs.core.Keyword(null, "lightDepthSize", "lightDepthSize", 4009245792), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "width", "width", 1127031096)).cljs$core$IFn$_invoke$arity$1(tex), (new cljs.core.Keyword(null, "height", "height", 4087841945)).cljs$core$IFn$_invoke$arity$1(tex)], 
  null)], null));
};
goog.provide("thi.ng.geom.sphere");
goog.require("cljs.core");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.core.utils");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.core.intersect");
goog.require("thi.ng.common.error");
thi.ng.geom.sphere.sphere = function() {
  var sphere = null;
  var sphere__0 = function() {
    return new thi.ng.geom.types.Sphere(thi.ng.geom.core.vector.vec3.call(null), 1);
  };
  var sphere__1 = function(r) {
    return new thi.ng.geom.types.Sphere(thi.ng.geom.core.vector.vec3.call(null), r);
  };
  var sphere__2 = function(p, r) {
    return new thi.ng.geom.types.Sphere(thi.ng.geom.core.vector.vec3.call(null, p), r);
  };
  sphere = function(p, r) {
    switch(arguments.length) {
      case 0:
        return sphere__0.call(this);
      case 1:
        return sphere__1.call(this, p);
      case 2:
        return sphere__2.call(this, p, r);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sphere.cljs$core$IFn$_invoke$arity$0 = sphere__0;
  sphere.cljs$core$IFn$_invoke$arity$1 = sphere__1;
  sphere.cljs$core$IFn$_invoke$arity$2 = sphere__2;
  return sphere;
}();
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate$rotate$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.rotate_z.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), theta), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate3D$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate3D$rotate_x$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.rotate_x.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), theta), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate3D$rotate_y$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.rotate_y.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), theta), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate3D$rotate_z$arity$2 = function(_, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.rotate_z.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), theta), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PRotate3D$rotate_around_axis$arity$3 = function(_, axis, theta) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.rotate_around_axis.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), axis, theta), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PCenter$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PCenter$center$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.vector.vec3.call(null), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PCenter$center$arity$2 = function(_, p) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core.vector.vec3.call(null, p), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PCenter$centroid$arity$1 = function(_) {
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PSample$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PSample$random_point_inside$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), thi.ng.geom.core.vector.randvec3.call(null, thi.ng.common.math.core.random.call(null, (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1))));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PSample$random_point$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), thi.ng.geom.core.vector.randvec3.call(null, (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PClassify$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PClassify$classify_point$arity$2 = function(p__8271, q) {
  var map__8272 = p__8271;
  var map__8272__$1 = cljs.core.seq_QMARK_.call(null, map__8272) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8272) : map__8272;
  var p = cljs.core.get.call(null, map__8272__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r = cljs.core.get.call(null, map__8272__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8273 = this;
  var map__8273__$1 = cljs.core.seq_QMARK_.call(null, map__8273) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8273) : map__8273;
  var p__$1 = cljs.core.get.call(null, map__8273__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r__$1 = cljs.core.get.call(null, map__8273__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  return thi.ng.common.math.core.signum.call(null, r__$1 * r__$1 - thi.ng.geom.core.dist_squared.call(null, p__$1, q), thi.ng.common.math.core._STAR_eps_STAR_);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PVolume$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PVolume$volume$arity$1 = function(p__8274) {
  var map__8275 = p__8274;
  var map__8275__$1 = cljs.core.seq_QMARK_.call(null, map__8275) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8275) : map__8275;
  var r = cljs.core.get.call(null, map__8275__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8276 = this;
  var map__8276__$1 = cljs.core.seq_QMARK_.call(null, map__8276) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8276) : map__8276;
  var r__$1 = cljs.core.get.call(null, map__8276__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  return 4 / 3 * thi.ng.common.math.core.PI * r__$1 * r__$1 * r__$1;
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBoundary$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBoundary$contains_point_QMARK_$arity$2 = function(p__8277, q) {
  var map__8278 = p__8277;
  var map__8278__$1 = cljs.core.seq_QMARK_.call(null, map__8278) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8278) : map__8278;
  var p = cljs.core.get.call(null, map__8278__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r = cljs.core.get.call(null, map__8278__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8279 = this;
  var map__8279__$1 = cljs.core.seq_QMARK_.call(null, map__8279) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8279) : map__8279;
  var p__$1 = cljs.core.get.call(null, map__8279__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r__$1 = cljs.core.get.call(null, map__8279__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  return thi.ng.geom.core.dist_squared.call(null, p__$1, q) <= r__$1 * r__$1;
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PIntersect$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PIntersect$intersect_ray$arity$2 = function(p__8280, ray) {
  var map__8281 = p__8280;
  var map__8281__$1 = cljs.core.seq_QMARK_.call(null, map__8281) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8281) : map__8281;
  var p = cljs.core.get.call(null, map__8281__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r = cljs.core.get.call(null, map__8281__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8282 = this;
  var map__8282__$1 = cljs.core.seq_QMARK_.call(null, map__8282) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8282) : map__8282;
  var p__$1 = cljs.core.get.call(null, map__8282__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r__$1 = cljs.core.get.call(null, map__8282__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var vec__8283 = cljs.core.map_QMARK_.call(null, ray) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(ray), (new cljs.core.Keyword(null, "dir", "dir", 1014003711)).cljs$core$IFn$_invoke$arity$1(ray)], null) : ray;
  var rp = cljs.core.nth.call(null, vec__8283, 0, null);
  var dir = cljs.core.nth.call(null, vec__8283, 1, null);
  return thi.ng.geom.core.intersect.intersect_ray_sphere_QMARK_.call(null, rp, dir, p__$1, r__$1);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PIntersect$intersect_shape$arity$2 = function(_, s) {
  var ___$1 = this;
  if (s instanceof thi.ng.geom.types.AABB) {
    return thi.ng.geom.core.intersect.intersect_aabb_sphere_QMARK_.call(null, s, ___$1);
  } else {
    if (s instanceof thi.ng.geom.types.Sphere) {
      return thi.ng.geom.core.intersect.intersect_sphere_sphere_QMARK_.call(null, ___$1, s);
    } else {
      if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
        return thi.ng.common.error.type_error_BANG_.call(null, "Sphere", s);
      } else {
        return null;
      }
    }
  }
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PTranslate$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PTranslate$translate$arity$2 = function(_, t) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core._PLUS_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), t), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBoundingSphere$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBoundingSphere$bounding_sphere$arity$1 = function(_) {
  var ___$1 = this;
  return ___$1;
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PScale$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PScale$scale$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere(thi.ng.geom.core._STAR_.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), s), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1) * s);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PScale$scale_size$arity$2 = function(_, s) {
  var ___$1 = this;
  return new thi.ng.geom.types.Sphere((new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1) * s);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PTessellate$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.tessellate.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PTessellate$tessellate$arity$2 = function(_, opts) {
  var ___$1 = this;
  return thi.ng.geom.core.tessellate.call(null, thi.ng.geom.core.as_mesh.call(null, ___$1, opts));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBounds$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBounds$bounds$arity$1 = function(_) {
  var ___$1 = this;
  return new thi.ng.geom.types.AABB(thi.ng.geom.core._.call(null, (new cljs.core.Keyword(null, "p", "p", 1013904354)).cljs$core$IFn$_invoke$arity$1(___$1), (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1)), thi.ng.geom.core.vector.vec3.call(null, 2 * (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1)));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBounds$width$arity$1 = function(_) {
  var ___$1 = this;
  return 2 * (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBounds$height$arity$1 = function(_) {
  var ___$1 = this;
  return 2 * (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PBounds$depth$arity$1 = function(_) {
  var ___$1 = this;
  return 2 * (new cljs.core.Keyword(null, "r", "r", 1013904356)).cljs$core$IFn$_invoke$arity$1(___$1);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PMeshConvert$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$1 = function(_) {
  var ___$1 = this;
  return thi.ng.geom.core.as_mesh.call(null, ___$1, cljs.core.PersistentArrayMap.EMPTY);
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PMeshConvert$as_mesh$arity$2 = function(p__8287, p__8288) {
  var map__8289 = p__8287;
  var map__8289__$1 = cljs.core.seq_QMARK_.call(null, map__8289) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8289) : map__8289;
  var vec__8290 = cljs.core.get.call(null, map__8289__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var x = cljs.core.nth.call(null, vec__8290, 0, null);
  var y = cljs.core.nth.call(null, vec__8290, 1, null);
  var z = cljs.core.nth.call(null, vec__8290, 2, null);
  var r = cljs.core.get.call(null, map__8289__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8291 = p__8288;
  var map__8291__$1 = cljs.core.seq_QMARK_.call(null, map__8291) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8291) : map__8291;
  var stacks = cljs.core.get.call(null, map__8291__$1, new cljs.core.Keyword(null, "stacks", "stacks", 4416373341));
  var slices = cljs.core.get.call(null, map__8291__$1, new cljs.core.Keyword(null, "slices", "slices", 4409223315));
  var res = cljs.core.get.call(null, map__8291__$1, new cljs.core.Keyword(null, "res", "res", 1014017042), thi.ng.geom.core._STAR_resolution_STAR_);
  var mesh = cljs.core.get.call(null, map__8291__$1, new cljs.core.Keyword(null, "mesh", "mesh", 1017252191));
  var map__8292 = this;
  var map__8292__$1 = cljs.core.seq_QMARK_.call(null, map__8292) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8292) : map__8292;
  var vec__8293 = cljs.core.get.call(null, map__8292__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var x__$1 = cljs.core.nth.call(null, vec__8293, 0, null);
  var y__$1 = cljs.core.nth.call(null, vec__8293, 1, null);
  var z__$1 = cljs.core.nth.call(null, vec__8293, 2, null);
  var r__$1 = cljs.core.get.call(null, map__8292__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var slices__$1 = function() {
    var or__3481__auto__ = slices;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return res;
    }
  }();
  var stacks__$1 = function() {
    var or__3481__auto__ = stacks;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return res;
    }
  }();
  var range_u = cljs.core.range.call(null, slices__$1);
  var range_v = cljs.core.range.call(null, stacks__$1);
  return thi.ng.geom.core.into.call(null, function() {
    var or__3481__auto__ = mesh;
    if (cljs.core.truth_(or__3481__auto__)) {
      return or__3481__auto__;
    } else {
      return thi.ng.geom.gmesh.gmesh.call(null);
    }
  }(), cljs.core.map.call(null, function(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
    return function(verts) {
      return cljs.core.map.call(null, function(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
        return function(p__8294) {
          var vec__8295 = p__8294;
          var u = cljs.core.nth.call(null, vec__8295, 0, null);
          var v = cljs.core.nth.call(null, vec__8295, 1, null);
          var theta = thi.ng.common.math.core.TWO_PI * u;
          var phi = thi.ng.common.math.core.PI * v;
          var st = Math.sin.call(null, theta);
          var ct = Math.cos.call(null, theta);
          var sp = Math.sin.call(null, phi);
          var cp = Math.cos.call(null, phi);
          return thi.ng.geom.core.vector.vec3.call(null, ct * sp * r__$1 + x__$1, cp * r__$1 + y__$1, st * sp * r__$1 + z__$1);
        };
      }(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh), verts);
    };
  }(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh), function() {
    var iter__4198__auto__ = function(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
      return function iter__8296(s__8297) {
        return new cljs.core.LazySeq(null, function(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
          return function() {
            var s__8297__$1 = s__8297;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__8297__$1);
              if (temp__4126__auto__) {
                var xs__4624__auto__ = temp__4126__auto__;
                var i = cljs.core.first.call(null, xs__4624__auto__);
                var iterys__4194__auto__ = function(s__8297__$1, i, xs__4624__auto__, temp__4126__auto__, slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
                  return function iter__8298(s__8299) {
                    return new cljs.core.LazySeq(null, function(s__8297__$1, i, xs__4624__auto__, temp__4126__auto__, slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh) {
                      return function() {
                        var s__8299__$1 = s__8299;
                        while (true) {
                          var temp__4126__auto____$1 = cljs.core.seq.call(null, s__8299__$1);
                          if (temp__4126__auto____$1) {
                            var s__8299__$2 = temp__4126__auto____$1;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__8299__$2)) {
                              var c__4196__auto__ = cljs.core.chunk_first.call(null, s__8299__$2);
                              var size__4197__auto__ = cljs.core.count.call(null, c__4196__auto__);
                              var b__8301 = cljs.core.chunk_buffer.call(null, size__4197__auto__);
                              if (function() {
                                var i__8300 = 0;
                                while (true) {
                                  if (i__8300 < size__4197__auto__) {
                                    var j = cljs.core._nth.call(null, c__4196__auto__, i__8300);
                                    var u = i / slices__$1;
                                    var v = j / stacks__$1;
                                    var u1 = (i + 1) / slices__$1;
                                    var v1 = (j + 1) / stacks__$1;
                                    var verts = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u, v], null)], null);
                                    var verts__$1 = j > 0 ? cljs.core.conj.call(null, verts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v], null)) : verts;
                                    var verts__$2 = j < stacks__$1 - 1 ? cljs.core.conj.call(null, verts__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1], null)) : verts__$1;
                                    cljs.core.chunk_append.call(null, b__8301, cljs.core.conj.call(null, verts__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u, v1], null)));
                                    var G__8305 = i__8300 + 1;
                                    i__8300 = G__8305;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8301), iter__8298.call(null, cljs.core.chunk_rest.call(null, s__8299__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8301), null);
                              }
                            } else {
                              var j = cljs.core.first.call(null, s__8299__$2);
                              var u = i / slices__$1;
                              var v = j / stacks__$1;
                              var u1 = (i + 1) / slices__$1;
                              var v1 = (j + 1) / stacks__$1;
                              var verts = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u, v], null)], null);
                              var verts__$1 = j > 0 ? cljs.core.conj.call(null, verts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v], null)) : verts;
                              var verts__$2 = j < stacks__$1 - 1 ? cljs.core.conj.call(null, verts__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u1, v1], null)) : verts__$1;
                              return cljs.core.cons.call(null, cljs.core.conj.call(null, verts__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [u, v1], null)), iter__8298.call(null, cljs.core.rest.call(null, s__8299__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(s__8297__$1, i, xs__4624__auto__, temp__4126__auto__, slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh), null, null);
                  };
                }(s__8297__$1, i, xs__4624__auto__, temp__4126__auto__, slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh);
                var fs__4195__auto__ = cljs.core.seq.call(null, iterys__4194__auto__.call(null, range_v));
                if (fs__4195__auto__) {
                  return cljs.core.concat.call(null, fs__4195__auto__, iter__8296.call(null, cljs.core.rest.call(null, s__8297__$1)));
                } else {
                  var G__8306 = cljs.core.rest.call(null, s__8297__$1);
                  s__8297__$1 = G__8306;
                  continue;
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh), null, null);
      };
    }(slices__$1, stacks__$1, range_u, range_v, map__8292, map__8292__$1, vec__8293, x__$1, y__$1, z__$1, r__$1, map__8289, map__8289__$1, vec__8290, x, y, z, r, map__8291, map__8291__$1, stacks, slices, res, mesh);
    return iter__4198__auto__.call(null, range_u);
  }()));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PProximity$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PProximity$closest_point$arity$2 = function(p__8302, q) {
  var map__8303 = p__8302;
  var map__8303__$1 = cljs.core.seq_QMARK_.call(null, map__8303) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8303) : map__8303;
  var p = cljs.core.get.call(null, map__8303__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r = cljs.core.get.call(null, map__8303__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8304 = this;
  var map__8304__$1 = cljs.core.seq_QMARK_.call(null, map__8304) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8304) : map__8304;
  var p__$1 = cljs.core.get.call(null, map__8304__$1, new cljs.core.Keyword(null, "p", "p", 1013904354));
  var r__$1 = cljs.core.get.call(null, map__8304__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  return thi.ng.geom.core._PLUS_.call(null, p__$1, thi.ng.geom.core.normalize.call(null, thi.ng.geom.core._.call(null, q, p__$1), r__$1));
};
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PArea$ = true;
thi.ng.geom.types.Sphere.prototype.thi$ng$geom$core$PArea$area$arity$1 = function(p__8284) {
  var map__8285 = p__8284;
  var map__8285__$1 = cljs.core.seq_QMARK_.call(null, map__8285) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8285) : map__8285;
  var r = cljs.core.get.call(null, map__8285__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  var map__8286 = this;
  var map__8286__$1 = cljs.core.seq_QMARK_.call(null, map__8286) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8286) : map__8286;
  var r__$1 = cljs.core.get.call(null, map__8286__$1, new cljs.core.Keyword(null, "r", "r", 1013904356));
  return 4 * thi.ng.common.math.core.PI * r__$1 * r__$1;
};
goog.provide("thi.ng.geom.webgl.example01");
goog.require("cljs.core");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.shaders.shadow");
goog.require("thi.ng.geom.mesh.csg");
goog.require("thi.ng.geom.aabb");
goog.require("weasel.repl");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.webgl.buffers");
goog.require("thi.ng.geom.webgl.animator");
goog.require("thi.ng.geom.webgl.shaders.spotlight");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.webgl.buffers");
goog.require("thi.ng.geom.webgl.shaders.spotlight");
goog.require("thi.ng.geom.core.vector");
goog.require("thi.ng.geom.mesh.csg");
goog.require("thi.ng.geom.webgl.shaders.phong");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.types");
goog.require("thi.ng.geom.gmesh");
goog.require("thi.ng.common.error");
goog.require("thi.ng.geom.webgl.shaders.shadow");
goog.require("thi.ng.geom.sphere");
goog.require("thi.ng.geom.sphere");
goog.require("thi.ng.geom.webgl.shaders");
goog.require("thi.ng.geom.webgl.shaders.phong");
goog.require("thi.ng.geom.webgl.utils");
goog.require("thi.ng.geom.core");
goog.require("thi.ng.geom.webgl.core");
goog.require("thi.ng.geom.webgl.animator");
goog.require("thi.ng.common.math.core");
goog.require("thi.ng.geom.webgl.arrays");
goog.require("thi.ng.geom.aabb");
goog.require("thi.ng.geom.core.matrix");
goog.require("thi.ng.geom.webgl.core");
goog.require("weasel.repl");
goog.require("thi.ng.common.error");
thi.ng.geom.webgl.example01.ilios = function ilios() {
  var p = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.aabb.aabb.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.6, 0.6, 1.2], null)), thi.ng.geom.core.vector.vec3.call(null, 0, 0, 0.6)));
  var p1 = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.aabb.aabb.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5, 0.5, 1.2], null)), thi.ng.geom.core.vector.vec3.call(null, 0, 0, 0.55)));
  var p2 = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.aabb.aabb.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5, 0.7, 0.5], null)), thi.ng.geom.core.vector.vec3.call(null, 0, 0, 0.3)));
  var p2_STAR_ = thi.ng.geom.core.transform.call(null, p2, thi.ng.geom.core.rotate_z.call(null, thi.ng.geom.core.matrix.M44, thi.ng.common.math.core.HALF_PI));
  var p3 = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.aabb.aabb.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.7, 0.5, 0.7], null)), thi.ng.geom.core.vector.vec3.call(null, 0, 0.3, 0.95)));
  var p3_STAR_ = thi.ng.geom.core.transform.call(null, p3, thi.ng.geom.core.translate.call(null, thi.ng.geom.core.matrix.M44, 0, -0.6, 0));
  return thi.ng.geom.core.transform.call(null, thi.ng.geom.mesh.csg.csg__GT_mesh.call(null, cljs.core.reduce.call(null, thi.ng.geom.mesh.csg.subtract, cljs.core.map.call(null, thi.ng.geom.mesh.csg.mesh__GT_csg, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, p1, p2, p2_STAR_, p3, p3_STAR_], null)))), thi.ng.geom.core.rotate_x.call(null, thi.ng.geom.core.matrix.M44, -thi.ng.common.math.core.HALF_PI));
};
thi.ng.geom.webgl.example01.csg_mesh1 = function csg_mesh1() {
  var ma = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.aabb.aabb.call(null, 1));
  var mb = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.sphere.sphere.call(null, 1), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "res", "res", 1014017042), 10], null));
  var mc = thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.sphere.sphere.call(null, 0.9), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "res", "res", 1014017042), 10], null));
  var mesh = thi.ng.geom.core.transform.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.mesh.csg.csg__GT_mesh.call(null, thi.ng.geom.mesh.csg.subtract.call(null, thi.ng.geom.mesh.csg.intersect.call(null, thi.ng.geom.mesh.csg.mesh__GT_csg.call(null, ma), thi.ng.geom.mesh.csg.mesh__GT_csg.call(null, mb)), thi.ng.geom.mesh.csg.mesh__GT_csg.call(null, mc)))), thi.ng.geom.core.scale.call(null, thi.ng.geom.core.matrix.M44, 0.75));
  return null;
};
thi.ng.geom.webgl.example01.demo = function demo() {
  cljs.core.enable_console_print_BANG_.call(null);
  var gl = thi.ng.geom.webgl.core.gl_context.call(null, "main");
  var light_shader = thi.ng.geom.webgl.shaders.make_shader_from_spec.call(null, gl, thi.ng.geom.webgl.shaders.shadow.light_pass_spec);
  var cam_shader = thi.ng.geom.webgl.shaders.make_shader_from_spec.call(null, gl, thi.ng.geom.webgl.shaders.shadow.cam_pass_spec);
  var mesh = thi.ng.geom.webgl.example01.ilios.call(null);
  var room = thi.ng.geom.core.flip.call(null, thi.ng.geom.core.as_mesh.call(null, thi.ng.geom.core.center.call(null, thi.ng.geom.aabb.aabb.call(null, 5), thi.ng.geom.core.vector.vec3.call(null, 0, 2.4, 0))));
  var mesh__$1 = thi.ng.geom.core.into.call(null, mesh, room);
  var spec = thi.ng.geom.webgl.core.as_webgl_buffer_spec.call(null, mesh__$1, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tessellate", "tessellate", 2361899792), true, new cljs.core.Keyword(null, "fnormals", "fnormals", 519550136), true], null));
  var model = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), thi.ng.geom.webgl.buffers.make_attribute_buffers.call(null, gl, thi.ng.geom.webgl.core.static_draw, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), (new cljs.core.Keyword(null, "vertices", "vertices", 3324730219)).cljs$core$IFn$_invoke$arity$1(spec), 
  new cljs.core.Keyword(null, "size", "size", 1017434995), 3], null), new cljs.core.Keyword(null, "normal", "normal", 4269125721), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "data", "data", 1016980252), (new cljs.core.Keyword(null, "normals", "normals", 3141522398)).cljs$core$IFn$_invoke$arity$1(spec), new cljs.core.Keyword(null, "size", "size", 1017434995), 3], null)], null)), new cljs.core.Keyword(null, "mode", "mode", 1017261333), thi.ng.geom.webgl.core.triangles, new cljs.core.Keyword(null, 
  "count", "count", 1108755585), (new cljs.core.Keyword(null, "num-vertices", "num-vertices", 877840850)).cljs$core$IFn$_invoke$arity$1(spec)], null);
  var view_rect = thi.ng.geom.webgl.core.get_viewport_rect.call(null, gl);
  var cam_proj = thi.ng.geom.webgl.core.perspective.call(null, 45, view_rect, 0.1, 100);
  var light_proj = thi.ng.geom.webgl.core.perspective.call(null, 45, 1, 0.01, 100);
  var light_fbo = thi.ng.geom.webgl.shaders.shadow.init_light_fbo.call(null, gl, 256);
  var timer = cljs.core.atom.call(null, 0);
  var fps = document.getElementById("fps");
  thi.ng.geom.webgl.animator.animate.call(null, function(gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps) {
    return function(t) {
      var y = thi.ng.common.math.core.map_interval.call(null, Math.sin.call(null, t * 0.5), -1, 1, 0, 3);
      var cam_view = thi.ng.geom.core.matrix.look_at.call(null, thi.ng.geom.core.rotate_y.call(null, thi.ng.geom.core.vector.vec3.call(null, 0, y, 2), t * 0.4), thi.ng.geom.core.vector.vec3.call(null, 0, 0.6, 0), thi.ng.geom.core.vector.vec3.call(null, 0, 1, 0));
      var model_tx = thi.ng.geom.core.rotate_x.call(null, thi.ng.geom.core.translate.call(null, thi.ng.geom.core.matrix.M44, 0, 0, 0), 0 * 0.15);
      var cone_angle = thi.ng.common.math.core.map_interval.call(null, Math.cos.call(null, t * 0.3), -1, 1, 20, 150);
      var l_rotx = thi.ng.common.math.core.map_interval.call(null, Math.cos.call(null, t * 0.7), -1, 1, 0.15, 0.85) * thi.ng.common.math.core.PI;
      var light_view = thi.ng.geom.core.rotate_y.call(null, thi.ng.geom.core.rotate_x.call(null, thi.ng.geom.core.translate.call(null, thi.ng.geom.core.matrix.M44, 0, 0, -2.5), l_rotx), -0.6);
      var light_rot = thi.ng.geom.core.matrix.matrix44__GT_matrix33_rot.call(null, light_view);
      thi.ng.geom.webgl.shaders.shadow.draw_light_pass.call(null, gl, light_fbo, function(y, cam_view, model_tx, cone_angle, l_rotx, light_view, light_rot, gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps) {
        return function() {
          return thi.ng.geom.webgl.buffers.draw_arrays.call(null, gl, cljs.core.assoc.call(null, model, new cljs.core.Keyword(null, "shader", "shader", 4405291863), light_shader, new cljs.core.Keyword(null, "attribs", "attribs", 4634025563), cljs.core.select_keys.call(null, (new cljs.core.Keyword(null, "attribs", "attribs", 4634025563)).cljs$core$IFn$_invoke$arity$1(model), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "position", "position", 
          1761709211)], null)), new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "model", "model", 1117974171), model_tx, new cljs.core.Keyword(null, "view", "view", 1017523735), light_view, new cljs.core.Keyword(null, "proj", "proj", 1017353935), light_proj], null)));
        };
      }(y, cam_view, model_tx, cone_angle, l_rotx, light_view, light_rot, gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps));
      thi.ng.geom.webgl.core.set_viewport.call(null, gl, view_rect);
      thi.ng.geom.webgl.core.clear_color_buffer.call(null, gl, 0.08, 0.1, 0.12, 1);
      thi.ng.geom.webgl.shaders.shadow.draw_cam_pass.call(null, gl, (new cljs.core.Keyword(null, "tex", "tex", 1014018969)).cljs$core$IFn$_invoke$arity$1(light_fbo), function(y, cam_view, model_tx, cone_angle, l_rotx, light_view, light_rot, gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps) {
        return function(uniforms) {
          return thi.ng.geom.webgl.buffers.draw_arrays.call(null, gl, cljs.core.assoc.call(null, model, new cljs.core.Keyword(null, "shader", "shader", 4405291863), cam_shader, new cljs.core.Keyword(null, "uniforms", "uniforms", 709120177), cljs.core.assoc.call(null, uniforms, new cljs.core.Keyword(null, "model", "model", 1117974171), model_tx, new cljs.core.Keyword(null, "view", "view", 1017523735), cam_view, new cljs.core.Keyword(null, "proj", "proj", 1017353935), cam_proj, new cljs.core.Keyword(null, 
          "lightView", "lightView", 1699634253), light_view, new cljs.core.Keyword(null, "lightProj", "lightProj", 1699464453), light_proj, new cljs.core.Keyword(null, "lightRot", "lightRot", 2005852243), light_rot, new cljs.core.Keyword(null, "coneAngle", "coneAngle", 4439067362), cone_angle)));
        };
      }(y, cam_view, model_tx, cone_angle, l_rotx, light_view, light_rot, gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps));
      fps.textContent = [cljs.core.str((new Number(1 / (t - cljs.core.deref.call(null, timer)))).toFixed(2)), cljs.core.str("fps")].join("");
      cljs.core.reset_BANG_.call(null, timer, t);
      return true;
    };
  }(gl, light_shader, cam_shader, mesh, room, mesh__$1, spec, model, view_rect, cam_proj, light_proj, light_fbo, timer, fps));
  return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ctx", "ctx", 1014003097), gl], null);
};
goog.exportSymbol("thi.ng.geom.webgl.example01.demo", thi.ng.geom.webgl.example01.demo);
weasel.repl.connect.call(null, "ws://localhost:9001", new cljs.core.Keyword(null, "verbose", "verbose", 1365011700), true);
goog.provide("thi.ng.geom.webgl.version");
goog.require("cljs.core");
thi.ng.geom.webgl.version.version = "0.3.0-SNAPSHOT";
